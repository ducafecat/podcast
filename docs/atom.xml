<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>duCafeCat</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://ducafecat.tech/"/>
  <updated>2020-09-21T02:08:43.866Z</updated>
  <id>https://ducafecat.tech/</id>
  
  <author>
    <name>猫哥</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>HarmonyOS 真的是套壳么，我也好奇的玩了下</title>
    <link href="https://ducafecat.tech/2020/09/18/flutter-daily/harmonyos-2020-v2-research/"/>
    <id>https://ducafecat.tech/2020/09/18/flutter-daily/harmonyos-2020-v2-research/</id>
    <published>2020-09-17T16:00:00.000Z</published>
    <updated>2020-09-21T02:08:43.866Z</updated>
    
    <content type="html"><![CDATA[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-09-18-14-32-16.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="上手一个-Hello-Word"><a href="#上手一个-Hello-Word" class="headerlink" title="上手一个 Hello Word!"></a>上手一个 Hello Word!</h2><p><a href="https://developer.harmonyos.com/cn/develop/deveco-studio#download" target="_blank" rel="noopener">https://developer.harmonyos.com/cn/develop/deveco-studio#download</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-09-18-14-20-01.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="了解下-HUAWEI"><a href="#了解下-HUAWEI" class="headerlink" title="了解下 HUAWEI"></a>了解下 HUAWEI</h2><p><a href="https://www.huawei.com" target="_blank" rel="noopener">https://www.huawei.com</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-09-18-14-02-49.png" alt title>                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-09-18-14-03-15.png" alt title>                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-09-18-14-03-45.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>总结</li></ul><ol><li>华为是做基建、通讯设备的公司</li><li>行业跨度大，企事业+个人业务</li><li>趋势 IoT 设备互联是资源整合的</li></ol><h2 id="HarmonyOS-源码"><a href="#HarmonyOS-源码" class="headerlink" title="HarmonyOS 源码"></a>HarmonyOS 源码</h2><p><a href="https://openharmony.gitee.com" target="_blank" rel="noopener">https://openharmony.gitee.com</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-09-18-14-09-07.png" alt title>                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-09-18-14-09-23.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="核心"><a href="#核心" class="headerlink" title="核心"></a>核心</h3><ul><li>kernel_liteos_a 适用于 cpu 内存 大的</li></ul><p><a href="https://gitee.com/openharmony/kernel_liteos_a" target="_blank" rel="noopener">https://gitee.com/openharmony/kernel_liteos_a</a></p><ul><li>kernel_liteos_m 适用于建议设备</li></ul><p><a href="https://gitee.com/openharmony/kernel_liteos_m" target="_blank" rel="noopener">https://gitee.com/openharmony/kernel_liteos_m</a></p><ul><li>基于开源项目</li></ul><p><a href="http://nuttx.apache.org/" target="_blank" rel="noopener">http://nuttx.apache.org/</a></p><h2 id="开发板卡"><a href="#开发板卡" class="headerlink" title="开发板卡"></a>开发板卡</h2><p><a href="https://device.harmonyos.com/cn/docs/start/introduce/oem_start_guide-0000001054913231" target="_blank" rel="noopener">https://device.harmonyos.com/cn/docs/start/introduce/oem_start_guide-0000001054913231</a><br><a href="https://gitee.com/openharmony/docs/blob/master/quick-start/Hi3861开发板介绍.md" target="_blank" rel="noopener">https://gitee.com/openharmony/docs/blob/master/quick-start/Hi3861开发板介绍.md</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-09-18-14-09-40.png" alt title>                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-09-18-14-16-07.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><ul><li><a href="https://www.huawei.com" target="_blank" rel="noopener">华为官网</a></li><li><a href="https://www.harmonyos.com/cn/develop" target="_blank" rel="noopener">开发者</a></li><li><a href="https://device.harmonyos.com/cn/docs/start/introduce/oem_start_guide-0000001054913231" target="_blank" rel="noopener">开发版卡</a></li><li><a href="https://developer.harmonyos.com/cn/docs/documentation/doc-guides/harmonyos-overview-0000000000011903" target="_blank" rel="noopener">HarmonyOS 文档</a></li><li><p><a href="https://openharmony.gitee.com/" target="_blank" rel="noopener">HarmonyOS 源码</a></p></li><li><hr></li></ul><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p><p><a href="https://ducafecat.gitee.io" target="_blank" rel="noopener">https://ducafecat.gitee.io</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                   
      
    
    </summary>
    
      <category term="其它" scheme="https://ducafecat.tech/categories/%E5%85%B6%E5%AE%83/"/>
    
    
      <category term="HarmonyOS" scheme="https://ducafecat.tech/tags/HarmonyOS/"/>
    
  </entry>
  
  <entry>
    <title>Flutter 2020 学习心得、学习路线</title>
    <link href="https://ducafecat.tech/2020/09/03/flutter-daily/flutter-2020-how-to-learn-flutter-develop/"/>
    <id>https://ducafecat.tech/2020/09/03/flutter-daily/flutter-2020-how-to-learn-flutter-develop/</id>
    <published>2020-09-02T16:00:00.000Z</published>
    <updated>2020-09-18T06:36:11.956Z</updated>
    
    <content type="html"><![CDATA[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-09-03-15-13-56.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="新人上手情况"><a href="#新人上手情况" class="headerlink" title="新人上手情况"></a>新人上手情况</h2><ul><li>语言基础</li><li>数据结构</li><li>网络通信</li><li>前端布局</li><li>动画</li><li>优化点</li></ul><h2 id="前端遇到的最大问题"><a href="#前端遇到的最大问题" class="headerlink" title="前端遇到的最大问题"></a>前端遇到的最大问题</h2><ul><li>原生调试</li><li>原生组件开发</li></ul><h2 id="聊聊学习动机"><a href="#聊聊学习动机" class="headerlink" title="聊聊学习动机"></a>聊聊学习动机</h2><ul><li>单位工作需要</li><li>自己兴趣开发 APP</li><li>毕业设计</li><li>漫无目的、漫无目的的学习</li></ul><h2 id="学习路线"><a href="#学习路线" class="headerlink" title="学习路线"></a>学习路线</h2><p><a href="https://github.com/olexale/flutter_roadmap" target="_blank" rel="noopener">https://github.com/olexale/flutter_roadmap</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-09-03-15-09-44.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h2><ul><li><p>官网 dart<br><a href="https://dart.dev/guides/language/language-tour" target="_blank" rel="noopener">https://dart.dev/guides/language/language-tour</a></p></li><li><p>官网 flutter<br><a href="https://flutter.dev/" target="_blank" rel="noopener">https://flutter.dev/</a><br><a href="https://flutter.cn/" target="_blank" rel="noopener">https://flutter.cn/</a></p></li><li><p>juejin<br><a href="https://juejin.im/tag/Flutter" target="_blank" rel="noopener">https://juejin.im/tag/Flutter</a></p></li><li><p>medium<br><a href="https://medium.com/tag/flutter" target="_blank" rel="noopener">https://medium.com/tag/flutter</a></p></li><li><p>flutter awesome github<br><a href="https://github.com/Solido/awesome-flutter" target="_blank" rel="noopener">https://github.com/Solido/awesome-flutter</a><br><a href="https://github.com/crazycodeboy/awesome-flutter-cn" target="_blank" rel="noopener">https://github.com/crazycodeboy/awesome-flutter-cn</a></p></li><li><p>flutter awesome web<br><a href="https://flutterawesome.com/" target="_blank" rel="noopener">https://flutterawesome.com/</a></p></li><li><p>other<br><a href="https://twitter.com/search?q=flutterdev" target="_blank" rel="noopener">https://twitter.com/search?q=flutterdev</a><br><a href="https://www.facebook.com/search/groups/?q=flutter%20dev" target="_blank" rel="noopener">https://www.facebook.com/search/groups/?q=flutter%20dev</a></p></li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>最快的学习方式有个目标、看优秀源代码，完成你的作品、上线！</p><ul><li><hr></li></ul><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p><p><a href="https://ducafecat.gitee.io" target="_blank" rel="noopener">https://ducafecat.gitee.io</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                   
      
    
    </summary>
    
      <category term="Flutter见闻" scheme="https://ducafecat.tech/categories/Flutter%E8%A7%81%E9%97%BB/"/>
    
    
      <category term="flutter" scheme="https://ducafecat.tech/tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>Flutter 混合开发 - 03 百度地图定位功能 ios 篇</title>
    <link href="https://ducafecat.tech/2020/08/21/flutter-daily/flutter-plugins-03-baidu-map-ios/"/>
    <id>https://ducafecat.tech/2020/08/21/flutter-daily/flutter-plugins-03-baidu-map-ios/</id>
    <published>2020-08-20T16:00:00.000Z</published>
    <updated>2020-08-26T21:48:07.029Z</updated>
    
    <content type="html"><![CDATA[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-08-21-07-19-43.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-08-24-10-01-58.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>创建 ios flutter 插件流程</li><li>集成百度定位功能</li></ul><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><p><a href="https://www.bilibili.com/video/BV1HT4y1L73i/" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1HT4y1L73i/</a></p><iframe src="//player.bilibili.com/player.html?bvid=BV1HT4y1L73i&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="100%" height="400px"> </iframe><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><a href="https://github.com/ducafecat/flutter_baidu_plugin_ducafecat/releases/tag/v1.0.3" target="_blank" rel="noopener">https://github.com/ducafecat/flutter_baidu_plugin_ducafecat/releases/tag/v1.0.3</a></p><h2 id="百度平台部分"><a href="#百度平台部分" class="headerlink" title="百度平台部分"></a>百度平台部分</h2><h3 id="设置-AK"><a href="#设置-AK" class="headerlink" title="设置 AK"></a>设置 AK</h3><p><a href="https://lbsyun.baidu.com/apiconsole/key#/home" target="_blank" rel="noopener">https://lbsyun.baidu.com/apiconsole/key#/home</a></p><ul><li>添加应用</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-08-21-05-56-56.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>查看 Bundle Identifier</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-08-21-05-59-34.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="IOS-部分"><a href="#IOS-部分" class="headerlink" title="IOS 部分"></a>IOS 部分</h2><h3 id="自动部署-CocoaPods"><a href="#自动部署-CocoaPods" class="headerlink" title="自动部署 CocoaPods"></a>自动部署 CocoaPods</h3><ul><li>安装工具</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gem install cocoapods</span><br></pre></td></tr></table></figure><ul><li>ios/flutter_baidu_plugin_ducafecat.podspec</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">  ...</span><br><span class="line">  s.dependency &apos;Flutter&apos;</span><br><span class="line">  s.platform = :ios, &apos;8.0&apos;</span><br><span class="line"></span><br><span class="line">  s.dependency &apos;BMKLocationKit&apos;</span><br><span class="line"></span><br><span class="line">  # Flutter.framework does not contain a i386 slice. Only x86_64 simulators are supported.</span><br><span class="line">  s.pod_target_xcconfig = &#123; &apos;DEFINES_MODULE&apos; =&gt; &apos;YES&apos;, &apos;VALID_ARCHS[sdk=iphonesimulator*]&apos; =&gt; &apos;x86_64&apos; &#125;</span><br><span class="line">end</span><br></pre></td></tr></table></figure><ul><li>安装百度 sdk 包</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pod install</span><br></pre></td></tr></table></figure><ul><li>升级</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pod repo update</span><br></pre></td></tr></table></figure><ul><li>pod search 无法搜索到类库的解决办法（找不到类库）</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">（1）执行pod setup</span><br><span class="line"></span><br><span class="line">（2）删除~/Library/Caches/CocoaPods目录下的search_index.json文件</span><br><span class="line"></span><br><span class="line">    pod setup成功后会生成~/Library/Caches/CocoaPods/search_index.json文件</span><br><span class="line"></span><br><span class="line">    终端输入rm ~/Library/Caches/CocoaPods/search_index.json</span><br><span class="line"></span><br><span class="line">    删除成功后再执行pod search</span><br><span class="line"></span><br><span class="line">（3）执行pod search</span><br></pre></td></tr></table></figure><h3 id="Info-plist-定位授权"><a href="#Info-plist-定位授权" class="headerlink" title="Info.plist 定位授权"></a>Info.plist 定位授权</h3><p>example/ios/Runner/Info.plist</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;dict&gt;</span><br><span class="line">&lt;key&gt;NSLocationWhenInUseUsageDescription&lt;/key&gt;</span><br><span class="line">&lt;string&gt;需要定位&lt;/string&gt;</span><br></pre></td></tr></table></figure><h3 id="消息通知-BdmapFlutterStreamManager"><a href="#消息通知-BdmapFlutterStreamManager" class="headerlink" title="消息通知 BdmapFlutterStreamManager"></a>消息通知 BdmapFlutterStreamManager</h3><ul><li>ios/Classes/BdmapFlutterStreamManager.h</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Header.h</span></span><br><span class="line"><span class="comment">//  bdmap_location_flutter_plugin</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by Wang,Shengzhan on 2020/2/4.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#import <span class="meta-string">&lt;Foundation/Foundation.h&gt;</span></span></span><br><span class="line"><span class="meta">#import <span class="meta-string">&lt;Flutter/Flutter.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">NS_ASSUME_NONNULL_BEGIN</span><br><span class="line">@<span class="class"><span class="keyword">class</span> <span class="title">BdmapFlutterStreamHandler</span>;</span></span><br><span class="line">@interface BdmapFlutterStreamManager : NSObject</span><br><span class="line">+ (instancetype)sharedInstance ;</span><br><span class="line">@property (nonatomic, strong) BdmapFlutterStreamHandler* streamHandler;</span><br><span class="line"></span><br><span class="line">@end</span><br><span class="line"></span><br><span class="line">@interface BdmapFlutterStreamHandler : NSObject&lt;FlutterStreamHandler&gt;</span><br><span class="line">@property (nonatomic, strong) FlutterEventSink eventSink;</span><br><span class="line"></span><br><span class="line">@end</span><br><span class="line">NS_ASSUME_NONNULL_END</span><br></pre></td></tr></table></figure><ul><li>ios/Classes/BdmapFlutterStreamManager.m</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  BdmapFlutterStreamManager.m</span></span><br><span class="line"><span class="comment">//  bdmap_location_flutter_plugin</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by Wang,Shengzhan on 2020/2/4.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#import <span class="meta-string">"BdmapFlutterStreamManager.h"</span></span></span><br><span class="line"></span><br><span class="line">@implementation BdmapFlutterStreamManager</span><br><span class="line"></span><br><span class="line">+ (instancetype)sharedInstance &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">dispatch_once_t</span> onceToken;</span><br><span class="line">    <span class="keyword">static</span> BdmapFlutterStreamManager *manager = nil;</span><br><span class="line">    dispatch_once(&amp;onceToken, ^&#123;</span><br><span class="line">        manager = [[BdmapFlutterStreamManager alloc] init];</span><br><span class="line">        BdmapFlutterStreamHandler * streamHandler = [[BdmapFlutterStreamHandler alloc] init];</span><br><span class="line">        manager.streamHandler = streamHandler;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> manager;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@end</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@implementation BdmapFlutterStreamHandler</span><br><span class="line"></span><br><span class="line">- (FlutterError*)onListenWithArguments:(id)arguments eventSink:(FlutterEventSink)eventSink &#123;</span><br><span class="line">    self.eventSink = eventSink;</span><br><span class="line">    <span class="keyword">return</span> nil;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (FlutterError*)onCancelWithArguments:(id)arguments &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> nil;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@end</span><br></pre></td></tr></table></figure><h3 id="地图接口业务-FlutterBaiduPluginDucafecatPlugin"><a href="#地图接口业务-FlutterBaiduPluginDucafecatPlugin" class="headerlink" title="地图接口业务 FlutterBaiduPluginDucafecatPlugin"></a>地图接口业务 FlutterBaiduPluginDucafecatPlugin</h3><ul><li>ios/Classes/FlutterBaiduPluginDucafecatPlugin.h</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">&lt;Flutter/Flutter.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">@interface FlutterBaiduPluginDucafecatPlugin : NSObject&lt;FlutterPlugin&gt;</span><br><span class="line">@end</span><br></pre></td></tr></table></figure><ul><li>ios/Classes/FlutterBaiduPluginDucafecatPlugin.m</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">"FlutterBaiduPluginDucafecatPlugin.h"</span></span></span><br><span class="line"><span class="meta">#import <span class="meta-string">"BMKLocationkit/BMKLocationComponent.h"</span></span></span><br><span class="line"><span class="meta">#import <span class="meta-string">"BdmapFlutterStreamManager.h"</span></span></span><br><span class="line"></span><br><span class="line">@<span class="function">interface <span class="title">FlutterBaiduPluginDucafecatPlugin</span><span class="params">()</span>&lt;BMKLocationManagerDelegate&gt;</span></span><br><span class="line"><span class="function"></span></span><br><span class="line">@property (nonatomic,strong) BMKLocationManager *locManager;</span><br><span class="line"></span><br><span class="line">@property (nonatomic, copy) FlutterResult flutterResult;</span><br><span class="line"></span><br><span class="line">@end</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@implementation FlutterBaiduPluginDucafecatPlugin</span><br><span class="line">+ (<span class="keyword">void</span>)registerWithRegistrar:(NSObject&lt;FlutterPluginRegistrar&gt;*)registrar &#123;</span><br><span class="line">  <span class="comment">// FlutterMethodChannel* channel = [FlutterMethodChannel</span></span><br><span class="line">  <span class="comment">//     methodChannelWithName:@"flutter_baidu_plugin_ducafecat"</span></span><br><span class="line">  <span class="comment">//           binaryMessenger:[registrar messenger]];</span></span><br><span class="line">  <span class="comment">// FlutterBaiduPluginDucafecatPlugin* instance = [[FlutterBaiduPluginDucafecatPlugin alloc] init];</span></span><br><span class="line">  <span class="comment">// [registrar addMethodCallDelegate:instance channel:channel];</span></span><br><span class="line"></span><br><span class="line">    FlutterMethodChannel* channel = [FlutterMethodChannel</span><br><span class="line">                                     methodChannelWithName:@<span class="string">"flutter_baidu_plugin_ducafecat"</span></span><br><span class="line">                                     binaryMessenger:[registrar messenger]];</span><br><span class="line"></span><br><span class="line">    FlutterBaiduPluginDucafecatPlugin* instance = [[FlutterBaiduPluginDucafecatPlugin alloc] init];</span><br><span class="line"></span><br><span class="line">    [registrar addMethodCallDelegate:instance channel:channel];</span><br><span class="line"></span><br><span class="line">    FlutterEventChannel *eventChanel = [FlutterEventChannel eventChannelWithName:@<span class="string">"flutter_baidu_plugin_ducafecat_stream"</span> binaryMessenger:[registrar messenger]];</span><br><span class="line"></span><br><span class="line">    [eventChanel setStreamHandler:[[BdmapFlutterStreamManager sharedInstance] streamHandler]];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// - (void)handleMethodCall:(FlutterMethodCall*)call result:(FlutterResult)result &#123;</span></span><br><span class="line"><span class="comment">//   if ([@"getPlatformVersion" isEqualToString:call.method]) &#123;</span></span><br><span class="line"><span class="comment">//     result([@"iOS " stringByAppendingString:[[UIDevice currentDevice] systemVersion]]);</span></span><br><span class="line"><span class="comment">//   &#125;</span></span><br><span class="line"><span class="comment">//   else if ([@"duAddOne" isEqualToString:call.method]) &#123;</span></span><br><span class="line"><span class="comment">//       NSInteger val = 100;</span></span><br><span class="line"><span class="comment">//       val += [[call.arguments objectForKey:@"num"] intValue];</span></span><br><span class="line"><span class="comment">//       result([NSNumber numberWithLong:val]);</span></span><br><span class="line"><span class="comment">//   &#125;</span></span><br><span class="line"><span class="comment">//   else &#123;</span></span><br><span class="line"><span class="comment">//     result(FlutterMethodNotImplemented);</span></span><br><span class="line"><span class="comment">//   &#125;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)handleMethodCall:(FlutterMethodCall*)call result:(FlutterResult)result &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ([@<span class="string">"getPlatformVersion"</span> isEqualToString:call.method]) &#123;</span><br><span class="line"></span><br><span class="line">        result([@<span class="string">"iOS "</span> stringByAppendingString:[[UIDevice currentDevice] systemVersion]]);</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> ([@<span class="string">"startLocation"</span> isEqualToString:call.method])&#123; <span class="comment">// 开始定位</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        NSLog((@"\n[bdmap_loc_flutter_plugin:%s]"), "startLocation...");</span></span><br><span class="line">        [self startLocation:result];</span><br><span class="line"></span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span> ([@<span class="string">"stopLocation"</span> isEqualToString:call.method])&#123; <span class="comment">// 停止定位</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        NSLog((@"\n[bdmap_loc_flutter_plugin:%s]"), "stopLocation...");</span></span><br><span class="line">        [self stopLocation];</span><br><span class="line">        result(@YES);</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> ([@<span class="string">"updateOption"</span> isEqualToString:call.method] ) &#123; <span class="comment">// 设置定位参数</span></span><br><span class="line"></span><br><span class="line">        result(@([self updateOption:call.arguments]));</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> ([@<span class="string">"setApiKey"</span> isEqualToString:call.method])&#123; <span class="comment">// 设置ios端ak</span></span><br><span class="line"><span class="comment">//        NSLog((@"\n[bdmap_loc_flutter_plugin:%s]"), "setApiKey...");</span></span><br><span class="line">        [[BMKLocationAuth sharedInstance] checkPermisionWithKey:call.arguments authDelegate:self];</span><br><span class="line">        result(@YES);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">        result(FlutterMethodNotImplemented);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 获取设置的期望定位精度</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">-(<span class="keyword">double</span>)getDesiredAccuracy:(NSString*)str&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>([@<span class="string">"kCLLocationAccuracyBest"</span> isEqualToString:str]) &#123;</span><br><span class="line">        <span class="keyword">return</span> kCLLocationAccuracyBest;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> ([@<span class="string">"kCLLocationAccuracyNearestTenMeters"</span> isEqualToString:str]) &#123;</span><br><span class="line">        <span class="keyword">return</span> kCLLocationAccuracyNearestTenMeters;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> ([@<span class="string">"kCLLocationAccuracyHundredMeters"</span> isEqualToString:str]) &#123;</span><br><span class="line">        <span class="keyword">return</span> kCLLocationAccuracyHundredMeters;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> ([@<span class="string">"kCLLocationAccuracyKilometer"</span> isEqualToString:str]) &#123;</span><br><span class="line">        <span class="keyword">return</span> kCLLocationAccuracyKilometer;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> kCLLocationAccuracyBest;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 获取设置的经纬度坐标系类型</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">-(<span class="keyword">int</span>)getCoordinateType:(NSString*)str&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>([@<span class="string">"BMKLocationCoordinateTypeBMK09LL"</span> isEqualToString:str]) &#123;</span><br><span class="line">        <span class="keyword">return</span> BMKLocationCoordinateTypeBMK09LL;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> ([@<span class="string">"BMKLocationCoordinateTypeBMK09MC"</span> isEqualToString:str]) &#123;</span><br><span class="line">        <span class="keyword">return</span> BMKLocationCoordinateTypeBMK09MC;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> ([@<span class="string">"BMKLocationCoordinateTypeWGS84"</span> isEqualToString:str]) &#123;</span><br><span class="line">        <span class="keyword">return</span> BMKLocationCoordinateTypeWGS84;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> ([@<span class="string">"BMKLocationCoordinateTypeGCJ02"</span> isEqualToString:str]) &#123;</span><br><span class="line">        <span class="keyword">return</span> BMKLocationCoordinateTypeGCJ02;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> BMKLocationCoordinateTypeGCJ02;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 获取设置的应用位置类型</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">-(<span class="keyword">int</span>)getActivityType:(NSString*)str&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ([@<span class="string">"CLActivityTypeOther"</span> isEqualToString:str]) &#123;</span><br><span class="line">        <span class="keyword">return</span> CLActivityTypeOther;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> ([@<span class="string">"CLActivityTypeAutomotiveNavigation"</span> isEqualToString:str]) &#123;</span><br><span class="line">        <span class="keyword">return</span> CLActivityTypeAutomotiveNavigation;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> ([@<span class="string">"CLActivityTypeFitness"</span> isEqualToString:str]) &#123;</span><br><span class="line">        <span class="keyword">return</span> CLActivityTypeFitness;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> ([@<span class="string">"CLActivityTypeOtherNavigation"</span> isEqualToString:str]) &#123;</span><br><span class="line">        <span class="keyword">return</span> CLActivityTypeOtherNavigation;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> CLActivityTypeAutomotiveNavigation;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 解析flutter端所设置的定位SDK参数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">-(BOOL)updateOption:(NSDictionary*)args &#123;</span><br><span class="line">    <span class="keyword">if</span>(self.locManager) &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        NSLog(@"定位参数配置:%@",args);</span></span><br><span class="line"></span><br><span class="line">        self.locManager.isNeedNewVersionReGeocode = YES;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置期望定位精度</span></span><br><span class="line">        <span class="keyword">if</span> ([[args allKeys] containsObject:@<span class="string">"desiredAccuracy"</span>]) &#123;</span><br><span class="line">          [self.locManager setDesiredAccuracy:[ self getDesiredAccuracy: args[@<span class="string">"desiredAccuracy"</span>]]];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置定位的最小更新距离</span></span><br><span class="line">        <span class="keyword">if</span> ([[args allKeys] containsObject:@<span class="string">"distanceFilter"</span>]) &#123;</span><br><span class="line">            self.locManager.distanceFilter = [args[@<span class="string">"distanceFilter"</span>] doubleValue];</span><br><span class="line"><span class="comment">//            NSLog(@"最小更新距离值:%f", [args[@"distanceFilter"] doubleValue]);</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置返回位置坐标系类型</span></span><br><span class="line">        <span class="keyword">if</span> ([[args allKeys] containsObject:@<span class="string">"BMKLocationCoordinateType"</span>]) &#123;</span><br><span class="line">            [self.locManager setCoordinateType:[ self getCoordinateType: args[@<span class="string">"desiredAccuracy"</span>]]];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置应用位置类型</span></span><br><span class="line">        <span class="keyword">if</span> ([[args allKeys] containsObject:@<span class="string">"activityType"</span>]) &#123;</span><br><span class="line">            [self.locManager setActivityType:[ self getActivityType: args[@<span class="string">"desiredAccuracy"</span>]]];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置是否需要返回新版本rgc信息</span></span><br><span class="line">        <span class="keyword">if</span> ([[args allKeys] containsObject:@<span class="string">"isNeedNewVersionRgc"</span>]) &#123;</span><br><span class="line">            <span class="keyword">if</span> ((<span class="keyword">bool</span>)args[@<span class="string">"desiredAccuracy"</span>]) &#123;</span><br><span class="line"><span class="comment">//                NSLog(@"需要返回新版本rgc信息");</span></span><br><span class="line">                self.locManager.isNeedNewVersionReGeocode = YES;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//                NSLog(@"不需要返回新版本rgc信息");</span></span><br><span class="line">                self.locManager.isNeedNewVersionReGeocode = NO;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 指定定位是否会被系统自动暂停</span></span><br><span class="line">        <span class="keyword">if</span> ([[args allKeys] containsObject:@<span class="string">"pausesLocationUpdatesAutomatically"</span>]) &#123;</span><br><span class="line">            <span class="keyword">if</span> ((<span class="keyword">bool</span>)args[@<span class="string">"pausesLocationUpdatesAutomatically"</span>]) &#123;</span><br><span class="line"><span class="comment">//                NSLog(@"设置定位被系统自动暂停");</span></span><br><span class="line">                self.locManager.isNeedNewVersionReGeocode = YES;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//                NSLog(@"设置定位不能被系统自动暂停");</span></span><br><span class="line">                self.locManager.isNeedNewVersionReGeocode = NO;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置是否允许后台定位</span></span><br><span class="line">        <span class="keyword">if</span> ([[args allKeys] containsObject:@<span class="string">"allowsBackgroundLocationUpdates"</span>]) &#123;</span><br><span class="line">             <span class="keyword">if</span> ((<span class="keyword">bool</span>)args[@<span class="string">"allowsBackgroundLocationUpdates"</span>]) &#123;</span><br><span class="line"><span class="comment">//                  NSLog(@"设置允许后台定位");</span></span><br><span class="line">                  self.locManager.isNeedNewVersionReGeocode = YES;</span><br><span class="line">             &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//                  NSLog(@"设置不允许后台定位");</span></span><br><span class="line">                  self.locManager.isNeedNewVersionReGeocode = NO;</span><br><span class="line">                 self.locManager.distanceFilter = kCLDistanceFilterNone;</span><br><span class="line">             &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置定位超时时间</span></span><br><span class="line">        <span class="keyword">if</span> ([[args allKeys] containsObject:@<span class="string">"locationTimeout"</span>]) &#123;</span><br><span class="line">            [self.locManager setLocationTimeout:[args[@<span class="string">"locationTimeout"</span>] integerValue]];</span><br><span class="line">            self.locManager.coordinateType = BMKLocationCoordinateTypeGCJ02;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置逆地理超时时间</span></span><br><span class="line">        <span class="keyword">if</span> ([[args allKeys] containsObject:@<span class="string">"reGeocodeTimeout"</span>]) &#123;</span><br><span class="line">            [self.locManager setReGeocodeTimeout:[args[@<span class="string">"reGeocodeTimeout"</span>] integerValue]];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> YES;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> NO;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 启动定位</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">void</span>)startLocation:(FlutterResult)result</span><br><span class="line">&#123;</span><br><span class="line">    self.flutterResult = result;</span><br><span class="line">    [self.locManager startUpdatingLocation];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 停止定位</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">void</span>)stopLocation</span><br><span class="line">&#123;</span><br><span class="line">    self.flutterResult = nil;</span><br><span class="line">    [self.locManager stopUpdatingLocation];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (BMKLocationManager *)locManager &#123;</span><br><span class="line">    <span class="keyword">if</span> (!_locManager) &#123;</span><br><span class="line">        _locManager = [[BMKLocationManager alloc] init];</span><br><span class="line">        _locManager.locatingWithReGeocode = YES;</span><br><span class="line">        _locManager.delegate = self;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> _locManager;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  @brief 连续定位回调函数</span></span><br><span class="line"><span class="comment"> *  @param manager 定位 BMKLocationManager 类。</span></span><br><span class="line"><span class="comment"> *  @param location 定位结果。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">void</span>)BMKLocationManager:(BMKLocationManager * _Nonnull)manager didUpdateLocation:(BMKLocation * _Nullable)location orError:(NSError * _Nullable)error</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (error)</span><br><span class="line">    &#123;</span><br><span class="line"><span class="comment">//        NSLog(@"locError:&#123;%ld - %@&#125;;", (long)error.code, error.localizedDescription);</span></span><br><span class="line">    &#125; <span class="keyword">if</span> (location) &#123; <span class="comment">// 得到定位信息，添加annotation</span></span><br><span class="line">        NSMutableDictionary *dic = [NSMutableDictionary dictionaryWithCapacity:<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (location) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (location.location.timestamp) &#123;</span><br><span class="line">                [dic setObject:[self getFormatTime:location.location.timestamp] forKey:@<span class="string">"locTime"</span>]; <span class="comment">// 定位时间</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (location.location.horizontalAccuracy) &#123;</span><br><span class="line">                [dic setObject:@(location.location.horizontalAccuracy) forKey:@<span class="string">"radius"</span>]; <span class="comment">// 定位精度</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (location.location.coordinate.latitude) &#123;</span><br><span class="line">                [dic setObject:@(location.location.coordinate.latitude) forKey:@<span class="string">"latitude"</span>]; <span class="comment">// 纬度</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (location.location.coordinate.longitude) &#123;</span><br><span class="line">                [dic setObject:@(location.location.coordinate.longitude) forKey:@<span class="string">"longitude"</span>]; <span class="comment">// 经度</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (location.location.altitude) &#123;</span><br><span class="line"><span class="comment">//                NSLog(@"返回海拔高度信息");</span></span><br><span class="line">                [dic setObject:@(location.location.altitude) forKey:@<span class="string">"altitude"</span>];<span class="comment">// 高度</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (location.rgcData) &#123;</span><br><span class="line">                [dic setObject:[location.rgcData country] forKey:@<span class="string">"country"</span>]; <span class="comment">// 国家</span></span><br><span class="line">                [dic setObject:[location.rgcData province] forKey:@<span class="string">"province"</span>]; <span class="comment">// 省份</span></span><br><span class="line">                [dic setObject:[location.rgcData city] forKey:@<span class="string">"city"</span>]; <span class="comment">// 城市</span></span><br><span class="line">                <span class="keyword">if</span> (location.rgcData.district) &#123;</span><br><span class="line">                    [dic setObject:[location.rgcData district] forKey:@<span class="string">"district"</span>]; <span class="comment">// 区县</span></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (location.rgcData.street) &#123;</span><br><span class="line">                    [dic setObject:[location.rgcData street] forKey:@<span class="string">"street"</span>]; <span class="comment">// 街道</span></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (location.rgcData.description) &#123;</span><br><span class="line">                    <span class="comment">// 地址信息</span></span><br><span class="line">                    [dic setObject:[location.rgcData description] forKey:@<span class="string">"address"</span>];</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (location.rgcData.poiList) &#123;</span><br><span class="line"></span><br><span class="line">                    NSString* poilist;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (location.rgcData.poiList.count == <span class="number">1</span>) &#123;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">for</span> (BMKLocationPoi * poi in location.rgcData.poiList) &#123;</span><br><span class="line">                            poilist = [[poi name] stringByAppendingFormat:@<span class="string">",%@,%@"</span>, [poi tags], [poi addr]];</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; location.rgcData.poiList.count - <span class="number">1</span> ; i++) &#123;</span><br><span class="line">                            poilist = [poilist stringByAppendingFormat:@<span class="string">"%@,%@,%@|"</span>, location.rgcData.poiList[i].name,location.rgcData.poiList[i].tags,location.rgcData.poiList[i].addr];</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        poilist = [poilist stringByAppendingFormat:@<span class="string">"%@,%@,%@"</span>,</span><br><span class="line">                                location.rgcData.poiList[location.rgcData.poiList.count<span class="number">-1</span>].name,location.rgcData.poiList[location.rgcData.poiList.count<span class="number">-1</span>].tags,location.rgcData.poiList[location.rgcData.poiList.count<span class="number">-1</span>].addr];</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line">                    [dic setObject: poilist forKey:@<span class="string">"poiList"</span>]; <span class="comment">// 周边poi信息</span></span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            [dic setObject: @<span class="number">1</span> forKey:@<span class="string">"errorCode"</span>]; <span class="comment">// 定位结果错误码</span></span><br><span class="line">            [dic setObject:@<span class="string">"location is null"</span> forKey:@<span class="string">"errorInfo"</span>]; <span class="comment">// 定位错误信息</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 定位结果回调时间</span></span><br><span class="line">        [dic setObject:[self getFormatTime:[NSDate date]] forKey:@<span class="string">"callbackTime"</span>];</span><br><span class="line"></span><br><span class="line">        [[BdmapFlutterStreamManager sharedInstance] streamHandler].eventSink(dic);</span><br><span class="line"><span class="comment">//        NSLog(@"x=%f,y=%f",location.location.coordinate.latitude,location.location.coordinate.longitude);</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 格式化时间</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (NSString *)getFormatTime:(NSDate*)date</span><br><span class="line">&#123;</span><br><span class="line">    NSDateFormatter *formatter = [[NSDateFormatter alloc] init];</span><br><span class="line">    [formatter setDateFormat:@<span class="string">"YYYY-MM-dd HH:mm:ss"</span>];</span><br><span class="line">    NSString *timeString = [formatter stringFromDate:date];</span><br><span class="line">    <span class="keyword">return</span> timeString;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@end</span><br></pre></td></tr></table></figure><h2 id="Flutter-部分"><a href="#Flutter-部分" class="headerlink" title="Flutter 部分"></a>Flutter 部分</h2><h3 id="设置-AK-1"><a href="#设置-AK-1" class="headerlink" title="设置 AK"></a>设置 AK</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@override</span></span><br><span class="line"><span class="keyword">void</span> initState() &#123;</span><br><span class="line">  <span class="keyword">super</span>.initState();</span><br><span class="line">  _requestPermission(); <span class="comment">// 执行权限请求</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (Platform.isIOS == <span class="keyword">true</span>) &#123;</span><br><span class="line">    FlutterBaiduPluginDucafecat.setApiKeyForIOS(</span><br><span class="line">        <span class="string">"dkYT07blcAj3drBbcN1eGFYqt16HP1pR"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>其它代码和 android 同接口 无影响</p></blockquote><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://lbsyun.baidu.com/apiconsole/key#/home" target="_blank" rel="noopener">https://lbsyun.baidu.com/apiconsole/key#/home</a></li><li><a href="https://flutter.dev/docs/development/packages-and-plugins/developing-packages#step-2c-add-ios-platform-code-swifthm" target="_blank" rel="noopener">https://flutter.dev/docs/development/packages-and-plugins/developing-packages#step-2c-add-ios-platform-code-swifthm</a></li><li><a href="http://lbsyun.baidu.com/index.php?title=ios-locsdk/guide/create-project/cocoapods-create" target="_blank" rel="noopener">http://lbsyun.baidu.com/index.php?title=ios-locsdk/guide/create-project/cocoapods-create</a></li><li><a href="http://lbsyun.baidu.com/index.php?title=ios-locsdk" target="_blank" rel="noopener">http://lbsyun.baidu.com/index.php?title=ios-locsdk</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p><p><a href="https://ducafecat.gitee.io" target="_blank" rel="noopener">https://ducafecat.gitee.io</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                   
      
    
    </summary>
    
      <category term="Flutter混合开发" scheme="https://ducafecat.tech/categories/Flutter%E6%B7%B7%E5%90%88%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="flutter" scheme="https://ducafecat.tech/tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>Flutter 混合开发 - 02 百度地图定位功能 android 篇</title>
    <link href="https://ducafecat.tech/2020/08/04/flutter-daily/flutter-plugins-02-baidu-map-android/"/>
    <id>https://ducafecat.tech/2020/08/04/flutter-daily/flutter-plugins-02-baidu-map-android/</id>
    <published>2020-08-03T16:00:00.000Z</published>
    <updated>2020-08-24T02:04:41.440Z</updated>
    
    <content type="html"><![CDATA[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-08-06-18-10-40.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>百度地图业务</li><li>百度组件初始</li><li>编写定位代码 android 篇</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-08-12-15-01-43.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ flutter doctor</span><br><span class="line">Doctor summary (to see all details, run flutter doctor -v):</span><br><span class="line">[✓] Flutter (Channel stable, 1.20.1, on Mac OS X 10.15.6 19G73, locale zh-Hans-CN)</span><br><span class="line">[✓] Android toolchain - develop <span class="keyword">for</span> Android devices (Android SDK version 29.0.2)</span><br><span class="line">[✓] Xcode - develop <span class="keyword">for</span> iOS and macOS (Xcode 11.6)</span><br><span class="line">[✓] Android Studio (version 4.0)</span><br><span class="line">[✓] VS Code (version 1.47.3)</span><br></pre></td></tr></table></figure><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><p><a href="https://www.bilibili.com/video/BV1iK411T7LC/" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1iK411T7LC/</a></p><iframe src="//player.bilibili.com/player.html?bvid=BV1iK411T7LC&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="100%" height="400px"> </iframe><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><a href="https://github.com/ducafecat/flutter_baidu_plugin_ducafecat/releases/tag/v1.0.2" target="_blank" rel="noopener">https://github.com/ducafecat/flutter_baidu_plugin_ducafecat/releases/tag/v1.0.2</a></p><p>可以直接用 👇 v1.0.3</p><p><a href="https://github.com/ducafecat/flutter_baidu_plugin_ducafecat/releases/tag/v1.0.3" target="_blank" rel="noopener">https://github.com/ducafecat/flutter_baidu_plugin_ducafecat/releases/tag/v1.0.3</a></p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="创建组件的几种方式"><a href="#创建组件的几种方式" class="headerlink" title="创建组件的几种方式"></a>创建组件的几种方式</h3><h4 id="现成轮子直接用"><a href="#现成轮子直接用" class="headerlink" title="现成轮子直接用"></a>现成轮子直接用</h4><ul><li><p>官方仓库搜索</p><p><a href="https://pub.dev/flutter/packages" target="_blank" rel="noopener">https://pub.dev/flutter/packages</a></p><p><a href="https://pub.flutter-io.cn/flutter/packages" target="_blank" rel="noopener">https://pub.flutter-io.cn/flutter/packages</a></p></li></ul><h4 id="可参考的组件代码"><a href="#可参考的组件代码" class="headerlink" title="可参考的组件代码"></a>可参考的组件代码</h4><ul><li><p>通过仓库，查找 github 代码仓</p></li><li><p>网站、客服索取代码</p></li></ul><h4 id="参考官方集成文档编写组件"><a href="#参考官方集成文档编写组件" class="headerlink" title="参考官方集成文档编写组件"></a>参考官方集成文档编写组件</h4><ul><li>官网文档</li></ul><p><a href="http://lbsyun.baidu.com/index.php?title=flutter/loc" target="_blank" rel="noopener">http://lbsyun.baidu.com/index.php?title=flutter/loc</a></p><h3 id="组件代码"><a href="#组件代码" class="headerlink" title="组件代码"></a>组件代码</h3><h4 id="百度应用管理，创建-AK"><a href="#百度应用管理，创建-AK" class="headerlink" title="百度应用管理，创建 AK"></a>百度应用管理，创建 AK</h4><ul><li>应用管理</li></ul><p><a href="https://lbsyun.baidu.com/apiconsole/key#/home" target="_blank" rel="noopener">https://lbsyun.baidu.com/apiconsole/key#/home</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-08-06-16-27-33.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>查询 SHA1</li></ul><p><a href="http://lbsyun.baidu.com/index.php?title=FAQ/SHA1" target="_blank" rel="noopener">http://lbsyun.baidu.com/index.php?title=FAQ/SHA1</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-08-06-16-29-26.png" alt title>                </div>                <div class="image-caption"></div>            </figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keytool -list -v -keystore ~/.android/debug.keystore -<span class="built_in">alias</span> androiddebugkey</span><br></pre></td></tr></table></figure><ul><li>设置 AK</li></ul><p>example/android/app/src/main/AndroidManifest.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 在这里设置android端ak--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta-data</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:name</span>=<span class="string">"com.baidu.lbsapi.API_KEY"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:value</span>=<span class="string">"aCUtcLDufllGi4nEaKgU8FmBqufFyekh"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="设置-Android-权限"><a href="#设置-Android-权限" class="headerlink" title="设置 Android 权限"></a>设置 Android 权限</h4><ul><li>文档</li></ul><p><a href="http://lbsyun.baidu.com/index.php?title=android-locsdk/guide/create-project/android-studio" target="_blank" rel="noopener">http://lbsyun.baidu.com/index.php?title=android-locsdk/guide/create-project/android-studio</a></p><ul><li>android/src/main/AndroidManifest.xml</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">package</span>=<span class="string">"tech.ducafecat.flutter_baidu_plugin_ducafecat"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 这个权限用于进行网络定位--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ACCESS_COARSE_LOCATION"</span>&gt;</span><span class="tag">&lt;/<span class="name">uses-permission</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 这个权限用于访问GPS定位--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ACCESS_FINE_LOCATION"</span>&gt;</span><span class="tag">&lt;/<span class="name">uses-permission</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 用于访问wifi网络信息，wifi信息会用于进行网络定位--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ACCESS_WIFI_STATE"</span>&gt;</span><span class="tag">&lt;/<span class="name">uses-permission</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 获取运营商信息，用于支持提供运营商信息相关的接口--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ACCESS_NETWORK_STATE"</span>&gt;</span><span class="tag">&lt;/<span class="name">uses-permission</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 这个权限用于获取wifi的获取权限，wifi信息会用来进行网络定位--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.CHANGE_WIFI_STATE"</span>&gt;</span><span class="tag">&lt;/<span class="name">uses-permission</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 用于读取手机当前的状态--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.READ_PHONE_STATE"</span>&gt;</span><span class="tag">&lt;/<span class="name">uses-permission</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 写入扩展存储，向扩展卡写入数据，用于写入离线定位数据--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.WRITE_EXTERNAL_STORAGE"</span>&gt;</span><span class="tag">&lt;/<span class="name">uses-permission</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 访问网络，网络定位需要上网--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.INTERNET"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 读取系统信息，包含系统版本等信息，用作统计--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"com.android.launcher.permission.READ_SETTINGS"</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 程序在手机屏幕关闭后后台进程仍然运行--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.WAKE_LOCK"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 声明service组件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">service</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:name</span>=<span class="string">"com.baidu.location.f"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:enabled</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:process</span>=<span class="string">":remote"</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">service</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="添加-android-libs-库文件"><a href="#添加-android-libs-库文件" class="headerlink" title="添加 android libs 库文件"></a>添加 android libs 库文件</h4><ul><li>目录 android/libs</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-08-06-16-27-07.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>android/build.gradle</li></ul><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">android &#123;</span><br><span class="line">    compileSdkVersion <span class="number">28</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">sourceSets</span> &#123;</span><br><span class="line">        main &#123;</span><br><span class="line">            jniLibs.srcDir <span class="string">'libs'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        minSdkVersion <span class="number">16</span></span><br><span class="line">    &#125;</span><br><span class="line">    lintOptions &#123;</span><br><span class="line">        disable <span class="string">'InvalidPackage'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">dependencies</span> &#123;</span><br><span class="line">    implementation files(<span class="string">'libs/BaiduLBS_Android.jar'</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="编写-Flutter-组件代码"><a href="#编写-Flutter-组件代码" class="headerlink" title="编写 Flutter 组件代码"></a>编写 Flutter 组件代码</h4><ul><li>目录 lib</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-08-06-16-30-34.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>地理信息 lib/entity/flutter_baidu_location.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// <span class="markdown">百度定位结果类，用于存储各类定位结果信息</span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaiduLocation</span> </span>&#123;</span><br><span class="line">  <span class="comment">/// <span class="markdown">定位成功时间</span></span></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String</span> locTime;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">定位结果类型</span></span></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">int</span> locType;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">半径</span></span></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">double</span> radius;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">纬度</span></span></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">double</span> latitude;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">经度</span></span></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">double</span> longitude;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">海拔</span></span></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">double</span> altitude;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">国家</span></span></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String</span> country;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">省份</span></span></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String</span> province;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">城市</span></span></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String</span> city;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">区县</span></span></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String</span> district;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">街道</span></span></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String</span> street;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">地址</span></span></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String</span> address;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">位置语义化描述，例如"在百度大厦附近"</span></span></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String</span> locationDetail;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">周边poi信息，每个poi之间用"|"隔开</span></span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String</span> poiList;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">定位结果回调时间</span></span></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String</span> callbackTime;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">错误码</span></span></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">int</span> errorCode;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">定位失败描述信息</span></span></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String</span> errorInfo;</span><br><span class="line"></span><br><span class="line">  BaiduLocation(</span><br><span class="line">      &#123;<span class="keyword">this</span>.locTime,</span><br><span class="line">      <span class="keyword">this</span>.locType,</span><br><span class="line">      <span class="keyword">this</span>.radius,</span><br><span class="line">      <span class="keyword">this</span>.latitude,</span><br><span class="line">      <span class="keyword">this</span>.longitude,</span><br><span class="line">      <span class="keyword">this</span>.altitude,</span><br><span class="line">      <span class="keyword">this</span>.country,</span><br><span class="line">      <span class="keyword">this</span>.province,</span><br><span class="line">      <span class="keyword">this</span>.city,</span><br><span class="line">      <span class="keyword">this</span>.district,</span><br><span class="line">      <span class="keyword">this</span>.street,</span><br><span class="line">      <span class="keyword">this</span>.address,</span><br><span class="line">      <span class="keyword">this</span>.locationDetail,</span><br><span class="line">      <span class="keyword">this</span>.poiList,</span><br><span class="line">      <span class="keyword">this</span>.callbackTime,</span><br><span class="line">      <span class="keyword">this</span>.errorCode,</span><br><span class="line">      <span class="keyword">this</span>.errorInfo&#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">根据传入的map生成BaiduLocation对象</span></span></span><br><span class="line">  <span class="keyword">factory</span> BaiduLocation.fromMap(<span class="built_in">dynamic</span> value) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> BaiduLocation(</span><br><span class="line">      locTime: value[<span class="string">'locTime'</span>],</span><br><span class="line">      locType: value[<span class="string">'locType'</span>],</span><br><span class="line">      radius: value[<span class="string">'radius'</span>],</span><br><span class="line">      latitude: value[<span class="string">'latitude'</span>],</span><br><span class="line">      longitude: value[<span class="string">'longitude'</span>],</span><br><span class="line">      altitude: value[<span class="string">'altitude'</span>],</span><br><span class="line">      country: value[<span class="string">'country'</span>],</span><br><span class="line">      province: value[<span class="string">'province'</span>],</span><br><span class="line">      city: value[<span class="string">'city'</span>],</span><br><span class="line">      district: value[<span class="string">'district'</span>],</span><br><span class="line">      street: value[<span class="string">'street'</span>],</span><br><span class="line">      address: value[<span class="string">'address'</span>],</span><br><span class="line">      locationDetail: value[<span class="string">'locationDetail'</span>],</span><br><span class="line">      poiList: value[<span class="string">'poiList'</span>],</span><br><span class="line">      callbackTime: value[<span class="string">'callbackTime'</span>],</span><br><span class="line">      errorCode: value[<span class="string">'errorCode'</span>],</span><br><span class="line">      errorInfo: value[<span class="string">'errorInfo'</span>],</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">获取对本类所有变量赋值后的map键值对</span></span></span><br><span class="line">  <span class="built_in">Map</span> getMap() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="string">"locTime"</span>: locTime,</span><br><span class="line">      <span class="string">"locType"</span>: locType,</span><br><span class="line">      <span class="string">"radius"</span>: radius,</span><br><span class="line">      <span class="string">"latitude"</span>: latitude,</span><br><span class="line">      <span class="string">"longitude"</span>: longitude,</span><br><span class="line">      <span class="string">"altitude"</span>: altitude,</span><br><span class="line">      <span class="string">"country"</span>: country,</span><br><span class="line">      <span class="string">"province"</span>: province,</span><br><span class="line">      <span class="string">"city"</span>: city,</span><br><span class="line">      <span class="string">"district"</span>: district,</span><br><span class="line">      <span class="string">"street"</span>: street,</span><br><span class="line">      <span class="string">"address"</span>: address,</span><br><span class="line">      <span class="string">"locationDescribe"</span>: locationDetail,</span><br><span class="line">      <span class="string">"poiList"</span>: poiList,</span><br><span class="line">      <span class="string">"callbackTime"</span>: callbackTime,</span><br><span class="line">      <span class="string">"errorCode"</span>: errorCode,</span><br><span class="line">      <span class="string">"errorInfo"</span>: errorInfo,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>android 配置项 lib/entity/flutter_baidu_location_android_option.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// <span class="markdown">设置android端定位参数类</span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaiduLocationAndroidOption</span> </span>&#123;</span><br><span class="line">  <span class="comment">/// <span class="markdown">坐标系类型</span></span></span><br><span class="line">  <span class="built_in">String</span> coorType;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">是否需要返回地址信息</span></span></span><br><span class="line">  <span class="built_in">bool</span> isNeedAddres;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">是否需要返回海拔高度信息</span></span></span><br><span class="line">  <span class="built_in">bool</span> isNeedAltitude;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">是否需要返回周边poi信息</span></span></span><br><span class="line">  <span class="built_in">bool</span> isNeedLocationPoiList;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">是否需要返回新版本rgc信息</span></span></span><br><span class="line">  <span class="built_in">bool</span> isNeedNewVersionRgc;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">是否需要返回位置描述信息</span></span></span><br><span class="line">  <span class="built_in">bool</span> isNeedLocationDescribe;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">是否使用gps</span></span></span><br><span class="line">  <span class="built_in">bool</span> openGps;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">可选，设置发起定位请求的间隔，int类型，单位ms</span></span></span><br><span class="line">  <span class="comment">/// <span class="markdown">如果设置为0，则代表单次定位，即仅定位一次，默认为0</span></span></span><br><span class="line">  <span class="comment">/// <span class="markdown">如果设置非0，需设置1000ms以上才有效</span></span></span><br><span class="line">  <span class="built_in">int</span> scanspan;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">设置定位模式，可选的模式有高精度、仅设备、仅网络。默认为高精度模式</span></span></span><br><span class="line">  <span class="built_in">int</span> locationMode;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">可选，设置场景定位参数，包括签到场景、运动场景、出行场景</span></span></span><br><span class="line">  <span class="built_in">int</span> locationPurpose;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">可选，设置返回经纬度坐标类型，默认GCJ02</span></span></span><br><span class="line">  <span class="comment">/// <span class="markdown">GCJ02：国测局坐标；</span></span></span><br><span class="line">  <span class="comment">/// <span class="markdown">BD09ll：百度经纬度坐标；</span></span></span><br><span class="line">  <span class="comment">/// <span class="markdown">BD09：百度墨卡托坐标；</span></span></span><br><span class="line">  <span class="comment">/// <span class="markdown">海外地区定位，无需设置坐标类型，统一返回WGS84类型坐标</span></span></span><br><span class="line">  <span class="keyword">void</span> setCoorType(<span class="built_in">String</span> coorType) &#123;</span><br><span class="line">    <span class="keyword">this</span>.coorType = coorType;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">是否需要返回地址信息</span></span></span><br><span class="line">  <span class="keyword">void</span> setIsNeedAddres(<span class="built_in">bool</span> isNeedAddres) &#123;</span><br><span class="line">    <span class="keyword">this</span>.isNeedAddres = isNeedAddres;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">是否需要返回海拔高度信息</span></span></span><br><span class="line">  <span class="keyword">void</span> setIsNeedAltitude(<span class="built_in">bool</span> isNeedAltitude) &#123;</span><br><span class="line">    <span class="keyword">this</span>.isNeedAltitude = isNeedAltitude;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">是否需要返回周边poi信息</span></span></span><br><span class="line">  <span class="keyword">void</span> setIsNeedLocationPoiList(<span class="built_in">bool</span> isNeedLocationPoiList) &#123;</span><br><span class="line">    <span class="keyword">this</span>.isNeedLocationPoiList = isNeedLocationPoiList;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">是否需要返回位置描述信息</span></span></span><br><span class="line">  <span class="keyword">void</span> setIsNeedLocationDescribe(<span class="built_in">bool</span> isNeedLocationDescribe) &#123;</span><br><span class="line">    <span class="keyword">this</span>.isNeedLocationDescribe = isNeedLocationDescribe;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">是否需要返回新版本rgc信息</span></span></span><br><span class="line">  <span class="keyword">void</span> setIsNeedNewVersionRgc(<span class="built_in">bool</span> isNeedNewVersionRgc) &#123;</span><br><span class="line">    <span class="keyword">this</span>.isNeedNewVersionRgc = isNeedNewVersionRgc;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">是否使用gps</span></span></span><br><span class="line">  <span class="keyword">void</span> setOpenGps(<span class="built_in">bool</span> openGps) &#123;</span><br><span class="line">    <span class="keyword">this</span>.openGps = openGps;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">可选，设置发起定位请求的间隔，int类型，单位ms</span></span></span><br><span class="line">  <span class="comment">/// <span class="markdown">如果设置为0，则代表单次定位，即仅定位一次，默认为0</span></span></span><br><span class="line">  <span class="comment">/// <span class="markdown">如果设置非0，需设置1000ms以上才有效</span></span></span><br><span class="line">  <span class="keyword">void</span> setScanspan(<span class="built_in">int</span> scanspan) &#123;</span><br><span class="line">    <span class="keyword">this</span>.scanspan = scanspan;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">设置定位模式，可选的模式有高精度、仅设备、仅网络，默认为高精度模式</span></span></span><br><span class="line">  <span class="keyword">void</span> setLocationMode(LocationMode locationMode) &#123;</span><br><span class="line">    <span class="keyword">if</span> (locationMode == LocationMode.Hight_Accuracy) &#123;</span><br><span class="line">      <span class="keyword">this</span>.locationMode = <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (locationMode == LocationMode.Device_Sensors) &#123;</span><br><span class="line">      <span class="keyword">this</span>.locationMode = <span class="number">2</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (locationMode == LocationMode.Battery_Saving) &#123;</span><br><span class="line">      <span class="keyword">this</span>.locationMode = <span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">可选，设置场景定位参数，包括签到场景、运动场景、出行场景</span></span></span><br><span class="line">  <span class="keyword">void</span> setLocationPurpose(BDLocationPurpose locationPurpose) &#123;</span><br><span class="line">    <span class="keyword">if</span> (locationPurpose == BDLocationPurpose.SignIn) &#123;</span><br><span class="line">      <span class="keyword">this</span>.locationPurpose = <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (locationPurpose == BDLocationPurpose.Transport) &#123;</span><br><span class="line">      <span class="keyword">this</span>.locationPurpose = <span class="number">2</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (locationPurpose == BDLocationPurpose.Sport) &#123;</span><br><span class="line">      <span class="keyword">this</span>.locationPurpose = <span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  BaiduLocationAndroidOption(</span><br><span class="line">      &#123;<span class="keyword">this</span>.coorType,</span><br><span class="line">      <span class="keyword">this</span>.isNeedAddres,</span><br><span class="line">      <span class="keyword">this</span>.isNeedAltitude,</span><br><span class="line">      <span class="keyword">this</span>.isNeedLocationPoiList,</span><br><span class="line">      <span class="keyword">this</span>.isNeedNewVersionRgc,</span><br><span class="line">      <span class="keyword">this</span>.openGps,</span><br><span class="line">      <span class="keyword">this</span>.isNeedLocationDescribe,</span><br><span class="line">      <span class="keyword">this</span>.scanspan,</span><br><span class="line">      <span class="keyword">this</span>.locationMode,</span><br><span class="line">      <span class="keyword">this</span>.locationPurpose&#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">根据传入的map生成BaiduLocationAndroidOption对象</span></span></span><br><span class="line">  <span class="keyword">factory</span> BaiduLocationAndroidOption.fromMap(<span class="built_in">dynamic</span> value) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> BaiduLocationAndroidOption(</span><br><span class="line">      coorType: value[<span class="string">'coorType'</span>],</span><br><span class="line">      isNeedAddres: value[<span class="string">'isNeedAddres'</span>],</span><br><span class="line">      isNeedAltitude: value[<span class="string">'isNeedAltitude'</span>],</span><br><span class="line">      isNeedLocationPoiList: value[<span class="string">'isNeedLocationPoiList'</span>],</span><br><span class="line">      isNeedNewVersionRgc: value[<span class="string">'isNeedNewVersionRgc'</span>],</span><br><span class="line">      openGps: value[<span class="string">'openGps'</span>],</span><br><span class="line">      isNeedLocationDescribe: value[<span class="string">''</span>],</span><br><span class="line">      scanspan: value[<span class="string">'scanspan'</span>],</span><br><span class="line">      locationMode: value[<span class="string">'locationMode'</span>],</span><br><span class="line">      locationPurpose: value[<span class="string">'LocationPurpose'</span>],</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">获取对本类所有变量赋值后的map键值对</span></span></span><br><span class="line">  <span class="built_in">Map</span> getMap() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="string">"coorType"</span>: coorType,</span><br><span class="line">      <span class="string">"isNeedAddres"</span>: isNeedAddres,</span><br><span class="line">      <span class="string">"isNeedAltitude"</span>: isNeedAltitude,</span><br><span class="line">      <span class="string">"isNeedLocationPoiList"</span>: isNeedLocationPoiList,</span><br><span class="line">      <span class="string">"isNeedNewVersionRgc"</span>: isNeedNewVersionRgc,</span><br><span class="line">      <span class="string">"openGps"</span>: openGps,</span><br><span class="line">      <span class="string">"isNeedLocationDescribe"</span>: isNeedLocationDescribe,</span><br><span class="line">      <span class="string">"scanspan"</span>: scanspan,</span><br><span class="line">      <span class="string">"locationMode"</span>: locationMode,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// <span class="markdown">定位模式枚举类</span></span></span><br><span class="line"><span class="keyword">enum</span> LocationMode &#123;</span><br><span class="line">  <span class="comment">/// <span class="markdown">高精度模式</span></span></span><br><span class="line">  Hight_Accuracy,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">低功耗模式</span></span></span><br><span class="line">  Battery_Saving,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">仅设备(Gps)模式</span></span></span><br><span class="line">  Device_Sensors</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// <span class="markdown">场景定位枚举类</span></span></span><br><span class="line"><span class="keyword">enum</span> BDLocationPurpose &#123;</span><br><span class="line">  <span class="comment">///  <span class="markdown">签到场景</span></span></span><br><span class="line">  <span class="comment">/// <span class="markdown">只进行一次定位返回最接近真实位置的定位结果（定位速度可能会延迟1-3s）</span></span></span><br><span class="line">  SignIn,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">出行场景</span></span></span><br><span class="line">  <span class="comment">/// <span class="markdown">高精度连续定位，适用于有户内外切换的场景，卫星定位和网络定位相互切换，卫星定位成功之后网络定位不再返回，卫星信号断开之后一段时间才会返回网络结果</span></span></span><br><span class="line">  Sport,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">运动场景</span></span></span><br><span class="line">  <span class="comment">/// <span class="markdown">高精度连续定位，适用于有户内外切换的场景，卫星定位和网络定位相互切换，卫星定位成功之后网络定位不再返回，卫星信号断开之后一段时间才会返回网络结果</span></span></span><br><span class="line">  Transport</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>ios 配置项 lib/entity/flutter_baidu_location_ios_option.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// <span class="markdown">设置ios端定位参数类</span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaiduLocationIOSOption</span> </span>&#123;</span><br><span class="line">  <span class="comment">/// <span class="markdown">设置位置获取超时时间</span></span></span><br><span class="line">  <span class="built_in">int</span> locationTimeout;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">设置获取地址信息超时时间</span></span></span><br><span class="line">  <span class="built_in">int</span> reGeocodeTimeout;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">设置应用位置类型</span></span></span><br><span class="line">  <span class="built_in">String</span> activityType;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">设置返回位置的坐标系类型</span></span></span><br><span class="line">  <span class="built_in">String</span> BMKLocationCoordinateType;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">设置预期精度参数</span></span></span><br><span class="line">  <span class="built_in">String</span> desiredAccuracy;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">是否需要最新版本rgc数据</span></span></span><br><span class="line">  <span class="built_in">bool</span> isNeedNewVersionRgc;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">指定定位是否会被系统自动暂停</span></span></span><br><span class="line">  <span class="built_in">bool</span> pausesLocationUpdatesAutomatically;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">指定是否允许后台定位</span></span></span><br><span class="line">  <span class="built_in">bool</span> allowsBackgroundLocationUpdates;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">设定定位的最小更新距离</span></span></span><br><span class="line">  <span class="built_in">double</span> distanceFilter;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">指定是否允许后台定位</span></span></span><br><span class="line">  <span class="comment">/// <span class="markdown">allowsBackgroundLocationUpdates为true则允许后台定位</span></span></span><br><span class="line">  <span class="comment">/// <span class="markdown">allowsBackgroundLocationUpdates为false则不允许后台定位</span></span></span><br><span class="line">  <span class="keyword">void</span> setAllowsBackgroundLocationUpdates(</span><br><span class="line">      <span class="built_in">bool</span> allowsBackgroundLocationUpdates) &#123;</span><br><span class="line">    <span class="keyword">this</span>.allowsBackgroundLocationUpdates = allowsBackgroundLocationUpdates;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">指定定位是否会被系统自动暂停</span></span></span><br><span class="line">  <span class="comment">/// <span class="markdown">pausesLocationUpdatesAutomatically为true则定位会被系统自动暂停</span></span></span><br><span class="line">  <span class="comment">/// <span class="markdown">pausesLocationUpdatesAutomatically为false则定位不会被系统自动暂停</span></span></span><br><span class="line">  <span class="keyword">void</span> setPauseLocUpdateAutomatically(<span class="built_in">bool</span> pausesLocationUpdatesAutomatically) &#123;</span><br><span class="line">    <span class="keyword">this</span>.pausesLocationUpdatesAutomatically =</span><br><span class="line">        pausesLocationUpdatesAutomatically;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">设置位置获取超时时间</span></span></span><br><span class="line">  <span class="keyword">void</span> setLocationTimeout(<span class="built_in">int</span> locationTimeout) &#123;</span><br><span class="line">    <span class="keyword">this</span>.locationTimeout = locationTimeout;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">设置获取地址信息超时时间</span></span></span><br><span class="line">  <span class="keyword">void</span> setReGeocodeTimeout(<span class="built_in">int</span> reGeocodeTimeout) &#123;</span><br><span class="line">    <span class="keyword">this</span>.reGeocodeTimeout = reGeocodeTimeout;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">设置应用位置类型</span></span></span><br><span class="line">  <span class="comment">/// <span class="markdown">activityType可选值包括:</span></span></span><br><span class="line">  <span class="comment">/// <span class="markdown">"CLActivityTypeOther"</span></span></span><br><span class="line">  <span class="comment">/// <span class="markdown">"CLActivityTypeAutomotiveNavigation"</span></span></span><br><span class="line">  <span class="comment">/// <span class="markdown">"CLActivityTypeFitness"</span></span></span><br><span class="line">  <span class="comment">/// <span class="markdown">"CLActivityTypeOtherNavigation"</span></span></span><br><span class="line">  <span class="keyword">void</span> setActivityType(<span class="built_in">String</span> activityType) &#123;</span><br><span class="line">    <span class="keyword">this</span>.activityType = activityType;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">设置返回位置的坐标系类型</span></span></span><br><span class="line">  <span class="comment">/// <span class="markdown">BMKLocationCoordinateType可选值包括:</span></span></span><br><span class="line">  <span class="comment">/// <span class="markdown">"BMKLocationCoordinateTypeBMK09LL"</span></span></span><br><span class="line">  <span class="comment">/// <span class="markdown">"BMKLocationCoordinateTypeBMK09MC"</span></span></span><br><span class="line">  <span class="comment">/// <span class="markdown">"BMKLocationCoordinateTypeWGS84"</span></span></span><br><span class="line">  <span class="comment">/// <span class="markdown">"BMKLocationCoordinateTypeGCJ02"</span></span></span><br><span class="line">  <span class="keyword">void</span> setBMKLocationCoordinateType(<span class="built_in">String</span> BMKLocationCoordinateType) &#123;</span><br><span class="line">    <span class="keyword">this</span>.BMKLocationCoordinateType = BMKLocationCoordinateType;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">设置预期精度参数</span></span></span><br><span class="line">  <span class="comment">/// <span class="markdown">desiredAccuracy可选值包括:</span></span></span><br><span class="line">  <span class="comment">/// <span class="markdown">"kCLLocationAccuracyBest"</span></span></span><br><span class="line">  <span class="comment">/// <span class="markdown">"kCLLocationAccuracyNearestTenMeters"</span></span></span><br><span class="line">  <span class="comment">/// <span class="markdown">"kCLLocationAccuracyHundredMeters"</span></span></span><br><span class="line">  <span class="comment">/// <span class="markdown">"kCLLocationAccuracyKilometer"</span></span></span><br><span class="line">  <span class="keyword">void</span> setDesiredAccuracy(<span class="built_in">String</span> desiredAccuracy) &#123;</span><br><span class="line">    <span class="keyword">this</span>.desiredAccuracy = desiredAccuracy;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">设定定位的最小更新距离</span></span></span><br><span class="line">  <span class="keyword">void</span> setDistanceFilter(<span class="built_in">double</span> distanceFilter) &#123;</span><br><span class="line">    <span class="keyword">this</span>.distanceFilter = distanceFilter;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">是否需要最新版本rgc数据</span></span></span><br><span class="line">  <span class="comment">/// <span class="markdown">isNeedNewVersionRgc为true则需要返回最新版本rgc数据</span></span></span><br><span class="line">  <span class="comment">/// <span class="markdown">isNeedNewVersionRgc为false则不需要返回最新版本rgc数据</span></span></span><br><span class="line">  <span class="keyword">void</span> setIsNeedNewVersionRgc(<span class="built_in">bool</span> isNeedNewVersionRgc) &#123;</span><br><span class="line">    <span class="keyword">this</span>.isNeedNewVersionRgc = isNeedNewVersionRgc;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  BaiduLocationIOSOption(</span><br><span class="line">      &#123;<span class="keyword">this</span>.locationTimeout,</span><br><span class="line">      <span class="keyword">this</span>.reGeocodeTimeout,</span><br><span class="line">      <span class="keyword">this</span>.activityType,</span><br><span class="line">      <span class="keyword">this</span>.BMKLocationCoordinateType,</span><br><span class="line">      <span class="keyword">this</span>.desiredAccuracy,</span><br><span class="line">      <span class="keyword">this</span>.isNeedNewVersionRgc,</span><br><span class="line">      <span class="keyword">this</span>.pausesLocationUpdatesAutomatically,</span><br><span class="line">      <span class="keyword">this</span>.allowsBackgroundLocationUpdates,</span><br><span class="line">      <span class="keyword">this</span>.distanceFilter&#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">根据传入的map生成BaiduLocationIOSOption对象</span></span></span><br><span class="line">  <span class="keyword">factory</span> BaiduLocationIOSOption.fromMap(<span class="built_in">dynamic</span> value) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> BaiduLocationIOSOption(</span><br><span class="line">      locationTimeout: value[<span class="string">'locationTimeout'</span>],</span><br><span class="line">      reGeocodeTimeout: value[<span class="string">'reGeocodeTimeout'</span>],</span><br><span class="line">      activityType: value[<span class="string">'activityType'</span>],</span><br><span class="line">      BMKLocationCoordinateType: value[<span class="string">'BMKLocationCoordinateType'</span>],</span><br><span class="line">      desiredAccuracy: value[<span class="string">'desiredAccuracy'</span>],</span><br><span class="line">      isNeedNewVersionRgc: value[<span class="string">'isNeedNewVersionRgc'</span>],</span><br><span class="line">      pausesLocationUpdatesAutomatically:</span><br><span class="line">          value[<span class="string">'pausesLocationUpdatesAutomatically'</span>],</span><br><span class="line">      allowsBackgroundLocationUpdates: value[<span class="string">'allowsBackgroundLocationUpdates'</span>],</span><br><span class="line">      distanceFilter: value[<span class="string">'distanceFilter'</span>],</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">获取对本类所有变量赋值后的map键值对</span></span></span><br><span class="line">  <span class="built_in">Map</span> getMap() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="string">"locationTimeout"</span>: locationTimeout,</span><br><span class="line">      <span class="string">"reGeocodeTimeout"</span>: reGeocodeTimeout,</span><br><span class="line">      <span class="string">"activityType"</span>: activityType,</span><br><span class="line">      <span class="string">"BMKLocationCoordinateType"</span>: BMKLocationCoordinateType,</span><br><span class="line">      <span class="string">"desiredAccuracy"</span>: desiredAccuracy,</span><br><span class="line">      <span class="string">"isNeedNewVersionRgc"</span>: isNeedNewVersionRgc,</span><br><span class="line">      <span class="string">"pausesLocationUpdatesAutomatically"</span>: pausesLocationUpdatesAutomatically,</span><br><span class="line">      <span class="string">"allowsBackgroundLocationUpdates"</span>: allowsBackgroundLocationUpdates,</span><br><span class="line">      <span class="string">"distanceFilter"</span>: distanceFilter,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>接口 lib/flutter_baidu_plugin_ducafecat.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'dart:async'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'dart:io'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/services.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FlutterBaiduPluginDucafecat</span> </span>&#123;</span><br><span class="line">  <span class="comment">/// <span class="markdown">flutter端主动调用原生端方法</span></span></span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">const</span> MethodChannel _channel =</span><br><span class="line">      <span class="keyword">const</span> MethodChannel(<span class="string">'flutter_baidu_plugin_ducafecat'</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">原生端主动回传结果数据到flutter端</span></span></span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">const</span> EventChannel _stream =</span><br><span class="line">      <span class="keyword">const</span> EventChannel(<span class="string">"flutter_baidu_plugin_ducafecat_stream"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">ios 下设置 key</span></span></span><br><span class="line">  <span class="comment">/// <span class="markdown">android 在 AndroidManifest.xml 中设置</span></span></span><br><span class="line">  <span class="keyword">static</span> Future&lt;<span class="built_in">bool</span>&gt; setApiKey(<span class="built_in">String</span> key) <span class="keyword">async</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">await</span> _channel.invokeMethod(<span class="string">"setApiKey"</span>, key);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">设置定位参数</span></span></span><br><span class="line">  <span class="keyword">void</span> prepareLoc(<span class="built_in">Map</span> androidMap, <span class="built_in">Map</span> iosMap) &#123;</span><br><span class="line">    <span class="built_in">Map</span> map;</span><br><span class="line">    <span class="keyword">if</span> (Platform.isAndroid) &#123;</span><br><span class="line">      map = androidMap;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      map = iosMap;</span><br><span class="line">    &#125;</span><br><span class="line">    _channel.invokeMethod(<span class="string">"updateOption"</span>, map);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">启动定位</span></span></span><br><span class="line">  <span class="keyword">void</span> startLocation() &#123;</span><br><span class="line">    _channel.invokeMethod(<span class="string">'startLocation'</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">停止定位</span></span></span><br><span class="line">  <span class="keyword">void</span> stopLocation() &#123;</span><br><span class="line">    _channel.invokeMethod(<span class="string">'stopLocation'</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">原生端回传键值对map到flutter端</span></span></span><br><span class="line">  <span class="comment">/// <span class="markdown">map中key为isInChina对应的value，如果为1则判断是在国内，为0则判断是在国外</span></span></span><br><span class="line">  <span class="comment">/// <span class="markdown">map中存在key为nearby则判断为已到达设置监听位置附近</span></span></span><br><span class="line">  Stream&lt;<span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">Object</span>&gt;&gt; onResultCallback() &#123;</span><br><span class="line">    Stream&lt;<span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">Object</span>&gt;&gt; _resultMap;</span><br><span class="line">    <span class="keyword">if</span> (_resultMap == <span class="keyword">null</span>) &#123;</span><br><span class="line">      _resultMap = _stream.receiveBroadcastStream().map&lt;<span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">Object</span>&gt;&gt;(</span><br><span class="line">          (element) =&gt; element.cast&lt;<span class="built_in">String</span>, <span class="built_in">Object</span>&gt;());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> _resultMap;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="触发-registerWith-的方式，老项目"><a href="#触发-registerWith-的方式，老项目" class="headerlink" title="触发 registerWith 的方式，老项目"></a>触发 registerWith 的方式，老项目</h4><blockquote><p>// This static function is optional and equivalent to onAttachedToEngine. It supports the old<br>// pre-Flutter-1.12 Android projects. You are encouraged to continue supporting<br>// plugin registration via this function while apps migrate to use the new Android APIs<br>// post-flutter-1.12 via <a href="https://flutter.dev/go/android-project-migration" target="_blank" rel="noopener">https://flutter.dev/go/android-project-migration</a>.</p></blockquote><ul><li>android 组件代码</li></ul><p>android/src/main/java/tech/ducafecat/flutter_baidu_plugin_ducafecat/FlutterBaiduPluginDucafecatPlugin.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">registerWith</span><span class="params">(Registrar registrar)</span> </span>&#123;</span><br><span class="line">  ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>example android 注册组件</li></ul><p>example/android/app/src/main/java/io/flutter/plugins/GeneratedPluginRegistrant.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">GeneratedPluginRegistrant</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">registerWith</span><span class="params">(PluginRegistry registry)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (alreadyRegisteredWith(registry)) &#123;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    LocationFlutterPlugin.registerWith(registry.registrarFor(<span class="string">"com.baidu.bdmap_location_flutter_plugin.LocationFlutterPlugin"</span>));</span><br><span class="line">    PermissionHandlerPlugin.registerWith(registry.registrarFor(<span class="string">"com.baseflow.permissionhandler.PermissionHandlerPlugin"</span>));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">alreadyRegisteredWith</span><span class="params">(PluginRegistry registry)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> String key = GeneratedPluginRegistrant<span class="class">.<span class="keyword">class</span>.<span class="title">getCanonicalName</span>()</span>;</span><br><span class="line">    <span class="keyword">if</span> (registry.hasPlugin(key)) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    registry.registrarFor(key);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="成员变量、同步、异步处理"><a href="#成员变量、同步、异步处理" class="headerlink" title="成员变量、同步、异步处理"></a>成员变量、同步、异步处理</h4><p>MethodChannel 请求方法后，同步返回结果</p><p>EventChannel 组件主动推消息到 Flutter</p><ul><li>android/src/main/java/tech/ducafecat/flutter_baidu_plugin_ducafecat/FlutterBaiduPluginDucafecatPlugin.java</li></ul><p>用到的成员变量先定义下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FlutterBaiduPluginDucafecatPlugin</span> <span class="keyword">implements</span> <span class="title">FlutterPlugin</span>, <span class="title">MethodCallHandler</span>, <span class="title">EventChannel</span>.<span class="title">StreamHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 通道名称</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String CHANNEL_METHOD_LOCATION = <span class="string">"flutter_baidu_plugin_ducafecat"</span>;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String CHANNEL_STREAM_LOCATION = <span class="string">"flutter_baidu_plugin_ducafecat_stream"</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> Context mContext = <span class="keyword">null</span>; <span class="comment">// flutter view context</span></span><br><span class="line">  <span class="keyword">private</span> LocationClient mLocationClient = <span class="keyword">null</span>; <span class="comment">// 定位对象</span></span><br><span class="line">  <span class="keyword">private</span> EventChannel.EventSink mEventSink = <span class="keyword">null</span>; <span class="comment">// 事件对象</span></span><br><span class="line">  <span class="keyword">private</span> BDNotifyListener mNotifyListener; <span class="comment">// 位置提醒对象</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">boolean</span> isPurporseLoc = <span class="keyword">false</span>; <span class="comment">// 签到场景</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">boolean</span> isInChina = <span class="keyword">false</span>;  <span class="comment">// 是否启用国内外位置判断功能</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">boolean</span> isNotify = <span class="keyword">false</span>; <span class="comment">// 位置提醒</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 通道对象</span></span><br><span class="line">  <span class="keyword">private</span> MethodChannel channel = <span class="keyword">null</span>;</span><br><span class="line">  <span class="keyword">private</span> EventChannel eventChannel = <span class="keyword">null</span>;</span><br></pre></td></tr></table></figure><h4 id="组件生命周期"><a href="#组件生命周期" class="headerlink" title="组件生命周期"></a>组件生命周期</h4><ul><li>文件</li></ul><p>android/src/main/java/tech/ducafecat/flutter_baidu_plugin_ducafecat/FlutterBaiduPluginDucafecatPlugin.java</p><ul><li>组件注册 onAttachedToEngine</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAttachedToEngine</span><span class="params">(@NonNull FlutterPluginBinding flutterPluginBinding)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">this</span>.mContext = flutterPluginBinding.getApplicationContext();</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 开始、停止定位</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  channel = <span class="keyword">new</span> MethodChannel(flutterPluginBinding.getBinaryMessenger(), CHANNEL_METHOD_LOCATION);</span><br><span class="line">  channel.setMethodCallHandler(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 监听位置变化</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  eventChannel = <span class="keyword">new</span> EventChannel(flutterPluginBinding.getBinaryMessenger(), CHANNEL_STREAM_LOCATION);</span><br><span class="line">  eventChannel.setStreamHandler(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>老项目 组件注册 registerWith</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">registerWith</span><span class="params">(Registrar registrar)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    FlutterBaiduPluginDucafecatPlugin plugin = <span class="keyword">new</span> FlutterBaiduPluginDucafecatPlugin();</span><br><span class="line">    plugin.mContext = registrar.context();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 开始、停止定位</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">final</span> MethodChannel channel = <span class="keyword">new</span> MethodChannel(registrar.messenger(), CHANNEL_METHOD_LOCATION);</span><br><span class="line">    channel.setMethodCallHandler(plugin);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 监听位置变化</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">final</span> EventChannel eventChannel = <span class="keyword">new</span> EventChannel(registrar.messenger(), CHANNEL_STREAM_LOCATION);</span><br><span class="line">    eventChannel.setStreamHandler(plugin);</span><br><span class="line"></span><br><span class="line"><span class="comment">//    final MethodChannel channel = new MethodChannel(registrar.messenger(), "flutter_baidu_plugin_ducafecat");</span></span><br><span class="line"><span class="comment">//    channel.setMethodCallHandler(new FlutterBaiduPluginDucafecatPlugin());</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><ul><li>注销组件 onCancel</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCancel</span><span class="params">(Object arguments)</span> </span>&#123;</span><br><span class="line">  stopLocation();</span><br><span class="line">  <span class="keyword">if</span> (isNotify) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">null</span> != mLocationClient) &#123;</span><br><span class="line">      mLocationClient.removeNotifyEvent(mNotifyListener);</span><br><span class="line">    &#125;</span><br><span class="line">    mNotifyListener = <span class="keyword">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>销毁组件 onDetachedFromEngine</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDetachedFromEngine</span><span class="params">(@NonNull FlutterPluginBinding binding)</span> </span>&#123;</span><br><span class="line">  channel.setMethodCallHandler(<span class="keyword">null</span>);</span><br><span class="line">  eventChannel.setStreamHandler(<span class="keyword">null</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>方法调用 onMethodCall</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onMethodCall</span><span class="params">(@NonNull MethodCall call, @NonNull Result result)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="string">"startLocation"</span>.equals(call.method)) &#123;</span><br><span class="line">    startLocation(); <span class="comment">// 启动定位</span></span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"stopLocation"</span>.equals(call.method)) &#123;</span><br><span class="line">    stopLocation(); <span class="comment">// 停止定位</span></span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">"updateOption"</span>.equals(call.method)) &#123; <span class="comment">// 设置定位参数</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      updateOption((Map) call.arguments);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">      e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> ((<span class="string">"getPlatformVersion"</span>).equals(call.method)) &#123;</span><br><span class="line">    result.success(<span class="string">"Android "</span> + android.os.Build.VERSION.RELEASE);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    result.notImplemented();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>flutter onListen 回调对象</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onListen</span><span class="params">(Object arguments, EventChannel.EventSink events)</span> </span>&#123;</span><br><span class="line">  mEventSink = events;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="地图业务参数"><a href="#地图业务参数" class="headerlink" title="地图业务参数"></a>地图业务参数</h4><ul><li>更新参数 updateOption</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 准备定位</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> arguments</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">updateOption</span><span class="params">(Map arguments)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">null</span> == mLocationClient) &#123;</span><br><span class="line">    mLocationClient = <span class="keyword">new</span> LocationClient(mContext);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 判断是否启用位置提醒功能</span></span><br><span class="line">  <span class="keyword">if</span> (arguments.containsKey(<span class="string">"isNotify"</span>)) &#123;</span><br><span class="line">    isNotify = <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">null</span> == mNotifyListener) &#123;</span><br><span class="line">      mNotifyListener = <span class="keyword">new</span> MyNotifyLister();</span><br><span class="line">    &#125;</span><br><span class="line">    mLocationClient.registerNotify(mNotifyListener);</span><br><span class="line">    <span class="keyword">double</span> lat = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">double</span> lon = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">float</span> radius = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (arguments.containsKey(<span class="string">"latitude"</span>)) &#123;</span><br><span class="line">      lat = (<span class="keyword">double</span>)arguments.get(<span class="string">"latitude"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (arguments.containsKey(<span class="string">"longitude"</span>)) &#123;</span><br><span class="line">      lon = (<span class="keyword">double</span>)arguments.get(<span class="string">"longitude"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (arguments.containsKey(<span class="string">"radius"</span>)) &#123;</span><br><span class="line">      <span class="keyword">double</span> radius1 = (<span class="keyword">double</span>)arguments.get(<span class="string">"radius"</span>);</span><br><span class="line">      radius = Float.parseFloat(String.valueOf(radius1));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    String coorType = mLocationClient.getLocOption().getCoorType();</span><br><span class="line">    mNotifyListener.SetNotifyLocation(lat, lon, radius, coorType);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    isNotify = <span class="keyword">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  mLocationClient.registerLocationListener(<span class="keyword">new</span> CurrentLocationListener());</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 判断是否启用国内外位置判断功能</span></span><br><span class="line">  <span class="keyword">if</span> (arguments.containsKey(<span class="string">"isInChina"</span>)) &#123;</span><br><span class="line">    isInChina = <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    isInChina =<span class="keyword">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  LocationClientOption option = <span class="keyword">new</span> LocationClientOption();</span><br><span class="line">  parseOptions(option, arguments);</span><br><span class="line">  option.setProdName(<span class="string">"flutter"</span>);</span><br><span class="line">  mLocationClient.setLocOption(option);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>解析定位参数 parseOptions</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 解析定位参数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> option</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> arguments</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">parseOptions</span><span class="params">(LocationClientOption option,Map arguments)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (arguments != <span class="keyword">null</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 可选，设置是否返回逆地理地址信息。默认是true</span></span><br><span class="line">    <span class="keyword">if</span> (arguments.containsKey(<span class="string">"isNeedAddres"</span>)) &#123;</span><br><span class="line">      <span class="keyword">if</span> (((<span class="keyword">boolean</span>)arguments.get(<span class="string">"isNeedAddres"</span>))) &#123;</span><br><span class="line">        option.setIsNeedAddress(<span class="keyword">true</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        option.setIsNeedAddress(<span class="keyword">false</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 可选，设置定位模式，可选的模式有高精度、仅设备、仅网络。默认为高精度模式</span></span><br><span class="line">    <span class="keyword">if</span> (arguments.containsKey(<span class="string">"locationMode"</span>)) &#123;</span><br><span class="line">      <span class="keyword">if</span> (((<span class="keyword">int</span>)arguments.get(<span class="string">"locationMode"</span>)) == <span class="number">1</span>) &#123;</span><br><span class="line">        option.setLocationMode(LocationClientOption.LocationMode.Hight_Accuracy); <span class="comment">// 高精度模式</span></span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (((<span class="keyword">int</span>)arguments.get(<span class="string">"locationMode"</span>)) == <span class="number">2</span>) &#123;</span><br><span class="line">        option.setLocationMode(LocationClientOption.LocationMode.Device_Sensors); <span class="comment">// 仅设备模式</span></span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (((<span class="keyword">int</span>)arguments.get(<span class="string">"locationMode"</span>)) == <span class="number">3</span>) &#123;</span><br><span class="line">        option.setLocationMode(LocationClientOption.LocationMode.Battery_Saving); <span class="comment">// 仅网络模式</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 可选，设置场景定位参数，包括签到场景、运动场景、出行场景</span></span><br><span class="line">    <span class="keyword">if</span> ((arguments.containsKey(<span class="string">"LocationPurpose"</span>))) &#123;</span><br><span class="line">      isPurporseLoc = <span class="keyword">true</span>;</span><br><span class="line">      <span class="keyword">if</span>  (((<span class="keyword">int</span>)arguments.get(<span class="string">"LocationPurpose"</span>)) == <span class="number">1</span>) &#123;</span><br><span class="line">        option.setLocationPurpose(LocationClientOption.BDLocationPurpose.SignIn); <span class="comment">// 签到场景</span></span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (((<span class="keyword">int</span>)arguments.get(<span class="string">"LocationPurpose"</span>)) == <span class="number">2</span>) &#123;</span><br><span class="line">        option.setLocationPurpose(LocationClientOption.BDLocationPurpose.Transport); <span class="comment">// 运动场景</span></span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (((<span class="keyword">int</span>)arguments.get(<span class="string">"LocationPurpose"</span>)) == <span class="number">3</span>) &#123;</span><br><span class="line">        option.setLocationPurpose(LocationClientOption.BDLocationPurpose.Sport); <span class="comment">// 出行场景</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      isPurporseLoc = <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 可选，设置需要返回海拔高度信息</span></span><br><span class="line">    <span class="keyword">if</span> (arguments.containsKey(<span class="string">"isNeedAltitude"</span>)) &#123;</span><br><span class="line">      <span class="keyword">if</span> (((<span class="keyword">boolean</span>)arguments.get(<span class="string">"isNeedAltitude"</span>))) &#123;</span><br><span class="line">        option.setIsNeedAddress(<span class="keyword">true</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        option.setIsNeedAltitude(<span class="keyword">false</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 可选，设置是否使用gps，默认false</span></span><br><span class="line">    <span class="keyword">if</span> (arguments.containsKey(<span class="string">"openGps"</span>)) &#123;</span><br><span class="line">      <span class="keyword">if</span>(((<span class="keyword">boolean</span>)arguments.get(<span class="string">"openGps"</span>))) &#123;</span><br><span class="line">        option.setOpenGps(<span class="keyword">true</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        option.setOpenGps(<span class="keyword">false</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 可选，设置是否允许返回逆地理地址信息，默认是true</span></span><br><span class="line">    <span class="keyword">if</span> (arguments.containsKey(<span class="string">"isNeedLocationDescribe"</span>)) &#123;</span><br><span class="line">      <span class="keyword">if</span>(((<span class="keyword">boolean</span>)arguments.get(<span class="string">"isNeedLocationDescribe"</span>))) &#123;</span><br><span class="line">        option.setIsNeedLocationDescribe(<span class="keyword">true</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        option.setIsNeedLocationDescribe(<span class="keyword">false</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 可选，设置发起定位请求的间隔，int类型，单位ms</span></span><br><span class="line">    <span class="comment">// 如果设置为0，则代表单次定位，即仅定位一次，默认为0</span></span><br><span class="line">    <span class="comment">// 如果设置非0，需设置1000ms以上才有效</span></span><br><span class="line">    <span class="keyword">if</span> (arguments.containsKey(<span class="string">"scanspan"</span>)) &#123;</span><br><span class="line">      option.setScanSpan((<span class="keyword">int</span>)arguments.get(<span class="string">"scanspan"</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 可选，设置返回经纬度坐标类型，默认GCJ02</span></span><br><span class="line">    <span class="comment">// GCJ02：国测局坐标；</span></span><br><span class="line">    <span class="comment">// BD09ll：百度经纬度坐标；</span></span><br><span class="line">    <span class="comment">// BD09：百度墨卡托坐标；</span></span><br><span class="line">    <span class="comment">// 海外地区定位，无需设置坐标类型，统一返回WGS84类型坐标</span></span><br><span class="line">    <span class="keyword">if</span> (arguments.containsKey(<span class="string">"coorType"</span>)) &#123;</span><br><span class="line">      option.setCoorType((String)arguments.get(<span class="string">"coorType"</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置是否需要返回附近的poi列表</span></span><br><span class="line">    <span class="keyword">if</span> (arguments.containsKey(<span class="string">"isNeedLocationPoiList"</span>)) &#123;</span><br><span class="line">      <span class="keyword">if</span> (((<span class="keyword">boolean</span>)arguments.get(<span class="string">"isNeedLocationPoiList"</span>))) &#123;</span><br><span class="line">        option.setIsNeedLocationPoiList(<span class="keyword">true</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        option.setIsNeedLocationPoiList(<span class="keyword">false</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 设置是否需要最新版本rgc数据</span></span><br><span class="line">    <span class="keyword">if</span> (arguments.containsKey(<span class="string">"isNeedNewVersionRgc"</span>)) &#123;</span><br><span class="line">      <span class="keyword">if</span> (((<span class="keyword">boolean</span>)arguments.get(<span class="string">"isNeedNewVersionRgc"</span>))) &#123;</span><br><span class="line">        option.setIsNeedLocationPoiList(<span class="keyword">true</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        option.setIsNeedLocationPoiList(<span class="keyword">false</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="编写启动、停止功能"><a href="#编写启动、停止功能" class="headerlink" title="编写启动、停止功能"></a>编写启动、停止功能</h4><ul><li>开始定位</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">startLocation</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(<span class="keyword">null</span> != mLocationClient) &#123;</span><br><span class="line">    mLocationClient.start();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>停止定位</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">stopLocation</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">null</span> != mLocationClient) &#123;</span><br><span class="line">    mLocationClient.stop();</span><br><span class="line">    mLocationClient = <span class="keyword">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="百度定位回调"><a href="#百度定位回调" class="headerlink" title="百度定位回调"></a>百度定位回调</h4><ul><li>CurrentLocationListener</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 格式化时间</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> time</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> strPattern</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">private</span> String <span class="title">formatUTC</span><span class="params">(<span class="keyword">long</span> time, String strPattern)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (TextUtils.isEmpty(strPattern)) &#123;</span><br><span class="line">      strPattern = <span class="string">"yyyy-MM-dd HH:mm:ss"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    SimpleDateFormat sdf = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      sdf = <span class="keyword">new</span> SimpleDateFormat(strPattern, Locale.CHINA);</span><br><span class="line">      sdf.applyPattern(strPattern);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Throwable e) &#123;</span><br><span class="line">      e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sdf == <span class="keyword">null</span> ? <span class="string">"NULL"</span> : sdf.format(time);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="class"><span class="keyword">class</span> <span class="title">CurrentLocationListener</span> <span class="keyword">extends</span> <span class="title">BDAbstractLocationListener</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceiveLocation</span><span class="params">(BDLocation bdLocation)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">null</span> == mEventSink) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      Map&lt;String, Object&gt; result = <span class="keyword">new</span> LinkedHashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 判断国内外获取结果</span></span><br><span class="line">      <span class="keyword">if</span> (isInChina) &#123;</span><br><span class="line">        <span class="keyword">if</span> (bdLocation.getLocationWhere() == BDLocation.LOCATION_WHERE_IN_CN) &#123;</span><br><span class="line">          result.put(<span class="string">"isInChina"</span>, <span class="number">1</span>); <span class="comment">// 在国内</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          result.put(<span class="string">"isInChina"</span>, <span class="number">0</span>); <span class="comment">// 在国外</span></span><br><span class="line">        &#125;</span><br><span class="line">        mEventSink.success(result);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 场景定位获取结果</span></span><br><span class="line">      <span class="keyword">if</span> (isPurporseLoc) &#123;</span><br><span class="line">        result.put(<span class="string">"latitude"</span>, bdLocation.getLatitude()); <span class="comment">// 纬度</span></span><br><span class="line">        result.put(<span class="string">"longitude"</span>, bdLocation.getLongitude()); <span class="comment">// 经度</span></span><br><span class="line">        mEventSink.success(result);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      result.put(<span class="string">"callbackTime"</span>, formatUTC(System.currentTimeMillis(), <span class="string">"yyyy-MM-dd HH:mm:ss"</span>));</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">null</span> != bdLocation) &#123;</span><br><span class="line">        <span class="keyword">if</span> (bdLocation.getLocType() == BDLocation.TypeGpsLocation</span><br><span class="line">                || bdLocation.getLocType() == BDLocation.TypeNetWorkLocation</span><br><span class="line">                || bdLocation.getLocType() == BDLocation.TypeOffLineLocation) &#123;</span><br><span class="line">          result.put(<span class="string">"locType"</span>, bdLocation.getLocType()); <span class="comment">// 定位结果类型</span></span><br><span class="line">          result.put(<span class="string">"locTime"</span>, bdLocation.getTime()); <span class="comment">// 定位成功时间</span></span><br><span class="line">          result.put(<span class="string">"latitude"</span>, bdLocation.getLatitude()); <span class="comment">// 纬度</span></span><br><span class="line">          result.put(<span class="string">"longitude"</span>, bdLocation.getLongitude()); <span class="comment">// 经度</span></span><br><span class="line">          <span class="keyword">if</span> (bdLocation.hasAltitude()) &#123;</span><br><span class="line">            result.put(<span class="string">"altitude"</span>, bdLocation.getAltitude()); <span class="comment">// 高度</span></span><br><span class="line">          &#125;</span><br><span class="line">          result.put(<span class="string">"radius"</span>, Double.parseDouble(String.valueOf(bdLocation.getRadius()))); <span class="comment">// 定位精度</span></span><br><span class="line">          result.put(<span class="string">"country"</span>, bdLocation.getCountry()); <span class="comment">// 国家</span></span><br><span class="line">          result.put(<span class="string">"province"</span>, bdLocation.getProvince()); <span class="comment">// 省份</span></span><br><span class="line">          result.put(<span class="string">"city"</span>, bdLocation.getCity()); <span class="comment">// 城市</span></span><br><span class="line">          result.put(<span class="string">"district"</span>, bdLocation.getDistrict()); <span class="comment">// 区域</span></span><br><span class="line">          result.put(<span class="string">"town"</span>, bdLocation.getTown()); <span class="comment">// 城镇</span></span><br><span class="line">          result.put(<span class="string">"street"</span>, bdLocation.getStreet()); <span class="comment">// 街道</span></span><br><span class="line">          result.put(<span class="string">"address"</span>, bdLocation.getAddrStr()); <span class="comment">// 地址</span></span><br><span class="line">          result.put(<span class="string">"locationDetail"</span>, bdLocation.getLocationDescribe()); <span class="comment">// 位置语义化描述</span></span><br><span class="line">          <span class="keyword">if</span> (<span class="keyword">null</span> != bdLocation.getPoiList() &amp;&amp; !bdLocation.getPoiList().isEmpty()) &#123;</span><br><span class="line"></span><br><span class="line">            List&lt;Poi&gt; pois = bdLocation.getPoiList();</span><br><span class="line">            StringBuilder stringBuilder = <span class="keyword">new</span> StringBuilder();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (pois.size() == <span class="number">1</span>) &#123;</span><br><span class="line">              stringBuilder.append(pois.get(<span class="number">0</span>).getName()).append(<span class="string">","</span>).append(pois.get(<span class="number">0</span>).getTags())</span><br><span class="line">                      .append(pois.get(<span class="number">0</span>).getAddr());</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; pois.size() - <span class="number">1</span>; i++) &#123;</span><br><span class="line">                stringBuilder.append(pois.get(i).getName()).append(<span class="string">","</span>).append(pois.get(i).getTags())</span><br><span class="line">                        .append(pois.get(i).getAddr()).append(<span class="string">"|"</span>);</span><br><span class="line">              &#125;</span><br><span class="line">              stringBuilder.append(pois.get(pois.size()-<span class="number">1</span>).getName()).append(<span class="string">","</span>).append(pois.get(pois.size()-<span class="number">1</span>).getTags())</span><br><span class="line">                      .append(pois.get(pois.size()-<span class="number">1</span>).getAddr());</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            result.put(<span class="string">"poiList"</span>,stringBuilder.toString()); <span class="comment">// 周边poi信息</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">if</span> (bdLocation.getFloor() != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">// 当前支持高精度室内定位</span></span><br><span class="line">            String buildingID = bdLocation.getBuildingID();<span class="comment">// 百度内部建筑物ID</span></span><br><span class="line">            String buildingName = bdLocation.getBuildingName();<span class="comment">// 百度内部建筑物缩写</span></span><br><span class="line">            String floor = bdLocation.getFloor();<span class="comment">// 室内定位的楼层信息，如 f1,f2,b1,b2</span></span><br><span class="line">            StringBuilder stringBuilder = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">            stringBuilder.append(buildingID).append(<span class="string">"-"</span>).append(buildingName).append(<span class="string">"-"</span>).append(floor);</span><br><span class="line">            result.put(<span class="string">"indoor"</span>, stringBuilder.toString()); <span class="comment">// 室内定位结果信息</span></span><br><span class="line">            mLocationClient.startIndoorMode();<span class="comment">// 开启室内定位模式（重复调用也没问题），开启后，定位SDK会融合各种定位信息（GPS,WI-FI，蓝牙，传感器等）连续平滑的输出定位结果；</span></span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            mLocationClient.stopIndoorMode(); <span class="comment">// 处于室外则关闭室内定位模式</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          result.put(<span class="string">"errorCode"</span>, bdLocation.getLocType()); <span class="comment">// 定位结果错误码</span></span><br><span class="line">          result.put(<span class="string">"errorInfo"</span>, bdLocation.getLocTypeDescription()); <span class="comment">// 定位失败描述信息</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        result.put(<span class="string">"errorCode"</span>, -<span class="number">1</span>);</span><br><span class="line">        result.put(<span class="string">"errorInfo"</span>, <span class="string">"location is null"</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      mEventSink.success(result); <span class="comment">// android端实时检测位置变化，将位置结果发送到flutter端</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h4 id="位置提醒服务"><a href="#位置提醒服务" class="headerlink" title="位置提醒服务"></a>位置提醒服务</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyNotifyLister</span> <span class="keyword">extends</span> <span class="title">BDNotifyListener</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 已到达设置监听位置附近</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onNotify</span><span class="params">(BDLocation mlocation, <span class="keyword">float</span> distance)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">null</span> == mEventSink) &#123;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Map&lt;String, Object&gt; result = <span class="keyword">new</span> LinkedHashMap&lt;&gt;();</span><br><span class="line">    result.put(<span class="string">"nearby"</span>, <span class="string">"已到达设置监听位置附近"</span>); <span class="comment">// 1为已经到达 0为未到达</span></span><br><span class="line">    mEventSink.success(result);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Example-代码"><a href="#Example-代码" class="headerlink" title="Example 代码"></a>Example 代码</h3><h4 id="动态授权"><a href="#动态授权" class="headerlink" title="动态授权"></a>动态授权</h4><ul><li>example/pubspec.yaml</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">dependencies:</span></span><br><span class="line">  <span class="attr">flutter:</span></span><br><span class="line">    <span class="attr">sdk:</span> <span class="string">flutter</span></span><br><span class="line"></span><br><span class="line">  <span class="string">...</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">permission_handler:</span> <span class="string">^5.0.1+1</span></span><br></pre></td></tr></table></figure><ul><li>example/lib/main.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_MyAppState</span> <span class="keyword">extends</span> <span class="title">State</span>&lt;<span class="title">MyApp</span>&gt; </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="keyword">void</span> initState() &#123;</span><br><span class="line">    <span class="keyword">super</span>.initState();</span><br><span class="line">    _requestPermission(); <span class="comment">// 执行权限请求</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 动态申请定位权限</span></span><br><span class="line">  Future&lt;<span class="built_in">bool</span>&gt; _requestPermission() <span class="keyword">async</span> &#123;</span><br><span class="line">    <span class="built_in">Map</span>&lt;Permission, PermissionStatus&gt; statuses = <span class="keyword">await</span> [</span><br><span class="line">      Permission.location,</span><br><span class="line">      Permission.storage,</span><br><span class="line">    ].request();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> statuses[Permission.location].isGranted &amp;&amp;</span><br><span class="line">        statuses[Permission.storage].isGranted;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="主界面代码"><a href="#主界面代码" class="headerlink" title="主界面代码"></a>主界面代码</h4><ul><li>example/lib/main.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'dart:io'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'dart:async'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_baidu_plugin_ducafecat/flutter_baidu_plugin_ducafecat.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_baidu_plugin_ducafecat_example/views/location-view.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:permission_handler/permission_handler.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main() &#123;</span><br><span class="line">  runApp(MyApp());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  _MyAppState createState() =&gt; _MyAppState();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_MyAppState</span> <span class="keyword">extends</span> <span class="title">State</span>&lt;<span class="title">MyApp</span>&gt; </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="keyword">void</span> initState() &#123;</span><br><span class="line">    <span class="keyword">super</span>.initState();</span><br><span class="line">    _requestPermission(); <span class="comment">// 执行权限请求</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (Platform.isIOS == <span class="keyword">true</span>) &#123;</span><br><span class="line">      FlutterBaiduPluginDucafecat.setApiKeyForIOS(</span><br><span class="line">          <span class="string">"dkYT07blcAj3drBbcN1eGFYqt16HP1pR"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="keyword">void</span> dispose() &#123;</span><br><span class="line">    <span class="keyword">super</span>.dispose();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 动态申请定位权限</span></span><br><span class="line">  Future&lt;<span class="built_in">bool</span>&gt; _requestPermission() <span class="keyword">async</span> &#123;</span><br><span class="line">    <span class="built_in">Map</span>&lt;Permission, PermissionStatus&gt; statuses = <span class="keyword">await</span> [</span><br><span class="line">      Permission.location,</span><br><span class="line">      Permission.storage,</span><br><span class="line">    ].request();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> statuses[Permission.location].isGranted &amp;&amp;</span><br><span class="line">        statuses[Permission.storage].isGranted;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line">      routes: &#123;</span><br><span class="line">        <span class="string">"location_view"</span>: (context) =&gt; LocationView(),</span><br><span class="line">      &#125;,</span><br><span class="line">      home: MyHome(),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyHome</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> Scaffold(</span><br><span class="line">      appBar: AppBar(title: Text(<span class="string">'地图插件'</span>)),</span><br><span class="line">      body: SingleChildScrollView(</span><br><span class="line">        child: Column(</span><br><span class="line">          children: [</span><br><span class="line">            ListTile(</span><br><span class="line">              title: Text(<span class="string">'定位信息'</span>),</span><br><span class="line">              subtitle: Text(<span class="string">'点击开始后，百度地图实时推送经纬度信息'</span>),</span><br><span class="line">              leading: Icon(Icons.location_searching),</span><br><span class="line">              trailing: Icon(Icons.keyboard_arrow_right),</span><br><span class="line">              onTap: () &#123;</span><br><span class="line">                Navigator.pushNamed(context, <span class="string">"location_view"</span>);</span><br><span class="line">              &#125;,</span><br><span class="line">            )</span><br><span class="line">          ],</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="定位服务代码"><a href="#定位服务代码" class="headerlink" title="定位服务代码"></a>定位服务代码</h4><ul><li>example/lib/views/location-view.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'dart:async'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_baidu_plugin_ducafecat/entity/flutter_baidu_location.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_baidu_plugin_ducafecat/entity/flutter_baidu_location_android_option.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_baidu_plugin_ducafecat/entity/flutter_baidu_location_ios_option.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_baidu_plugin_ducafecat/flutter_baidu_plugin_ducafecat.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LocationView</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span> </span>&#123;</span><br><span class="line">  LocationView(&#123;Key key&#125;) : <span class="keyword">super</span>(key: key);</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  _LocationViewState createState() =&gt; _LocationViewState();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_LocationViewState</span> <span class="keyword">extends</span> <span class="title">State</span>&lt;<span class="title">LocationView</span>&gt; </span>&#123;</span><br><span class="line">  FlutterBaiduPluginDucafecat _locationPlugin = FlutterBaiduPluginDucafecat();</span><br><span class="line">  StreamSubscription&lt;<span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">Object</span>&gt;&gt; _locationListener; <span class="comment">// 事件监听</span></span><br><span class="line">  BaiduLocation _baiduLocation; <span class="comment">// 经纬度信息</span></span><br><span class="line">  <span class="comment">// Map&lt;String, Object&gt; _loationResult; // 返回格式数据</span></span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="keyword">void</span> dispose() &#123;</span><br><span class="line">    <span class="keyword">super</span>.dispose();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 取消监听</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">null</span> != _locationListener) &#123;</span><br><span class="line">      _locationListener.cancel();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 返回定位信息</span></span><br><span class="line">  <span class="keyword">void</span> _setupListener() &#123;</span><br><span class="line">    <span class="keyword">if</span> (_locationListener != <span class="keyword">null</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    _locationListener =</span><br><span class="line">        _locationPlugin.onResultCallback().listen((<span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">Object</span>&gt; result) &#123;</span><br><span class="line">      setState(() &#123;</span><br><span class="line">        <span class="comment">// _loationResult = result;</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">          _baiduLocation = BaiduLocation.fromMap(result);</span><br><span class="line">          <span class="built_in">print</span>(_baiduLocation);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">          <span class="built_in">print</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 设置android端和ios端定位参数</span></span><br><span class="line">  <span class="keyword">void</span> _setLocOption() &#123;</span><br><span class="line">    <span class="comment">// android 端设置定位参数</span></span><br><span class="line">    BaiduLocationAndroidOption androidOption = <span class="keyword">new</span> BaiduLocationAndroidOption();</span><br><span class="line">    androidOption.setCoorType(<span class="string">"bd09ll"</span>); <span class="comment">// 设置返回的位置坐标系类型</span></span><br><span class="line">    androidOption.setIsNeedAltitude(<span class="keyword">true</span>); <span class="comment">// 设置是否需要返回海拔高度信息</span></span><br><span class="line">    androidOption.setIsNeedAddres(<span class="keyword">true</span>); <span class="comment">// 设置是否需要返回地址信息</span></span><br><span class="line">    androidOption.setIsNeedLocationPoiList(<span class="keyword">true</span>); <span class="comment">// 设置是否需要返回周边poi信息</span></span><br><span class="line">    androidOption.setIsNeedNewVersionRgc(<span class="keyword">true</span>); <span class="comment">// 设置是否需要返回最新版本rgc信息</span></span><br><span class="line">    androidOption.setIsNeedLocationDescribe(<span class="keyword">true</span>); <span class="comment">// 设置是否需要返回位置描述</span></span><br><span class="line">    androidOption.setOpenGps(<span class="keyword">true</span>); <span class="comment">// 设置是否需要使用gps</span></span><br><span class="line">    androidOption.setLocationMode(LocationMode.Hight_Accuracy); <span class="comment">// 设置定位模式</span></span><br><span class="line">    androidOption.setScanspan(<span class="number">1000</span>); <span class="comment">// 设置发起定位请求时间间隔</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">Map</span> androidMap = androidOption.getMap();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ios 端设置定位参数</span></span><br><span class="line">    BaiduLocationIOSOption iosOption = <span class="keyword">new</span> BaiduLocationIOSOption();</span><br><span class="line">    iosOption.setIsNeedNewVersionRgc(<span class="keyword">true</span>); <span class="comment">// 设置是否需要返回最新版本rgc信息</span></span><br><span class="line">    iosOption.setBMKLocationCoordinateType(</span><br><span class="line">        <span class="string">"BMKLocationCoordinateTypeBMK09LL"</span>); <span class="comment">// 设置返回的位置坐标系类型</span></span><br><span class="line">    iosOption.setActivityType(<span class="string">"CLActivityTypeAutomotiveNavigation"</span>); <span class="comment">// 设置应用位置类型</span></span><br><span class="line">    iosOption.setLocationTimeout(<span class="number">10</span>); <span class="comment">// 设置位置获取超时时间</span></span><br><span class="line">    iosOption.setDesiredAccuracy(<span class="string">"kCLLocationAccuracyBest"</span>); <span class="comment">// 设置预期精度参数</span></span><br><span class="line">    iosOption.setReGeocodeTimeout(<span class="number">10</span>); <span class="comment">// 设置获取地址信息超时时间</span></span><br><span class="line">    iosOption.setDistanceFilter(<span class="number">100</span>); <span class="comment">// 设置定位最小更新距离</span></span><br><span class="line">    iosOption.setAllowsBackgroundLocationUpdates(<span class="keyword">true</span>); <span class="comment">// 是否允许后台定位</span></span><br><span class="line">    iosOption.setPauseLocUpdateAutomatically(<span class="keyword">true</span>); <span class="comment">//  定位是否会被系统自动暂停</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">Map</span> iosMap = iosOption.getMap();</span><br><span class="line"></span><br><span class="line">    _locationPlugin.prepareLoc(androidMap, iosMap);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 启动定位</span></span><br><span class="line">  <span class="keyword">void</span> _handleStartLocation() &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">null</span> != _locationPlugin) &#123;</span><br><span class="line">      _setupListener();</span><br><span class="line">      _setLocOption();</span><br><span class="line">      _locationPlugin.startLocation();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 停止定位</span></span><br><span class="line">  <span class="keyword">void</span> _handleStopLocation() &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">null</span> != _locationPlugin) &#123;</span><br><span class="line">      _locationPlugin.stopLocation();</span><br><span class="line">      setState(() &#123;</span><br><span class="line">        _baiduLocation = <span class="keyword">null</span>;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">////////////////////////////////////////////////////////////</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 显示地理信息</span></span><br><span class="line">  Widget _buildLocationView() &#123;</span><br><span class="line">    <span class="keyword">return</span> _baiduLocation != <span class="keyword">null</span></span><br><span class="line">        ? Table(</span><br><span class="line">            children: [</span><br><span class="line">              TableRow(children: [</span><br><span class="line">                TableCell(child: Text(<span class="string">'经度'</span>)),</span><br><span class="line">                TableCell(child: Text(_baiduLocation.longitude.toString())),</span><br><span class="line">              ]),</span><br><span class="line">              TableRow(children: [</span><br><span class="line">                TableCell(child: Text(<span class="string">'纬度'</span>)),</span><br><span class="line">                TableCell(child: Text(_baiduLocation.latitude.toString())),</span><br><span class="line">              ]),</span><br><span class="line">              TableRow(children: [</span><br><span class="line">                TableCell(child: Text(<span class="string">'国家'</span>)),</span><br><span class="line">                TableCell(</span><br><span class="line">                    child: Text(_baiduLocation.country != <span class="keyword">null</span></span><br><span class="line">                        ? _baiduLocation.country</span><br><span class="line">                        : <span class="string">""</span>)),</span><br><span class="line">              ]),</span><br><span class="line">              TableRow(children: [</span><br><span class="line">                TableCell(child: Text(<span class="string">'省份'</span>)),</span><br><span class="line">                TableCell(</span><br><span class="line">                    child: Text(_baiduLocation.province != <span class="keyword">null</span></span><br><span class="line">                        ? _baiduLocation.province</span><br><span class="line">                        : <span class="string">""</span>)),</span><br><span class="line">              ]),</span><br><span class="line">              TableRow(children: [</span><br><span class="line">                TableCell(child: Text(<span class="string">'城市'</span>)),</span><br><span class="line">                TableCell(</span><br><span class="line">                    child: Text(_baiduLocation.city != <span class="keyword">null</span></span><br><span class="line">                        ? _baiduLocation.city</span><br><span class="line">                        : <span class="string">""</span>)),</span><br><span class="line">              ]),</span><br><span class="line">              TableRow(children: [</span><br><span class="line">                TableCell(child: Text(<span class="string">'区县'</span>)),</span><br><span class="line">                TableCell(</span><br><span class="line">                    child: Text(_baiduLocation.district != <span class="keyword">null</span></span><br><span class="line">                        ? _baiduLocation.district</span><br><span class="line">                        : <span class="string">""</span>)),</span><br><span class="line">              ]),</span><br><span class="line">              TableRow(children: [</span><br><span class="line">                TableCell(child: Text(<span class="string">'街道'</span>)),</span><br><span class="line">                TableCell(</span><br><span class="line">                    child: Text(_baiduLocation.street != <span class="keyword">null</span></span><br><span class="line">                        ? _baiduLocation.street</span><br><span class="line">                        : <span class="string">""</span>)),</span><br><span class="line">              ]),</span><br><span class="line">              TableRow(children: [</span><br><span class="line">                TableCell(child: Text(<span class="string">'地址'</span>)),</span><br><span class="line">                TableCell(</span><br><span class="line">                    child: Text(_baiduLocation.address != <span class="keyword">null</span></span><br><span class="line">                        ? _baiduLocation.address</span><br><span class="line">                        : <span class="string">""</span>)),</span><br><span class="line">              ]),</span><br><span class="line">              TableRow(children: [</span><br><span class="line">                TableCell(child: Text(<span class="string">'位置语义化描述'</span>)),</span><br><span class="line">                TableCell(</span><br><span class="line">                    child: Text(_baiduLocation.locationDetail != <span class="keyword">null</span></span><br><span class="line">                        ? _baiduLocation.locationDetail</span><br><span class="line">                        : <span class="string">""</span>)),</span><br><span class="line">              ]),</span><br><span class="line">              TableRow(children: [</span><br><span class="line">                TableCell(child: Text(<span class="string">'周边poi信息'</span>)),</span><br><span class="line">                TableCell(</span><br><span class="line">                    child: Text(_baiduLocation.poiList != <span class="keyword">null</span></span><br><span class="line">                        ? _baiduLocation.poiList</span><br><span class="line">                        : <span class="string">""</span>)),</span><br><span class="line">              ]),</span><br><span class="line">              TableRow(children: [</span><br><span class="line">                TableCell(child: Text(<span class="string">'错误码'</span>)),</span><br><span class="line">                TableCell(</span><br><span class="line">                    child: Text(_baiduLocation.errorCode != <span class="keyword">null</span></span><br><span class="line">                        ? _baiduLocation.errorCode.toString()</span><br><span class="line">                        : <span class="string">""</span>)),</span><br><span class="line">              ]),</span><br><span class="line">              TableRow(children: [</span><br><span class="line">                TableCell(child: Text(<span class="string">'定位失败描述信息'</span>)),</span><br><span class="line">                TableCell(</span><br><span class="line">                    child: Text(_baiduLocation.errorInfo != <span class="keyword">null</span></span><br><span class="line">                        ? _baiduLocation.errorInfo</span><br><span class="line">                        : <span class="string">""</span>)),</span><br><span class="line">              ]),</span><br><span class="line">            ],</span><br><span class="line">          )</span><br><span class="line">        : Container();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 控制面板</span></span><br><span class="line">  Widget _buildControlPlan() &#123;</span><br><span class="line">    <span class="keyword">return</span> Row(</span><br><span class="line">      mainAxisAlignment: MainAxisAlignment.center,</span><br><span class="line">      children: [</span><br><span class="line">        MaterialButton(</span><br><span class="line">          color: Colors.blue,</span><br><span class="line">          textColor: Colors.white,</span><br><span class="line">          onPressed: _baiduLocation == <span class="keyword">null</span> ? _handleStartLocation : <span class="keyword">null</span>,</span><br><span class="line">          child: Text(<span class="string">'开始定位'</span>),</span><br><span class="line">        ),</span><br><span class="line">        MaterialButton(</span><br><span class="line">          color: Colors.blue,</span><br><span class="line">          textColor: Colors.white,</span><br><span class="line">          onPressed: _baiduLocation != <span class="keyword">null</span> ? _handleStopLocation : <span class="keyword">null</span>,</span><br><span class="line">          child: Text(<span class="string">'暂停定位'</span>),</span><br><span class="line">        )</span><br><span class="line">      ],</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> Scaffold(</span><br><span class="line">      appBar: AppBar(</span><br><span class="line">        title: Text(<span class="string">'定位信息'</span>),</span><br><span class="line">      ),</span><br><span class="line">      body: SingleChildScrollView(</span><br><span class="line">        child: Column(</span><br><span class="line">          children: [</span><br><span class="line">            _buildControlPlan(),</span><br><span class="line">            Divider(),</span><br><span class="line">            _buildLocationView(),</span><br><span class="line">          ],</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://lbsyun.baidu.com/apiconsole/key#/home" target="_blank" rel="noopener">https://lbsyun.baidu.com/apiconsole/key#/home</a></li><li><a href="http://lbsyun.baidu.com/index.php?title=android-locsdk" target="_blank" rel="noopener">http://lbsyun.baidu.com/index.php?title=android-locsdk</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a><br><a href="https://ducafecat.gitee.io" target="_blank" rel="noopener">https://ducafecat.gitee.io</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                   
      
    
    </summary>
    
      <category term="Flutter混合开发" scheme="https://ducafecat.tech/categories/Flutter%E6%B7%B7%E5%90%88%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="flutter" scheme="https://ducafecat.tech/tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>Flutter 混合开发 - 01 编写设备端组件的正确姿势!</title>
    <link href="https://ducafecat.tech/2020/07/30/flutter-daily/flutter-plugins-01-developing-packages-plugins/"/>
    <id>https://ducafecat.tech/2020/07/30/flutter-daily/flutter-plugins-01-developing-packages-plugins/</id>
    <published>2020-07-29T16:00:00.000Z</published>
    <updated>2020-08-04T09:07:26.404Z</updated>
    
    <content type="html"><![CDATA[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-07-30-21-51-56.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>闲鱼手册中提到的混合开发</li><li>编写到使用一个 flutter 组件的完整过程</li></ul><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><p><a href="https://www.bilibili.com/video/bv1iT4y1j72t" target="_blank" rel="noopener">https://www.bilibili.com/video/bv1iT4y1j72t</a></p><iframe src="//player.bilibili.com/player.html?bvid=bv1iT4y1j72t&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="100%" height="400px"> </iframe><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><a href="https://github.com/ducafecat/flutter_baidu_plugin_ducafecat/releases/tag/1.0.1" target="_blank" rel="noopener">https://github.com/ducafecat/flutter_baidu_plugin_ducafecat/releases/tag/1.0.1</a></p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="从古至今、移动开发不可回避的问题"><a href="#从古至今、移动开发不可回避的问题" class="headerlink" title="从古至今、移动开发不可回避的问题"></a>从古至今、移动开发不可回避的问题</h3><ul><li>flutter、weex、React Native、Cordova</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-07-30-17-35-34.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>开发模式</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-07-30-17-48-41.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="聊聊-Flutter-in-Action-闲鱼最佳实践"><a href="#聊聊-Flutter-in-Action-闲鱼最佳实践" class="headerlink" title="聊聊 Flutter in Action 闲鱼最佳实践"></a>聊聊 Flutter in Action 闲鱼最佳实践</h2><p>电子书下载</p><p><a href="https://c.tb.cn/I3.ZZpRl" target="_blank" rel="noopener">https://c.tb.cn/I3.ZZpRl</a></p><h3 id="第二代混合技术方案-FlutterBoost"><a href="#第二代混合技术方案-FlutterBoost" class="headerlink" title="第二代混合技术方案 FlutterBoost"></a>第二代混合技术方案 FlutterBoost</h3><ul><li>项目开源地址</li></ul><p><a href="https://github.com/alibaba/flutter_boost" target="_blank" rel="noopener">https://github.com/alibaba/flutter_boost</a></p><ul><li>架构图</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-07-30-20-19-21.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>Native 层概念</li></ul><p>● Container：Native 容器，平台 Controller，Activity，ViewController<br>● Container Manager：容器的管理者<br>● Adaptor：Flutter 是适配层<br>● Messaging：基于 Channel 的消息通信</p><ul><li>Dart 层概念</li></ul><p>● Container：Flutter 用来容纳 Widget 的容器，具体实现为 Navigator 的派生类<br>● Container Manager：Flutter 容器的管理，提供 show，remove 等 Api<br>● Coordinator: 协调器，接受 Messaging 消息，负责调用 Container Manager 的状态管理。<br>● Messaging：基于 Channel 的消息通信</p><h3 id="Flutter-amp-FaaS-云端一体化"><a href="#Flutter-amp-FaaS-云端一体化" class="headerlink" title="Flutter &amp; FaaS 云端一体化"></a>Flutter &amp; FaaS 云端一体化</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-07-30-20-49-45.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="Flutter-会为以下团队带来较大的收益"><a href="#Flutter-会为以下团队带来较大的收益" class="headerlink" title="Flutter 会为以下团队带来较大的收益"></a>Flutter 会为以下团队带来较大的收益</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-07-30-21-08-03.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="Flutter-Redux"><a href="#Flutter-Redux" class="headerlink" title="Flutter Redux"></a>Flutter Redux</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-07-30-21-15-03.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="混合工程下的-Flutter-研发结构"><a href="#混合工程下的-Flutter-研发结构" class="headerlink" title="混合工程下的 Flutter 研发结构"></a>混合工程下的 Flutter 研发结构</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-07-30-21-25-14.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="动手写第一个-Flutter-组件"><a href="#动手写第一个-Flutter-组件" class="headerlink" title="动手写第一个 Flutter 组件"></a>动手写第一个 Flutter 组件</h2><h3 id="创建-flutter-组件工程"><a href="#创建-flutter-组件工程" class="headerlink" title="创建 flutter 组件工程"></a>创建 flutter 组件工程</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ flutter create --org tech.ducafecat --template=plugin -a java -i objc flutter-baidu-plugin-ducafecat</span><br></pre></td></tr></table></figure><h3 id="加入-加法-函数"><a href="#加入-加法-函数" class="headerlink" title="加入 加法 函数"></a>加入 加法 函数</h3><ul><li>dart 代码</li></ul><p>lib/flutter_baidu_plugin_ducafecat.dart</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'dart:async'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/services.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FlutterBaiduPluginDucafecat</span> </span>&#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">const</span> MethodChannel _channel =</span><br><span class="line">      <span class="keyword">const</span> MethodChannel(<span class="string">'flutter_baidu_plugin_ducafecat'</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">static</span> Future&lt;<span class="built_in">String</span>&gt; <span class="keyword">get</span> platformVersion <span class="keyword">async</span> &#123;</span><br><span class="line">    <span class="keyword">final</span> <span class="built_in">String</span> version = <span class="keyword">await</span> _channel.invokeMethod(<span class="string">'getPlatformVersion'</span>);</span><br><span class="line">    <span class="keyword">return</span> version;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">static</span> Future&lt;<span class="built_in">int</span>&gt; duAddOne(<span class="built_in">int</span> <span class="built_in">num</span>) <span class="keyword">async</span> &#123;</span><br><span class="line">    <span class="keyword">final</span> <span class="built_in">int</span> val = <span class="keyword">await</span> _channel.invokeMethod(<span class="string">'duAddOne'</span>, &#123;<span class="string">"num"</span>: <span class="built_in">num</span>&#125;);</span><br><span class="line">    <span class="keyword">return</span> val;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>android 代码</li></ul><p>android/src/main/java/tech/ducafecat/flutter_baidu_plugin_ducafecat/FlutterBaiduPluginDucafecatPlugin.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onMethodCall</span><span class="params">(@NonNull MethodCall call, @NonNull Result result)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (call.method.equals(<span class="string">"getPlatformVersion"</span>)) &#123;</span><br><span class="line">    result.success(<span class="string">"Android "</span> + android.os.Build.VERSION.RELEASE);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (call.method.equals(<span class="string">"duAddOne"</span>)) &#123;</span><br><span class="line">    <span class="keyword">int</span> val = <span class="number">100</span>;</span><br><span class="line">    val += Integer.valueOf(call.argument(<span class="string">"num"</span>).toString());</span><br><span class="line">    result.success(val);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    result.notImplemented();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>ios 代码</li></ul><p>ios/Classes/FlutterBaiduPluginDucafecatPlugin.m</p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">"FlutterBaiduPluginDucafecatPlugin.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">FlutterBaiduPluginDucafecatPlugin</span></span></span><br><span class="line">+ (<span class="keyword">void</span>)registerWithRegistrar:(<span class="built_in">NSObject</span>&lt;FlutterPluginRegistrar&gt;*)registrar &#123;</span><br><span class="line">  FlutterMethodChannel* channel = [FlutterMethodChannel</span><br><span class="line">      methodChannelWithName:<span class="string">@"flutter_baidu_plugin_ducafecat"</span></span><br><span class="line">            binaryMessenger:[registrar messenger]];</span><br><span class="line">  FlutterBaiduPluginDucafecatPlugin* instance = [[FlutterBaiduPluginDucafecatPlugin alloc] init];</span><br><span class="line">  [registrar addMethodCallDelegate:instance channel:channel];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)handleMethodCall:(FlutterMethodCall*)call result:(FlutterResult)result &#123;</span><br><span class="line">  <span class="keyword">if</span> ([<span class="string">@"getPlatformVersion"</span> isEqualToString:call.method]) &#123;</span><br><span class="line">    result([<span class="string">@"iOS "</span> stringByAppendingString:[[<span class="built_in">UIDevice</span> currentDevice] systemVersion]]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> ([<span class="string">@"duAddOne"</span> isEqualToString:call.method]) &#123;</span><br><span class="line">      <span class="built_in">NSInteger</span> val = <span class="number">100</span>;</span><br><span class="line">      val += [[call.arguments objectForKey:<span class="string">@"num"</span>] intValue];</span><br><span class="line">      result([<span class="built_in">NSNumber</span> numberWithLong:val]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    result(FlutterMethodNotImplemented);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><h3 id="新建工程调用"><a href="#新建工程调用" class="headerlink" title="新建工程调用"></a>新建工程调用</h3><ul><li>pubspec.yaml</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">flutter_baidu_plugin_ducafecat:</span></span><br><span class="line">  <span class="attr">git:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://github.com/ducafecat/flutter_baidu_plugin_ducafecat</span></span><br><span class="line">    <span class="attr">version:</span> <span class="string">^0.0.1</span></span><br></pre></td></tr></table></figure><ul><li>调用 加法</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> _incrementCounter() <span class="keyword">async</span> &#123;</span><br><span class="line">  _counter = <span class="keyword">await</span> FlutterBaiduPluginDucafecat.duAddOne(<span class="number">20</span>);</span><br><span class="line">  setState(() &#123;&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://cordova.apache.org/" target="_blank" rel="noopener">https://cordova.apache.org/</a></li><li><a href="https://reactnative.dev/" target="_blank" rel="noopener">https://reactnative.dev/</a></li><li><a href="https://flutter.dev/" target="_blank" rel="noopener">https://flutter.dev/</a></li><li><a href="https://weex.apache.org/" target="_blank" rel="noopener">https://weex.apache.org/</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                   
      
    
    </summary>
    
      <category term="Flutter混合开发" scheme="https://ducafecat.tech/categories/Flutter%E6%B7%B7%E5%90%88%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="flutter" scheme="https://ducafecat.tech/tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>Flutter 实战从零开始 新闻客户端 - 17 headless strapi centos 发布部署 + jmeter 压测</title>
    <link href="https://ducafecat.tech/2020/07/21/flutter-project/flutter-project-news-17-strapi-docker-compose-deploy-jmeter/"/>
    <id>https://ducafecat.tech/2020/07/21/flutter-project/flutter-project-news-17-strapi-docker-compose-deploy-jmeter/</id>
    <published>2020-07-20T16:00:00.000Z</published>
    <updated>2020-07-24T08:41:39.144Z</updated>
    
    <content type="html"><![CDATA[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-07-22-14-40-04.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>上传代码到生产环境</li><li>配置发布环境代码</li><li>docker-compose 方式启动项目</li><li>jmeter 做基线测试 调优服务器配置</li></ul><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><p><a href="https://www.bilibili.com/video/BV15v411q7CK/" target="_blank" rel="noopener">https://www.bilibili.com/video/BV15v411q7CK/</a></p><iframe src="//player.bilibili.com/player.html?bvid=BV15v411q7CK&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="100%" height="400px"> </iframe><h2 id="strapi-运行环境网盘下载"><a href="#strapi-运行环境网盘下载" class="headerlink" title="strapi 运行环境网盘下载"></a>strapi 运行环境网盘下载</h2><ul><li>网盘</li></ul><p>链接:<a href="https://pan.baidu.com/s/13Ujy2hzXp8tSqxCx_4IhVQ" target="_blank" rel="noopener">https://pan.baidu.com/s/13Ujy2hzXp8tSqxCx_4IhVQ</a><br>密码:yu82</p><ul><li>运行</li></ul><p>本节下载 strapi-docker-compose-16.zip 这个文件</p><p>需要用 docker-compose 启动<br>账号 admin<br>密码 123456</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动</span></span><br><span class="line">docker-compose up -d --remove-orphans</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭</span></span><br><span class="line">docker-compose down</span><br></pre></td></tr></table></figure><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="打包上传服务器"><a href="#打包上传服务器" class="headerlink" title="打包上传服务器"></a>打包上传服务器</h3><ul><li>服务器配置</li></ul><p>考虑到基线压测优化，所以一开始低些</p><p>服务器 cpu1 核心 2G 内存</p><ul><li>如何配置 centos 服务器</li></ul><p>参考我之前的文章</p><p><a href="https://ducafecat.tech/2020/05/29/docker/docker-02-windows-vmware-centos-setup/">https://ducafecat.tech/2020/05/29/docker/docker-02-windows-vmware-centos-setup/</a></p><p><a href="https://youtu.be/NJIwbs8qmDY" target="_blank" rel="noopener">https://youtu.be/NJIwbs8qmDY</a></p><ul><li>把所有文件 tar、zip 打包后上传</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; yum install -y zip unzip</span><br><span class="line"></span><br><span class="line">&gt; unzip filename.zip</span><br></pre></td></tr></table></figure><h3 id="修改-graphql-配置"><a href="#修改-graphql-配置" class="headerlink" title="修改 graphql 配置"></a>修改 graphql 配置</h3><ul><li>文件 ./config/plugins.js</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="comment">//</span></span><br><span class="line">  graphql: &#123;</span><br><span class="line">    endpoint: <span class="string">"/graphql"</span>,</span><br><span class="line">    tracing: <span class="literal">false</span>,</span><br><span class="line">    shadowCRUD: <span class="literal">true</span>,</span><br><span class="line">    playgroundAlways: <span class="literal">false</span>,</span><br><span class="line">    depthLimit: <span class="number">7</span>,</span><br><span class="line">    amountLimit: <span class="number">100</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>endpoint</td><td>对外路径</td></tr><tr><td>tracing</td><td>反馈性能报告</td></tr><tr><td>shadowCRUD</td><td>支持 CRUD 操作</td></tr><tr><td>playgroundAlways</td><td>显示调试界面</td></tr><tr><td>depthLimit</td><td>查询深度限制</td></tr><tr><td>amountLimit</td><td>查询项目个数</td></tr></tbody></table><ul><li>参数说明</li></ul><h3 id="修改-admin-面板地址"><a href="#修改-admin-面板地址" class="headerlink" title="修改 admin 面板地址"></a>修改 admin 面板地址</h3><ul><li>文件 ./config/server.js</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = <span class="function">(<span class="params">&#123; env &#125;</span>) =&gt;</span> (&#123;</span><br><span class="line">  host: env(<span class="string">"HOST"</span>, <span class="string">"0.0.0.0"</span>),</span><br><span class="line">  port: env.int(<span class="string">"PORT"</span>, <span class="number">1337</span>),</span><br><span class="line">  admin: &#123;</span><br><span class="line">    url: <span class="string">"/dashboard"</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><blockquote><p>默认 admin 不安全，可以改成奇怪的路径 dfasdx97s7 这种</p></blockquote><h3 id="strapi-build-编译"><a href="#strapi-build-编译" class="headerlink" title="strapi build 编译"></a>strapi build 编译</h3><ul><li>安装 portainer</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 9000:9000 \</span><br><span class="line">    --restart=always \</span><br><span class="line">    -v /var/run/docker.sock:/var/run/docker.sock \</span><br><span class="line">    --name portainer-local \</span><br><span class="line">    portainer/portainer</span><br></pre></td></tr></table></figure><ul><li>用工具 portainer 进入容器</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-07-22-09-23-25.png" alt title>                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-07-22-09-36-35.png" alt title>                </div>                <div class="image-caption"></div>            </figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; strapi build</span><br></pre></td></tr></table></figure><h3 id="修改-docker-compose-命令"><a href="#修改-docker-compose-命令" class="headerlink" title="修改 docker-compose 命令"></a>修改 docker-compose 命令</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">...</span></span><br><span class="line"><span class="attr">strapi-app:</span></span><br><span class="line">  <span class="attr">image:</span> <span class="string">strapi/strapi</span></span><br><span class="line">  <span class="attr">container_name:</span> <span class="string">strapi-app</span></span><br><span class="line">  <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">1337</span><span class="string">:1337</span></span><br><span class="line">  <span class="attr">command:</span> <span class="string">strapi</span> <span class="string">start</span></span><br><span class="line">  <span class="attr">environment:</span></span><br><span class="line">    <span class="string">...</span></span><br></pre></td></tr></table></figure><h3 id="jmeter-压第一轮-服务器-cpu1-核心-2G-内存"><a href="#jmeter-压第一轮-服务器-cpu1-核心-2G-内存" class="headerlink" title="jmeter 压第一轮 - 服务器 cpu1 核心 2G 内存"></a>jmeter 压第一轮 - 服务器 cpu1 核心 2G 内存</h3><ul><li>测试工具</li></ul><p><a href="https://jmeter.apache.org/download_jmeter.cgi" target="_blank" rel="noopener">https://jmeter.apache.org/download_jmeter.cgi</a></p><blockquote><p>需要安装 java 运行环境 jre 1.8</p></blockquote><ul><li>测试内容</li></ul><p>新闻首页</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">post /graphql</span><br><span class="line"></span><br><span class="line">&#123;&quot;operationName&quot;:&quot;pageIndex&quot;,&quot;variables&quot;:&#123;&#125;,&quot;query&quot;:&quot;query pageIndex &#123;\n  dictCategories(sort: \&quot;sortNum:desc\&quot;) &#123;\n    code\n    title\n  &#125;\n  dictChannels(sort: \&quot;sortNum:desc\&quot;) &#123;\n    code\n    title\n    icon &#123;\n      url\n    &#125;\n  &#125;\n  busNews(where: &#123;dict_categories: &#123;code: \&quot;news_hot\&quot;&#125;&#125;) &#123;\n    title\n    dict_channel &#123;\n      code\n      title\n      icon &#123;\n        url\n      &#125;\n    &#125;\n    dict_categories &#123;\n      code\n      title\n    &#125;\n    author\n    url\n    addtime\n    thumbnail &#123;\n      url\n    &#125;\n  &#125;\n&#125;\n&quot;&#125;</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-07-22-09-29-05.png" alt title>                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-07-22-09-29-43.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>测试环境</li></ul><p>压测机: 8 核心 32G 本机 macos，发起线程数 1000~2000 官方建议单机数量<br>服务器: 1 核心 2G 虚拟机 centos</p><ul><li>服务器信息监控</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&gt; top</span><br><span class="line"></span><br><span class="line">top - 23:41:47 up 45 min,  2 users,  load average: 0.12, 2.10, 2.09</span><br><span class="line">Tasks: 160 total,   1 running, 159 sleeping,   0 stopped,   0 zombie</span><br><span class="line">%Cpu(s):  2.2 us,  1.2 sy,  0.0 ni, 96.3 id,  0.0 wa,  0.0 hi,  0.2 si,  0.0 st</span><br><span class="line">KiB Mem :  1877360 total,   424344 free,   746224 used,   706792 buff/cache</span><br><span class="line">KiB Swap:  6713340 total,  6713340 free,        0 used.   963492 avail Mem</span><br><span class="line"></span><br><span class="line">  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND</span><br><span class="line">31814 root      20   0 2099204  91620  23620 S   3.7  4.9   3:03.04 node</span><br><span class="line">  977 root      20   0  820140  47944  14876 S   2.0  2.6   0:40.63 containerd</span><br><span class="line">    9 root      20   0       0      0      0 S   0.3  0.0   0:01.84 rcu_sched</span><br><span class="line">  445 root      20   0       0      0      0 S   0.3  0.0   0:01.07 xfsaild/dm-0</span><br><span class="line">  995 root      20   0  783740  91376  29532 S   0.3  4.9   0:08.46 dockerd</span><br><span class="line"> 1675 polkitd   20   0 1659672 119912  18932 S   0.3  6.4   2:15.62 mongod</span><br><span class="line">31570 root      20   0  633704  38776  15156 S   0.3  2.1   0:13.24 node</span><br><span class="line">    1 root      20   0  191036   3940   2572 S   0.0  0.2   0:00.60 systemd</span><br><span class="line">    2 root      20   0       0      0      0 S   0.0  0.0   0:00.00 kthreadd</span><br><span class="line">    4 root       0 -20       0      0      0 S   0.0  0.0   0:00.00 kworker/0:0H</span><br><span class="line">    6 root      20   0       0      0      0 S   0.0  0.0   0:01.15 ksoftirqd/0</span><br><span class="line">    7 root      rt   0       0      0      0 S   0.0  0.0   0:00.09 migration/0</span><br><span class="line">    8 root      20   0       0      0      0 S   0.0  0.0   0:00.00 rcu_bh</span><br></pre></td></tr></table></figure><blockquote><p>ctrl + c 停止</p></blockquote><ul><li>GUI 压测</li></ul><blockquote><p>1000 个请求 10 秒内</p></blockquote><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-07-22-10-46-12.png" alt title>                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-07-22-10-49-10.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>命令行 压测</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jmeter -n -t strapi.jmx -l report/result.csv -j report/log.log -e -o report_html</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-07-22-10-53-49.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="jmeter-压第二轮-服务器-cpu4-核心-2G-内存"><a href="#jmeter-压第二轮-服务器-cpu4-核心-2G-内存" class="headerlink" title="jmeter 压第二轮 - 服务器 cpu4 核心 2G 内存"></a>jmeter 压第二轮 - 服务器 cpu4 核心 2G 内存</h3><ul><li>测试环境</li></ul><p>压测机: 8 核心 32G 本机 macos，发起线程数 1000~2000<br>服务器: 4 核心 2G 虚拟机 centos</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-07-22-11-11-19.png" alt title>                </div>                <div class="image-caption"></div>            </figure><blockquote><p>1000 个请求 5 秒内</p></blockquote><ul><li>压测报告</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jmeter -n -t strapi.jmx -l report/result.csv -j report/log.log -e -o report_html</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-07-22-11-12-33.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="strapi-优化线程数"><a href="#strapi-优化线程数" class="headerlink" title="strapi 优化线程数"></a>strapi 优化线程数</h3><ul><li>安装 pm2 工具</li></ul><p><a href="https://pm2.keymetrics.io/docs/usage/quick-start/" target="_blank" rel="noopener">https://pm2.keymetrics.io/docs/usage/quick-start/</a></p><ul><li>编写 启动代码 server.js</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> strapi = <span class="built_in">require</span>(<span class="string">"strapi"</span>);</span><br><span class="line">strapi().start();</span><br></pre></td></tr></table></figure><ul><li>编写 配置文件 strapi.config.js</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  apps: [</span><br><span class="line">    &#123;</span><br><span class="line">      name: <span class="string">"strapi-app"</span>,</span><br><span class="line">      script: <span class="string">"./server.js"</span>,</span><br><span class="line">      instances: <span class="number">4</span>,</span><br><span class="line">      exec_mode: <span class="string">"cluster"</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  ],</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><blockquote><p>instances 等于你的核心数</p></blockquote><ul><li>修改 docker-compose.yml</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">  <span class="string">...</span></span><br><span class="line"><span class="attr">strapi-app:</span></span><br><span class="line">  <span class="attr">image:</span> <span class="string">strapi/strapi</span></span><br><span class="line">  <span class="attr">container_name:</span> <span class="string">strapi-app</span></span><br><span class="line">  <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">1337</span><span class="string">:1337</span></span><br><span class="line">  <span class="comment"># command: strapi build</span></span><br><span class="line">  <span class="comment"># command: strapi start</span></span><br><span class="line">  <span class="attr">command:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/bin/bash</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">-c</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">|</span></span><br><span class="line">      <span class="string">npm</span> <span class="string">install</span> <span class="string">pm2@latest</span> <span class="string">-g</span></span><br><span class="line">      <span class="string">cd</span> <span class="string">/srv/app</span></span><br><span class="line">      <span class="string">pm2-runtime</span> <span class="string">start</span> <span class="string">strapi.config.js</span></span><br><span class="line">  <span class="attr">environment:</span></span><br><span class="line">    <span class="string">...</span></span><br></pre></td></tr></table></figure><h3 id="jmeter-压第三轮-服务器-cpu4-核心-2G-内存"><a href="#jmeter-压第三轮-服务器-cpu4-核心-2G-内存" class="headerlink" title="jmeter 压第三轮 - 服务器 cpu4 核心 2G 内存"></a>jmeter 压第三轮 - 服务器 cpu4 核心 2G 内存</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-07-22-11-37-44.png" alt title>                </div>                <div class="image-caption"></div>            </figure><blockquote><p>2000 个请求 1 秒内</p></blockquote><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-07-22-11-38-41.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="主要服务器指标"><a href="#主要服务器指标" class="headerlink" title="主要服务器指标"></a>主要服务器指标</h3><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>CPU</td><td>&lt;= 40%</td></tr><tr><td>内存</td><td>&lt;= 70%</td></tr></tbody></table><blockquote><p>其它主要指标 连接数、本机进出流量、内网带宽、外网带宽</p></blockquote><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li>strapi 服务器部署配置</li><li>jmetre 基线测试方法、主要指标查看</li></ul><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li>strapi 插件配置</li></ul><p><a href="https://strapi.io/documentation/v3.x/plugins/graphql.html" target="_blank" rel="noopener">https://strapi.io/documentation/v3.x/plugins/graphql.html</a></p><ul><li>strapi 命令行</li></ul><p><a href="https://strapi.io/documentation/v3.x/cli/CLI.html#strapi-new" target="_blank" rel="noopener">https://strapi.io/documentation/v3.x/cli/CLI.html#strapi-new</a></p><ul><li>strapi 部署说明</li></ul><p><a href="https://strapi.io/documentation/v3.x/admin-panel/deploy.html" target="_blank" rel="noopener">https://strapi.io/documentation/v3.x/admin-panel/deploy.html</a></p><ul><li>pm2 安装</li></ul><p><a href="https://pm2.keymetrics.io/docs/usage/quick-start/" target="_blank" rel="noopener">https://pm2.keymetrics.io/docs/usage/quick-start/</a></p><ul><li>pm2 配置文件</li></ul><p><a href="https://pm2.keymetrics.io/docs/usage/application-declaration/" target="_blank" rel="noopener">https://pm2.keymetrics.io/docs/usage/application-declaration/</a></p><ul><li>jmeter</li></ul><p><a href="https://jmeter.apache.org/download_jmeter.cgi" target="_blank" rel="noopener">https://jmeter.apache.org/download_jmeter.cgi</a></p><ul><li>jmeter 分布式</li></ul><p><a href="https://jmeter.apache.org/usermanual/jmeter_distributed_testing_step_by_step.html" target="_blank" rel="noopener">https://jmeter.apache.org/usermanual/jmeter_distributed_testing_step_by_step.html</a></p><h2 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h2><h3 id="设计稿蓝湖预览"><a href="#设计稿蓝湖预览" class="headerlink" title="设计稿蓝湖预览"></a>设计稿蓝湖预览</h3><p><a href="https://lanhuapp.com/url/lYuz1" target="_blank" rel="noopener">https://lanhuapp.com/url/lYuz1</a><br>密码: gSKl</p><blockquote><p>蓝湖现在收费了，所以查看标记还请自己上传 xd 设计稿<br>商业设计稿文件不好直接分享, 可以加微信联系 ducafecat</p></blockquote><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                   
      
    
    </summary>
    
      <category term="Flutter 实战从零开始" scheme="https://ducafecat.tech/categories/Flutter-%E5%AE%9E%E6%88%98%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B/"/>
    
    
      <category term="flutter" scheme="https://ducafecat.tech/tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>Flutter 实战从零开始 新闻客户端 - 16 headless strapi + graphql 用户注册、登录、异常处理</title>
    <link href="https://ducafecat.tech/2020/07/14/flutter-project/flutter-project-news-16-strapi-graphql-login-register/"/>
    <id>https://ducafecat.tech/2020/07/14/flutter-project/flutter-project-news-16-strapi-graphql-login-register/</id>
    <published>2020-07-13T16:00:00.000Z</published>
    <updated>2020-07-24T08:42:17.504Z</updated>
    
    <content type="html"><![CDATA[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-07-14-15-06-20.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>编写 mutation 操作，登录、注册</li><li>graphql 操作类加入异常处理</li></ul><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><p><a href="https://www.bilibili.com/video/BV1vt4y1Q7i3/" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1vt4y1Q7i3/</a></p><iframe src="//player.bilibili.com/player.html?bvid=BV1vt4y1Q7i3&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="100%" height="400px"> </iframe><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><a href="https://github.com/ducafecat/flutter_learn_news/releases/tag/v1.0.16" target="_blank" rel="noopener">https://github.com/ducafecat/flutter_learn_news/releases/tag/v1.0.16</a></p><h2 id="strapi-运行环境网盘下载"><a href="#strapi-运行环境网盘下载" class="headerlink" title="strapi 运行环境网盘下载"></a>strapi 运行环境网盘下载</h2><ul><li>网盘</li></ul><p>链接:<a href="https://pan.baidu.com/s/13Ujy2hzXp8tSqxCx_4IhVQ" target="_blank" rel="noopener">https://pan.baidu.com/s/13Ujy2hzXp8tSqxCx_4IhVQ</a><br>密码:yu82</p><ul><li>运行</li></ul><p>需要用 docker-compose 启动<br>账号 admin<br>密码 123456</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动</span></span><br><span class="line">docker-compose up -d --remove-orphans</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭</span></span><br><span class="line">docker-compose down</span><br></pre></td></tr></table></figure><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><ul><li>调试地址</li></ul><p><a href="http://localhost:1337/graphql" target="_blank" rel="noopener">http://localhost:1337/graphql</a></p><h3 id="注册-graphql"><a href="#注册-graphql" class="headerlink" title="注册 graphql"></a>注册 graphql</h3><ul><li>mutation</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">mutation UserRegister($username: String!, $email: String!, $password: String!) &#123;</span><br><span class="line">  register(input: &#123; username: $username, email: $email, password: $password &#125;) &#123;</span><br><span class="line">    jwt</span><br><span class="line">    user &#123;</span><br><span class="line">      id</span><br><span class="line">      username</span><br><span class="line">      email</span><br><span class="line">      role &#123;</span><br><span class="line">        id</span><br><span class="line">        name</span><br><span class="line">        description</span><br><span class="line">        type</span><br><span class="line">      &#125;</span><br><span class="line">      blocked</span><br><span class="line">      confirmed</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>variables</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"username"</span>: <span class="string">"dbuser"</span>,</span><br><span class="line">  <span class="attr">"email"</span>: <span class="string">"dbuser@ducafecat.tech"</span>,</span><br><span class="line">  <span class="attr">"password"</span>: <span class="string">"12345678"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="登录-graphql"><a href="#登录-graphql" class="headerlink" title="登录 graphql"></a>登录 graphql</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">mutation UserLogin($identifier: String!, $password: String!) &#123;</span><br><span class="line">  login(input: &#123; identifier: $identifier, password: $password &#125;) &#123;</span><br><span class="line">    jwt</span><br><span class="line">    user &#123;</span><br><span class="line">      id</span><br><span class="line">      username</span><br><span class="line">      email</span><br><span class="line">      role &#123;</span><br><span class="line">        id</span><br><span class="line">        name</span><br><span class="line">        description</span><br><span class="line">        type</span><br><span class="line">      &#125;</span><br><span class="line">      blocked</span><br><span class="line">      confirmed</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>variables</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"identifier"</span>: <span class="string">"dbuser"</span>,</span><br><span class="line">  <span class="attr">"password"</span>: <span class="string">"12345678"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>identifier 可以是 username、email ，都是唯一的</p></blockquote><h3 id="Graphql-请求类加入异常处理"><a href="#Graphql-请求类加入异常处理" class="headerlink" title="Graphql 请求类加入异常处理"></a>Graphql 请求类加入异常处理</h3><ul><li>lib/common/utils/graphql_client.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/common/utils/utils.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/common/values/values.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/common/widgets/widgets.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/global.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:graphql/client.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GraphqlClientUtil</span> </span>&#123;</span><br><span class="line">  <span class="keyword">static</span> OptimisticCache cache = OptimisticCache(</span><br><span class="line">    dataIdFromObject: typenameDataIdFromObject,</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">  <span class="keyword">static</span> client() &#123;</span><br><span class="line">    HttpLink _httpLink = HttpLink(</span><br><span class="line">      uri: <span class="string">'<span class="subst">$SERVER_STRAPI_GRAPHQL_URL</span>/graphql'</span>,</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (Global.profile?.jwt != <span class="keyword">null</span>) &#123;</span><br><span class="line">      <span class="keyword">final</span> AuthLink _authLink = AuthLink(</span><br><span class="line">        getToken: () =&gt; <span class="string">'Bearer <span class="subst">$&#123;Global.profile.jwt&#125;</span>'</span>,</span><br><span class="line">      );</span><br><span class="line">      <span class="keyword">final</span> Link _link = _authLink.concat(_httpLink);</span><br><span class="line">      <span class="keyword">return</span> GraphQLClient(</span><br><span class="line">        cache: cache,</span><br><span class="line">        link: _link,</span><br><span class="line">      );</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> GraphQLClient(</span><br><span class="line">        cache: cache,</span><br><span class="line">        link: _httpLink,</span><br><span class="line">      );</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">错误处理</span></span></span><br><span class="line">  <span class="keyword">static</span> _formatException(BuildContext context, OperationException exception) &#123;</span><br><span class="line">    <span class="keyword">var</span> statusCode = <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      statusCode = exception</span><br><span class="line">          .graphqlErrors[<span class="number">0</span>]?.extensions[<span class="string">"exception"</span>][<span class="string">"output"</span>][<span class="string">"statusCode"</span>]</span><br><span class="line">          .toString();</span><br><span class="line">      <span class="keyword">if</span> (statusCode == <span class="string">''</span>) &#123;</span><br><span class="line">        statusCode = exception.graphqlErrors[<span class="number">0</span>]?.extensions[<span class="string">"exception"</span>][<span class="string">"code"</span>]</span><br><span class="line">            .toString();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (statusCode) &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">'400'</span>: <span class="comment">// 重新登录</span></span><br><span class="line">        toastInfo(msg: <span class="string">"错误请求，提交数据错误！"</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">'401'</span>: <span class="comment">// 没有认证</span></span><br><span class="line">      <span class="keyword">case</span> <span class="string">'403'</span>: <span class="comment">// 没有授权</span></span><br><span class="line">        toastInfo(msg: <span class="string">"账号无效、服务没有授权，请重新登录！"</span>);</span><br><span class="line">        <span class="keyword">return</span> goLoginPage(context);</span><br><span class="line">      <span class="comment">// break;</span></span><br><span class="line">      <span class="keyword">default</span>:</span><br><span class="line">        toastInfo(msg: exception.toString());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">throw</span> exception;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 查询</span></span><br><span class="line">  <span class="keyword">static</span> Future query(&#123;</span><br><span class="line">    <span class="meta">@required</span> BuildContext context,</span><br><span class="line">    <span class="meta">@required</span> <span class="built_in">String</span> schema,</span><br><span class="line">    <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">dynamic</span>&gt; variables,</span><br><span class="line">  &#125;) <span class="keyword">async</span> &#123;</span><br><span class="line">    QueryOptions options = QueryOptions(</span><br><span class="line">      documentNode: gql(schema),</span><br><span class="line">      variables: variables,</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    QueryResult result = <span class="keyword">await</span> client().query(options);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (result.hasException) &#123;</span><br><span class="line">      _formatException(context, result.exception);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 操作</span></span><br><span class="line">  <span class="keyword">static</span> Future mutate(&#123;</span><br><span class="line">    <span class="meta">@required</span> BuildContext context,</span><br><span class="line">    <span class="meta">@required</span> <span class="built_in">String</span> schema,</span><br><span class="line">    <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">dynamic</span>&gt; variables,</span><br><span class="line">  &#125;) <span class="keyword">async</span> &#123;</span><br><span class="line">    MutationOptions options = MutationOptions(</span><br><span class="line">      documentNode: gql(schema),</span><br><span class="line">      variables: variables,</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    QueryResult result = <span class="keyword">await</span> client().mutate(options);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (result.hasException) &#123;</span><br><span class="line">      _formatException(context, result.exception);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>常见错误码:</li></ul><p>400 数据提交时间<br>401 需要登录认证<br>403 功能需要授权</p><h3 id="Entity-用户"><a href="#Entity-用户" class="headerlink" title="Entity 用户"></a>Entity 用户</h3><ul><li>lib/common/entitys/gql_user.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 用户登录 - request</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GqlUserLoginRequestEntity</span> </span>&#123;</span><br><span class="line">  GqlUserLoginRequestEntity(&#123;</span><br><span class="line">    <span class="keyword">this</span>.identifier,</span><br><span class="line">    <span class="keyword">this</span>.password,</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">String</span> identifier;</span><br><span class="line">  <span class="built_in">String</span> password;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">factory</span> GqlUserLoginRequestEntity.fromJson(<span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">dynamic</span>&gt; json) =&gt;</span><br><span class="line">      GqlUserLoginRequestEntity(</span><br><span class="line">        identifier: json[<span class="string">"identifier"</span>],</span><br><span class="line">        password: json[<span class="string">"password"</span>],</span><br><span class="line">      );</span><br><span class="line"></span><br><span class="line">  <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">dynamic</span>&gt; toJson() =&gt; &#123;</span><br><span class="line">        <span class="string">"identifier"</span>: identifier,</span><br><span class="line">        <span class="string">"password"</span>: password,</span><br><span class="line">      &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 用户登录 - request</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GqlUserRegisterRequestEntity</span> </span>&#123;</span><br><span class="line">  GqlUserRegisterRequestEntity(&#123;</span><br><span class="line">    <span class="keyword">this</span>.username,</span><br><span class="line">    <span class="keyword">this</span>.email,</span><br><span class="line">    <span class="keyword">this</span>.password,</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">String</span> username;</span><br><span class="line">  <span class="built_in">String</span> email;</span><br><span class="line">  <span class="built_in">String</span> password;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">factory</span> GqlUserRegisterRequestEntity.fromJson(<span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">dynamic</span>&gt; json) =&gt;</span><br><span class="line">      GqlUserRegisterRequestEntity(</span><br><span class="line">        username: json[<span class="string">"username"</span>],</span><br><span class="line">        email: json[<span class="string">"email"</span>],</span><br><span class="line">        password: json[<span class="string">"password"</span>],</span><br><span class="line">      );</span><br><span class="line"></span><br><span class="line">  <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">dynamic</span>&gt; toJson() =&gt; &#123;</span><br><span class="line">        <span class="string">"username"</span>: username,</span><br><span class="line">        <span class="string">"email"</span>: email,</span><br><span class="line">        <span class="string">"password"</span>: password,</span><br><span class="line">      &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//////////////////////////////////////////////////////////////////</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 用户登录 - response</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GqlUserLoginResponseEntity</span> </span>&#123;</span><br><span class="line">  GqlUserLoginResponseEntity(&#123;</span><br><span class="line">    <span class="keyword">this</span>.jwt,</span><br><span class="line">    <span class="keyword">this</span>.user,</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">String</span> jwt;</span><br><span class="line">  UserEntity user;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">factory</span> GqlUserLoginResponseEntity.fromJson(<span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">dynamic</span>&gt; json) =&gt;</span><br><span class="line">      GqlUserLoginResponseEntity(</span><br><span class="line">        jwt: json[<span class="string">"jwt"</span>],</span><br><span class="line">        user: UserEntity.fromJson(json[<span class="string">"user"</span>]),</span><br><span class="line">      );</span><br><span class="line"></span><br><span class="line">  <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">dynamic</span>&gt; toJson() =&gt; &#123;</span><br><span class="line">        <span class="string">"jwt"</span>: jwt,</span><br><span class="line">        <span class="string">"user"</span>: user.toJson(),</span><br><span class="line">      &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 注册新用户 - response</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GqlUserRegisterResponseEntity</span> </span>&#123;</span><br><span class="line">  GqlUserRegisterResponseEntity(&#123;</span><br><span class="line">    <span class="keyword">this</span>.jwt,</span><br><span class="line">    <span class="keyword">this</span>.user,</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">String</span> jwt;</span><br><span class="line">  UserEntity user;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">factory</span> GqlUserRegisterResponseEntity.fromJson(<span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">dynamic</span>&gt; json) =&gt;</span><br><span class="line">      GqlUserRegisterResponseEntity(</span><br><span class="line">        jwt: json[<span class="string">"jwt"</span>],</span><br><span class="line">        user: UserEntity.fromJson(json[<span class="string">"user"</span>]),</span><br><span class="line">      );</span><br><span class="line"></span><br><span class="line">  <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">dynamic</span>&gt; toJson() =&gt; &#123;</span><br><span class="line">        <span class="string">"jwt"</span>: jwt,</span><br><span class="line">        <span class="string">"user"</span>: user.toJson(),</span><br><span class="line">      &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 用户</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserEntity</span> </span>&#123;</span><br><span class="line">  UserEntity(&#123;</span><br><span class="line">    <span class="keyword">this</span>.id,</span><br><span class="line">    <span class="keyword">this</span>.username,</span><br><span class="line">    <span class="keyword">this</span>.email,</span><br><span class="line">    <span class="keyword">this</span>.role,</span><br><span class="line">    <span class="keyword">this</span>.blocked,</span><br><span class="line">    <span class="keyword">this</span>.confirmed,</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">String</span> id;</span><br><span class="line">  <span class="built_in">String</span> username;</span><br><span class="line">  <span class="built_in">String</span> email;</span><br><span class="line">  RoleEntity role;</span><br><span class="line">  <span class="built_in">bool</span> blocked;</span><br><span class="line">  <span class="built_in">bool</span> confirmed;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">factory</span> UserEntity.fromJson(<span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">dynamic</span>&gt; json) =&gt; UserEntity(</span><br><span class="line">        id: json[<span class="string">"id"</span>],</span><br><span class="line">        username: json[<span class="string">"username"</span>],</span><br><span class="line">        email: json[<span class="string">"email"</span>],</span><br><span class="line">        role: RoleEntity.fromJson(json[<span class="string">"role"</span>]),</span><br><span class="line">        blocked: json[<span class="string">"blocked"</span>],</span><br><span class="line">        confirmed: json[<span class="string">"confirmed"</span>],</span><br><span class="line">      );</span><br><span class="line"></span><br><span class="line">  <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">dynamic</span>&gt; toJson() =&gt; &#123;</span><br><span class="line">        <span class="string">"id"</span>: id,</span><br><span class="line">        <span class="string">"username"</span>: username,</span><br><span class="line">        <span class="string">"email"</span>: email,</span><br><span class="line">        <span class="string">"role"</span>: role.toJson(),</span><br><span class="line">        <span class="string">"blocked"</span>: blocked,</span><br><span class="line">        <span class="string">"confirmed"</span>: confirmed,</span><br><span class="line">      &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 角色</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RoleEntity</span> </span>&#123;</span><br><span class="line">  RoleEntity(&#123;</span><br><span class="line">    <span class="keyword">this</span>.id,</span><br><span class="line">    <span class="keyword">this</span>.name,</span><br><span class="line">    <span class="keyword">this</span>.description,</span><br><span class="line">    <span class="keyword">this</span>.type,</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">String</span> id;</span><br><span class="line">  <span class="built_in">String</span> name;</span><br><span class="line">  <span class="built_in">String</span> description;</span><br><span class="line">  <span class="built_in">String</span> type;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">factory</span> RoleEntity.fromJson(<span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">dynamic</span>&gt; json) =&gt; RoleEntity(</span><br><span class="line">        id: json[<span class="string">"id"</span>],</span><br><span class="line">        name: json[<span class="string">"name"</span>],</span><br><span class="line">        description: json[<span class="string">"description"</span>],</span><br><span class="line">        type: json[<span class="string">"type"</span>],</span><br><span class="line">      );</span><br><span class="line"></span><br><span class="line">  <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">dynamic</span>&gt; toJson() =&gt; &#123;</span><br><span class="line">        <span class="string">"id"</span>: id,</span><br><span class="line">        <span class="string">"name"</span>: name,</span><br><span class="line">        <span class="string">"description"</span>: description,</span><br><span class="line">        <span class="string">"type"</span>: type,</span><br><span class="line">      &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="API-用户注册、登录"><a href="#API-用户注册、登录" class="headerlink" title="API 用户注册、登录"></a>API 用户注册、登录</h3><ul><li>lib/common/apis/gql_user.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/common/entitys/entitys.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/common/graphql/graphql.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/common/utils/utils.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:graphql/client.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// <span class="markdown">新闻</span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GqlUserAPI</span> </span>&#123;</span><br><span class="line">  <span class="comment">/// <span class="markdown">登录</span></span></span><br><span class="line">  <span class="keyword">static</span> Future&lt;GqlUserLoginResponseEntity&gt; login(&#123;</span><br><span class="line">    <span class="meta">@required</span> BuildContext context,</span><br><span class="line">    <span class="meta">@required</span> GqlUserLoginRequestEntity variables,</span><br><span class="line">  &#125;) <span class="keyword">async</span> &#123;</span><br><span class="line">    QueryResult response = <span class="keyword">await</span> GraphqlClientUtil.mutate(</span><br><span class="line">        context: context,</span><br><span class="line">        schema: GQL_USER_LOGIN,</span><br><span class="line">        variables: variables.toJson());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> GqlUserLoginResponseEntity.fromJson(response.data[<span class="string">"login"</span>]);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">注册</span></span></span><br><span class="line">  <span class="keyword">static</span> Future&lt;GqlUserRegisterResponseEntity&gt; register(&#123;</span><br><span class="line">    <span class="meta">@required</span> BuildContext context,</span><br><span class="line">    <span class="meta">@required</span> GqlUserRegisterRequestEntity variables,</span><br><span class="line">  &#125;) <span class="keyword">async</span> &#123;</span><br><span class="line">    QueryResult response = <span class="keyword">await</span> GraphqlClientUtil.mutate(</span><br><span class="line">        context: context,</span><br><span class="line">        schema: GQL_USER_REGISTER,</span><br><span class="line">        variables: variables.toJson());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> GqlUserRegisterResponseEntity.fromJson(response.data[<span class="string">"register"</span>]);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h2><h3 id="设计稿蓝湖预览"><a href="#设计稿蓝湖预览" class="headerlink" title="设计稿蓝湖预览"></a>设计稿蓝湖预览</h3><p><a href="https://lanhuapp.com/url/lYuz1" target="_blank" rel="noopener">https://lanhuapp.com/url/lYuz1</a><br>密码: gSKl</p><blockquote><p>蓝湖现在收费了，所以查看标记还请自己上传 xd 设计稿<br>商业设计稿文件不好直接分享, 可以加微信联系 ducafecat</p></blockquote><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                   
      
    
    </summary>
    
      <category term="Flutter 实战从零开始" scheme="https://ducafecat.tech/categories/Flutter-%E5%AE%9E%E6%88%98%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B/"/>
    
    
      <category term="flutter" scheme="https://ducafecat.tech/tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>Flutter 实战从零开始 新闻客户端 - 15 headless strapi 数据建模 graphql 条件查询排序</title>
    <link href="https://ducafecat.tech/2020/07/09/flutter-project/flutter-project-news-15-strapi-graphql-data-model/"/>
    <id>https://ducafecat.tech/2020/07/09/flutter-project/flutter-project-news-15-strapi-graphql-data-model/</id>
    <published>2020-07-08T16:00:00.000Z</published>
    <updated>2020-07-24T06:53:23.029Z</updated>
    
    <content type="html"><![CDATA[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-07-09-21-27-16.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>portainer 容器管理工具</li><li>数据库设计过程</li><li>数据库设计目标、规范、习惯</li><li>graphql 条件查询、排序</li><li>flutter 代码实现</li></ul><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><p><a href="https://www.bilibili.com/video/BV1jD4y1S7Mu/" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1jD4y1S7Mu/</a></p><iframe src="//player.bilibili.com/player.html?bvid=BV1jD4y1S7Mu&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="100%" height="400px"> </iframe><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><a href="https://github.com/ducafecat/flutter_learn_news/releases/tag/v1.0.15" target="_blank" rel="noopener">https://github.com/ducafecat/flutter_learn_news/releases/tag/v1.0.15</a></p><h2 id="strapi-运行环境网盘下载"><a href="#strapi-运行环境网盘下载" class="headerlink" title="strapi 运行环境网盘下载"></a>strapi 运行环境网盘下载</h2><ul><li>网盘</li></ul><p>链接:<a href="https://pan.baidu.com/s/13Ujy2hzXp8tSqxCx_4IhVQ" target="_blank" rel="noopener">https://pan.baidu.com/s/13Ujy2hzXp8tSqxCx_4IhVQ</a><br>密码:yu82</p><ul><li>文件</li></ul><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>strapi-docker-compose-00.zip</td><td>干净环境，已安装 graphql 插件</td></tr><tr><td>strapi-docker-compose-15.zip</td><td>15 课内容</td></tr></tbody></table><ul><li>运行</li></ul><p>需要用 docker-compose 启动<br>账号 admin<br>密码 123456</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动</span></span><br><span class="line">docker-compose up -d --remove-orphans</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭</span></span><br><span class="line">docker-compose down</span><br></pre></td></tr></table></figure><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><ul><li><a href="https://www.portainer.io" target="_blank" rel="noopener">https://www.portainer.io</a></li><li><a href="https://www.draw.io" target="_blank" rel="noopener">https://www.draw.io</a></li><li><a href="https://app.quicktype.io" target="_blank" rel="noopener">https://app.quicktype.io</a></li></ul><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="安装-portainer"><a href="#安装-portainer" class="headerlink" title="安装 portainer"></a>安装 portainer</h3><ul><li><a href="https://www.portainer.io" target="_blank" rel="noopener">https://www.portainer.io</a></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 9000:9000 \</span><br><span class="line">    --restart=always \</span><br><span class="line">    -v /var/run/docker.sock:/var/run/docker.sock \</span><br><span class="line">    --name portainer-local \</span><br><span class="line">    portainer/portainer</span><br></pre></td></tr></table></figure><h3 id="设计数据模型"><a href="#设计数据模型" class="headerlink" title="设计数据模型"></a>设计数据模型</h3><ul><li><p><a href="https://www.draw.io" target="_blank" rel="noopener">https://www.draw.io</a></p></li><li><p>标准数据库设计</p></li></ul><p>ER 图 -&gt; 设计范式 -&gt; 数据库物理表</p><ul><li>ER</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-07-09-17-59-37.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>范式</li></ul><p><a href="https://zh.wikipedia.org/wiki/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A7%84%E8%8C%83%E5%8C%96" target="_blank" rel="noopener">https://zh.wikipedia.org/wiki/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A7%84%E8%8C%83%E5%8C%96</a></p><ul><li>设计规范 表前缀</li></ul><p>sys<em> 系统、用户、权限<br>dict</em> 字典表<br>bus_ 业务</p><ul><li>设计数据 对象、属性、关系</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-07-09-17-56-48.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="创建-strapi-数据类型"><a href="#创建-strapi-数据类型" class="headerlink" title="创建 strapi 数据类型"></a>创建 strapi 数据类型</h3><ul><li>创建外键表 新闻分类</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-07-09-18-02-49.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>创建外键表 新闻频道</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-07-09-18-03-04.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>创建业务表 新闻内容</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-07-09-18-03-20.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>创建链接外键 新闻内容、分类、频道</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-07-09-18-03-37.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="编写-graphql-查询"><a href="#编写-graphql-查询" class="headerlink" title="编写 graphql 查询"></a>编写 graphql 查询</h3><ul><li>新闻</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">query News($category_code: String) &#123;</span><br><span class="line">  busNews(where: &#123; dict_categories: &#123; code: $category_code &#125; &#125;) &#123;</span><br><span class="line">    title</span><br><span class="line">    dict_channel &#123;</span><br><span class="line">      code</span><br><span class="line">      title</span><br><span class="line">      icon &#123;</span><br><span class="line">        url</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    dict_categories &#123;</span><br><span class="line">      code</span><br><span class="line">      title</span><br><span class="line">    &#125;</span><br><span class="line">    author</span><br><span class="line">    url</span><br><span class="line">    addtime</span><br><span class="line">    thumbnail &#123;</span><br><span class="line">      url</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>首页</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">query pageIndex &#123;</span><br><span class="line">  # 分类</span><br><span class="line">  dictCategories(sort: &quot;sortNum:desc&quot;) &#123;</span><br><span class="line">    code</span><br><span class="line">    title</span><br><span class="line">  &#125;</span><br><span class="line">  # 频道</span><br><span class="line">  dictChannels(sort: &quot;sortNum:desc&quot;) &#123;</span><br><span class="line">    code</span><br><span class="line">    title</span><br><span class="line">    icon &#123;</span><br><span class="line">      url</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  # 热点</span><br><span class="line">  busNews(where: &#123; dict_categories: &#123; code: &quot;news_hot&quot; &#125; &#125;) &#123;</span><br><span class="line">    title</span><br><span class="line">    dict_channel &#123;</span><br><span class="line">      code</span><br><span class="line">      title</span><br><span class="line">      icon &#123;</span><br><span class="line">        url</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    dict_categories &#123;</span><br><span class="line">      code</span><br><span class="line">      title</span><br><span class="line">    &#125;</span><br><span class="line">    author</span><br><span class="line">    url</span><br><span class="line">    addtime</span><br><span class="line">    thumbnail &#123;</span><br><span class="line">      url</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="编写-flutter-代码"><a href="#编写-flutter-代码" class="headerlink" title="编写 flutter 代码"></a>编写 flutter 代码</h3><ul><li>实例 entity</li></ul><p>lib/common/entitys/gql_news.dart</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 首页</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GqlIndexResponseEntity</span> </span>&#123;</span><br><span class="line">  GqlIndexResponseEntity(&#123;</span><br><span class="line">    <span class="keyword">this</span>.dictCategories,</span><br><span class="line">    <span class="keyword">this</span>.dictChannels,</span><br><span class="line">    <span class="keyword">this</span>.busNews,</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">List</span>&lt;DictCategoryEntity&gt; dictCategories;</span><br><span class="line">  <span class="built_in">List</span>&lt;DictChannelEntity&gt; dictChannels;</span><br><span class="line">  <span class="built_in">List</span>&lt;GqlNewsResponseEntity&gt; busNews;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">factory</span> GqlIndexResponseEntity.fromJson(<span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">dynamic</span>&gt; json) =&gt;</span><br><span class="line">      GqlIndexResponseEntity(</span><br><span class="line">        dictCategories: <span class="built_in">List</span>&lt;DictCategoryEntity&gt;.from(</span><br><span class="line">            json[<span class="string">"dictCategories"</span>].map((x) =&gt; DictCategoryEntity.fromJson(x))),</span><br><span class="line">        dictChannels: <span class="built_in">List</span>&lt;DictChannelEntity&gt;.from(</span><br><span class="line">            json[<span class="string">"dictChannels"</span>].map((x) =&gt; DictChannelEntity.fromJson(x))),</span><br><span class="line">        busNews: <span class="built_in">List</span>&lt;GqlNewsResponseEntity&gt;.from(</span><br><span class="line">            json[<span class="string">"busNews"</span>].map((x) =&gt; GqlNewsResponseEntity.fromJson(x))),</span><br><span class="line">      );</span><br><span class="line"></span><br><span class="line">  <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">dynamic</span>&gt; toJson() =&gt; &#123;</span><br><span class="line">        <span class="string">"dictCategories"</span>:</span><br><span class="line">            <span class="built_in">List</span>&lt;<span class="built_in">dynamic</span>&gt;.from(dictCategories.map((x) =&gt; x.toJson())),</span><br><span class="line">        <span class="string">"dictChannels"</span>: <span class="built_in">List</span>&lt;<span class="built_in">dynamic</span>&gt;.from(dictChannels.map((x) =&gt; x.toJson())),</span><br><span class="line">        <span class="string">"busNews"</span>: <span class="built_in">List</span>&lt;<span class="built_in">dynamic</span>&gt;.from(busNews.map((x) =&gt; x.toJson())),</span><br><span class="line">      &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 新闻</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GqlNewsResponseEntity</span> </span>&#123;</span><br><span class="line">  GqlNewsResponseEntity(&#123;</span><br><span class="line">    <span class="keyword">this</span>.title,</span><br><span class="line">    <span class="keyword">this</span>.dictChannel,</span><br><span class="line">    <span class="keyword">this</span>.dictCategories,</span><br><span class="line">    <span class="keyword">this</span>.author,</span><br><span class="line">    <span class="keyword">this</span>.url,</span><br><span class="line">    <span class="keyword">this</span>.addtime,</span><br><span class="line">    <span class="keyword">this</span>.thumbnail,</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">String</span> title;</span><br><span class="line">  DictChannelEntity dictChannel;</span><br><span class="line">  <span class="built_in">List</span>&lt;DictCategoryEntity&gt; dictCategories;</span><br><span class="line">  <span class="built_in">String</span> author;</span><br><span class="line">  <span class="built_in">String</span> url;</span><br><span class="line">  <span class="built_in">DateTime</span> addtime;</span><br><span class="line">  ThumbnailEntity thumbnail;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">factory</span> GqlNewsResponseEntity.fromJson(<span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">dynamic</span>&gt; json) =&gt;</span><br><span class="line">      GqlNewsResponseEntity(</span><br><span class="line">        title: json[<span class="string">"title"</span>],</span><br><span class="line">        dictChannel: DictChannelEntity.fromJson(json[<span class="string">"dict_channel"</span>]),</span><br><span class="line">        dictCategories: <span class="built_in">List</span>&lt;DictCategoryEntity&gt;.from(</span><br><span class="line">            json[<span class="string">"dict_categories"</span>].map((x) =&gt; DictCategoryEntity.fromJson(x))),</span><br><span class="line">        author: json[<span class="string">"author"</span>],</span><br><span class="line">        url: json[<span class="string">"url"</span>],</span><br><span class="line">        addtime: <span class="built_in">DateTime</span>.parse(json[<span class="string">"addtime"</span>]),</span><br><span class="line">        thumbnail: ThumbnailEntity.fromJson(json[<span class="string">"thumbnail"</span>]),</span><br><span class="line">      );</span><br><span class="line"></span><br><span class="line">  <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">dynamic</span>&gt; toJson() =&gt; &#123;</span><br><span class="line">        <span class="string">"title"</span>: title,</span><br><span class="line">        <span class="string">"dict_channel"</span>: dictChannel.toJson(),</span><br><span class="line">        <span class="string">"dict_categories"</span>:</span><br><span class="line">            <span class="built_in">List</span>&lt;<span class="built_in">dynamic</span>&gt;.from(dictCategories.map((x) =&gt; x.toJson())),</span><br><span class="line">        <span class="string">"author"</span>: author,</span><br><span class="line">        <span class="string">"url"</span>: url,</span><br><span class="line">        <span class="string">"addtime"</span>:</span><br><span class="line">            <span class="string">"<span class="subst">$&#123;addtime.year.toString().padLeft(<span class="number">4</span>, <span class="string">'0'</span>)&#125;</span>-<span class="subst">$&#123;addtime.month.toString().padLeft(<span class="number">2</span>, <span class="string">'0'</span>)&#125;</span>-<span class="subst">$&#123;addtime.day.toString().padLeft(<span class="number">2</span>, <span class="string">'0'</span>)&#125;</span>"</span>,</span><br><span class="line">        <span class="string">"ThumbnailEntity"</span>: thumbnail.toJson(),</span><br><span class="line">      &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 分类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DictCategoryEntity</span> </span>&#123;</span><br><span class="line">  DictCategoryEntity(&#123;</span><br><span class="line">    <span class="keyword">this</span>.code,</span><br><span class="line">    <span class="keyword">this</span>.title,</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">String</span> code;</span><br><span class="line">  <span class="built_in">String</span> title;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">factory</span> DictCategoryEntity.fromJson(<span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">dynamic</span>&gt; json) =&gt;</span><br><span class="line">      DictCategoryEntity(</span><br><span class="line">        code: json[<span class="string">"code"</span>],</span><br><span class="line">        title: json[<span class="string">"title"</span>],</span><br><span class="line">      );</span><br><span class="line"></span><br><span class="line">  <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">dynamic</span>&gt; toJson() =&gt; &#123;</span><br><span class="line">        <span class="string">"code"</span>: code,</span><br><span class="line">        <span class="string">"title"</span>: title,</span><br><span class="line">      &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 频道</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DictChannelEntity</span> </span>&#123;</span><br><span class="line">  DictChannelEntity(&#123;</span><br><span class="line">    <span class="keyword">this</span>.code,</span><br><span class="line">    <span class="keyword">this</span>.title,</span><br><span class="line">    <span class="keyword">this</span>.icon,</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">String</span> code;</span><br><span class="line">  <span class="built_in">String</span> title;</span><br><span class="line">  ThumbnailEntity icon;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">factory</span> DictChannelEntity.fromJson(<span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">dynamic</span>&gt; json) =&gt;</span><br><span class="line">      DictChannelEntity(</span><br><span class="line">        code: json[<span class="string">"code"</span>],</span><br><span class="line">        title: json[<span class="string">"title"</span>],</span><br><span class="line">        icon: ThumbnailEntity.fromJson(json[<span class="string">"icon"</span>]),</span><br><span class="line">      );</span><br><span class="line"></span><br><span class="line">  <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">dynamic</span>&gt; toJson() =&gt; &#123;</span><br><span class="line">        <span class="string">"code"</span>: code,</span><br><span class="line">        <span class="string">"title"</span>: title,</span><br><span class="line">        <span class="string">"icon"</span>: icon.toJson(),</span><br><span class="line">      &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 图</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ThumbnailEntity</span> </span>&#123;</span><br><span class="line">  ThumbnailEntity(&#123;</span><br><span class="line">    <span class="keyword">this</span>.url,</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">String</span> url;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">factory</span> ThumbnailEntity.fromJson(<span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">dynamic</span>&gt; json) =&gt;</span><br><span class="line">      ThumbnailEntity(</span><br><span class="line">        url: json[<span class="string">"url"</span>],</span><br><span class="line">      );</span><br><span class="line"></span><br><span class="line">  <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">dynamic</span>&gt; toJson() =&gt; &#123;</span><br><span class="line">        <span class="string">"url"</span>: url,</span><br><span class="line">      &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>api</li></ul><p>lib/common/apis/gql_news.dart</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// <span class="markdown">新闻</span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GqlNewsAPI</span> </span>&#123;</span><br><span class="line">  <span class="comment">/// <span class="markdown">首页</span></span></span><br><span class="line">  <span class="keyword">static</span> Future&lt;GqlIndexResponseEntity&gt; indexPageInfo(&#123;</span><br><span class="line">    <span class="meta">@required</span> BuildContext context,</span><br><span class="line">    <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">dynamic</span>&gt; params,</span><br><span class="line">  &#125;) <span class="keyword">async</span> &#123;</span><br><span class="line">    QueryResult response =</span><br><span class="line">        <span class="keyword">await</span> GraphqlClientUtil.query(context: context, schema: GQL_INDEX_PAGE);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> GqlIndexResponseEntity.fromJson(response.data);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">翻页</span></span></span><br><span class="line">  <span class="keyword">static</span> Future&lt;<span class="built_in">List</span>&lt;GqlNewsResponseEntity&gt;&gt; newsPageList(&#123;</span><br><span class="line">    <span class="meta">@required</span> BuildContext context,</span><br><span class="line">    <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">dynamic</span>&gt; params,</span><br><span class="line">  &#125;) <span class="keyword">async</span> &#123;</span><br><span class="line">    QueryResult response = <span class="keyword">await</span> GraphqlClientUtil.query(</span><br><span class="line">        context: context, schema: GQL_NEWS_LIST, variables: params);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> response.data[<span class="string">'busNews'</span>]</span><br><span class="line">        .map&lt;GqlNewsResponseEntity&gt;(</span><br><span class="line">            (item) =&gt; GqlNewsResponseEntity.fromJson(item))</span><br><span class="line">        .toList();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>界面业务代码</li></ul><p>lib/pages/main/main.dart</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">GqlIndexResponseEntity _indexPageData; <span class="comment">// 首页数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 读取所有数据</span></span><br><span class="line">_loadAllData() <span class="keyword">async</span> &#123;</span><br><span class="line">  _indexPageData = <span class="keyword">await</span> GqlNewsAPI.indexPageInfo(context: context);</span><br><span class="line">  ...</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (mounted) &#123;</span><br><span class="line">    setState(() &#123;&#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 拉取推荐、新闻</span></span><br><span class="line">_loadNewsData(</span><br><span class="line">  categoryCode, &#123;</span><br><span class="line">  <span class="built_in">bool</span> refresh = <span class="keyword">false</span>,</span><br><span class="line">&#125;) <span class="keyword">async</span> &#123;</span><br><span class="line">  _selCategoryCode = categoryCode;</span><br><span class="line">  _newsPageList = <span class="keyword">await</span> GqlNewsAPI.newsPageList(</span><br><span class="line">      context: context, params: &#123;<span class="string">"category_code"</span>: categoryCode&#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (mounted) &#123;</span><br><span class="line">    setState(() &#123;&#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">...</span><br></pre></td></tr></table></figure><blockquote><p>详见 git</p></blockquote><h2 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h2><h3 id="设计稿蓝湖预览"><a href="#设计稿蓝湖预览" class="headerlink" title="设计稿蓝湖预览"></a>设计稿蓝湖预览</h3><p><a href="https://lanhuapp.com/url/lYuz1" target="_blank" rel="noopener">https://lanhuapp.com/url/lYuz1</a><br>密码: gSKl</p><blockquote><p>蓝湖现在收费了，所以查看标记还请自己上传 xd 设计稿<br>商业设计稿文件不好直接分享, 可以加微信联系 ducafecat</p></blockquote><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                   
      
    
    </summary>
    
      <category term="Flutter 实战从零开始" scheme="https://ducafecat.tech/categories/Flutter-%E5%AE%9E%E6%88%98%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B/"/>
    
    
      <category term="flutter" scheme="https://ducafecat.tech/tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>Flutter 实战从零开始 新闻客户端 - 14 headless strapi + graphql 快速构建新闻后台</title>
    <link href="https://ducafecat.tech/2020/07/03/flutter-project/flutter-project-news-14-headless-strapi-graphql/"/>
    <id>https://ducafecat.tech/2020/07/03/flutter-project/flutter-project-news-14-headless-strapi-graphql/</id>
    <published>2020-07-02T16:00:00.000Z</published>
    <updated>2020-07-04T06:19:49.792Z</updated>
    
    <content type="html"><![CDATA[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-07-03-17-43-32.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>strapi + graphql 插件 + docker 安装</li><li>strapi 管理数据结构、内容</li><li>flutter + graphql 插件 实现查询</li></ul><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><iframe src="//player.bilibili.com/player.html?bvid=BV1Zz411e7dj&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="100%" height="400px"> </iframe><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><a href="https://github.com/ducafecat/flutter_learn_news/releases/tag/v1.0.14" target="_blank" rel="noopener">https://github.com/ducafecat/flutter_learn_news/releases/tag/v1.0.14</a></p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="后台开发步骤"><a href="#后台开发步骤" class="headerlink" title="后台开发步骤"></a>后台开发步骤</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-07-04-13-47-38.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="采用-strapi-nodejs-网关-的方案"><a href="#采用-strapi-nodejs-网关-的方案" class="headerlink" title="采用 strapi + nodejs + 网关 的方案"></a>采用 strapi + nodejs + 网关 的方案</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-07-04-13-48-08.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="1-strapi-安装"><a href="#1-strapi-安装" class="headerlink" title="1. strapi 安装"></a>1. strapi 安装</h3><h4 id="1-1-docker-compose-方式安装"><a href="#1-1-docker-compose-方式安装" class="headerlink" title="1.1 docker-compose 方式安装"></a>1.1 docker-compose 方式安装</h4><ul><li>.env</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PASSWORD=123456</span><br></pre></td></tr></table></figure><ul><li>docker-compose.yml</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">"3"</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">mongo:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mongo</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">mongo</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">27017</span><span class="string">:27017</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MONGO_INITDB_ROOT_USERNAME=root</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MONGO_INITDB_ROOT_PASSWORD=$&#123;PASSWORD&#125;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./docker-data/mongo:/data/db</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="attr">docker_net:</span></span><br><span class="line">        <span class="attr">ipv4_address:</span> <span class="number">172.22</span><span class="number">.0</span><span class="number">.11</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># starpi</span></span><br><span class="line">  <span class="comment"># admin / 123456 / admin@ducafecat.tech</span></span><br><span class="line">  <span class="attr">strapi-app:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">strapi/strapi</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">strapi-app</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">1337</span><span class="string">:1337</span></span><br><span class="line">    <span class="comment"># command: strapi build</span></span><br><span class="line">    <span class="comment"># command: strapi start</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DATABASE_CLIENT=mongo</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DATABASE_HOST=mongo</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DATABASE_PORT=27017</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DATABASE_NAME=strapi</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DATABASE_USERNAME=root</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DATABASE_PASSWORD=$&#123;PASSWORD&#125;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DATABASE_AUTHENTICATION_DATABASE=strapi</span></span><br><span class="line">      <span class="comment"># - NODE_ENV=production</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mongo</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./docker-data/strapi-app:/srv/app</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="attr">docker_net:</span></span><br><span class="line">        <span class="attr">ipv4_address:</span> <span class="number">172.22</span><span class="number">.0</span><span class="number">.12</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">docker_net:</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">bridge</span></span><br><span class="line">    <span class="attr">ipam:</span></span><br><span class="line">      <span class="attr">config:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">subnet:</span> <span class="number">172.22</span><span class="number">.0</span><span class="number">.0</span><span class="string">/16</span></span><br></pre></td></tr></table></figure><p><a href="http://localhost:1337/admin" target="_blank" rel="noopener">http://localhost:1337/admin</a></p><h4 id="1-2-安装-graphql-插件"><a href="#1-2-安装-graphql-插件" class="headerlink" title="1.2 安装 graphql 插件"></a>1.2 安装 graphql 插件</h4><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-07-03-16-45-52.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="2-构建新闻数据结构"><a href="#2-构建新闻数据结构" class="headerlink" title="2. 构建新闻数据结构"></a>2. 构建新闻数据结构</h3><h4 id="2-1-创建数据类型"><a href="#2-1-创建数据类型" class="headerlink" title="2.1 创建数据类型"></a>2.1 创建数据类型</h4><ul><li>添加类型</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-07-03-16-47-15.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>添加字段</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-07-03-16-47-35.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>字段列表</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-07-03-16-46-25.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h4 id="2-2-调整数据编辑界面"><a href="#2-2-调整数据编辑界面" class="headerlink" title="2.2 调整数据编辑界面"></a>2.2 调整数据编辑界面</h4><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-07-03-16-48-29.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h4 id="2-3-调整数据列表界面"><a href="#2-3-调整数据列表界面" class="headerlink" title="2.3 调整数据列表界面"></a>2.3 调整数据列表界面</h4><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-07-03-16-48-55.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h4 id="2-4-维护数据"><a href="#2-4-维护数据" class="headerlink" title="2.4 维护数据"></a>2.4 维护数据</h4><ul><li>列表</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-07-03-16-49-37.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>添加</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-07-03-16-49-59.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="3-调试-graphql-请求"><a href="#3-调试-graphql-请求" class="headerlink" title="3. 调试 graphql 请求"></a>3. 调试 graphql 请求</h3><h4 id="3-3-graphql-语法"><a href="#3-3-graphql-语法" class="headerlink" title="3.3 graphql 语法"></a>3.3 graphql 语法</h4><ul><li>类型<ul><li>query 查询</li><li>mutate 操作</li></ul></li></ul><h4 id="3-4-调试新闻列表"><a href="#3-4-调试新闻列表" class="headerlink" title="3.4 调试新闻列表"></a>3.4 调试新闻列表</h4><p><a href="http://localhost:1337/graphql" target="_blank" rel="noopener">http://localhost:1337/graphql</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-07-03-16-50-31.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="4-编写-flutter-代码"><a href="#4-编写-flutter-代码" class="headerlink" title="4. 编写 flutter 代码"></a>4. 编写 flutter 代码</h3><h4 id="4-1-加入-graphql-插件"><a href="#4-1-加入-graphql-插件" class="headerlink" title="4.1 加入 graphql 插件"></a>4.1 加入 graphql 插件</h4><p><a href="https://pub.flutter-io.cn/packages/graphql" target="_blank" rel="noopener">https://pub.flutter-io.cn/packages/graphql</a></p><ul><li>pubspec.yaml</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">dependencies:</span></span><br><span class="line">  <span class="comment"># graphql</span></span><br><span class="line">  <span class="attr">graphql:</span> <span class="string">^3.0.2</span></span><br></pre></td></tr></table></figure><h4 id="4-2-封装-graphql-client-工具类"><a href="#4-2-封装-graphql-client-工具类" class="headerlink" title="4.2 封装 graphql client 工具类"></a>4.2 封装 graphql client 工具类</h4><ul><li>lib/common/utils/graphql_client.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/common/values/values.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/common/widgets/widgets.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:graphql/client.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GraphqlClientUtil</span> </span>&#123;</span><br><span class="line">  <span class="keyword">static</span> OptimisticCache cache = OptimisticCache(</span><br><span class="line">    dataIdFromObject: typenameDataIdFromObject,</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">  <span class="keyword">static</span> client() &#123;</span><br><span class="line">    HttpLink _httpLink = HttpLink(</span><br><span class="line">      uri: <span class="string">'<span class="subst">$SERVER_STRAPI_GRAPHQL_URL</span>/graphql'</span>,</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// final AuthLink _authLink = AuthLink(</span></span><br><span class="line">    <span class="comment">//   getToken: () =&gt;</span></span><br><span class="line">    <span class="comment">//       'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVlZmMzNDdhYzgzOTVjMDAwY2ViYzE5NyIsImlhdCI6MTU5MzY1NDcwNiwiZXhwIjoxNTk2MjQ2NzA2fQ.RYDmNSDJxcZLLPHAf4u59IER7Bs5VoWfBo1_t-TR5yY',</span></span><br><span class="line">    <span class="comment">// );</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// final Link _link = _authLink.concat(_httpLink);</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> GraphQLClient(</span><br><span class="line">      cache: cache,</span><br><span class="line">      link: _httpLink,</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 查询</span></span><br><span class="line">  <span class="keyword">static</span> Future query(&#123;</span><br><span class="line">    <span class="meta">@required</span> BuildContext context,</span><br><span class="line">    <span class="meta">@required</span> <span class="built_in">String</span> schema,</span><br><span class="line">    <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">dynamic</span>&gt; variables,</span><br><span class="line">  &#125;) <span class="keyword">async</span> &#123;</span><br><span class="line">    QueryOptions options = QueryOptions(</span><br><span class="line">      documentNode: gql(schema),</span><br><span class="line">      variables: variables,</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    QueryResult result = <span class="keyword">await</span> client().query(options);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (result.hasException) &#123;</span><br><span class="line">      toastInfo(msg: result.exception.toString());</span><br><span class="line">      <span class="keyword">throw</span> result.exception;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 操作</span></span><br><span class="line">  <span class="keyword">static</span> Future mutate(&#123;</span><br><span class="line">    <span class="meta">@required</span> BuildContext context,</span><br><span class="line">    <span class="meta">@required</span> <span class="built_in">String</span> schema,</span><br><span class="line">    <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">dynamic</span>&gt; variables,</span><br><span class="line">  &#125;) <span class="keyword">async</span> &#123;</span><br><span class="line">    QueryOptions options = QueryOptions(</span><br><span class="line">      documentNode: gql(schema),</span><br><span class="line">      variables: variables,</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    QueryResult result = <span class="keyword">await</span> client().mutate(options);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (result.hasException) &#123;</span><br><span class="line">      toastInfo(msg: result.exception.toString());</span><br><span class="line">      <span class="keyword">throw</span> result.exception;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-3-编写-graphql-查询请求"><a href="#4-3-编写-graphql-查询请求" class="headerlink" title="4.3 编写 graphql 查询请求"></a>4.3 编写 graphql 查询请求</h4><ul><li>lib/common/graphql/news_content.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="built_in">String</span> GQL_NEWS_LIST = <span class="string">r'''</span></span><br><span class="line"><span class="string">  query News &#123;</span></span><br><span class="line"><span class="string">    newsContents &#123;</span></span><br><span class="line"><span class="string">      title</span></span><br><span class="line"><span class="string">      category</span></span><br><span class="line"><span class="string">      author</span></span><br><span class="line"><span class="string">      url</span></span><br><span class="line"><span class="string">      addtime</span></span><br><span class="line"><span class="string">      thumbnail &#123;</span></span><br><span class="line"><span class="string">        url</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">'''</span>;</span><br></pre></td></tr></table></figure><h4 id="4-4-编写数据实体"><a href="#4-4-编写数据实体" class="headerlink" title="4.4 编写数据实体"></a>4.4 编写数据实体</h4><p>lib/common/entitys/gql_news.dart</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GqlNewsResponseEntity</span> </span>&#123;</span><br><span class="line">  GqlNewsResponseEntity(&#123;</span><br><span class="line">    <span class="keyword">this</span>.id,</span><br><span class="line">    <span class="keyword">this</span>.title,</span><br><span class="line">    <span class="keyword">this</span>.category,</span><br><span class="line">    <span class="keyword">this</span>.author,</span><br><span class="line">    <span class="keyword">this</span>.url,</span><br><span class="line">    <span class="keyword">this</span>.addtime,</span><br><span class="line">    <span class="keyword">this</span>.thumbnail,</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">String</span> id;</span><br><span class="line">  <span class="built_in">String</span> title;</span><br><span class="line">  <span class="built_in">String</span> category;</span><br><span class="line">  <span class="built_in">String</span> author;</span><br><span class="line">  <span class="built_in">String</span> url;</span><br><span class="line">  <span class="built_in">DateTime</span> addtime;</span><br><span class="line">  Thumbnail thumbnail;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">factory</span> GqlNewsResponseEntity.fromJson(<span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">dynamic</span>&gt; json) =&gt;</span><br><span class="line">      GqlNewsResponseEntity(</span><br><span class="line">        id: json[<span class="string">"id"</span>],</span><br><span class="line">        title: json[<span class="string">"title"</span>],</span><br><span class="line">        category: json[<span class="string">"category"</span>],</span><br><span class="line">        author: json[<span class="string">"author"</span>],</span><br><span class="line">        url: json[<span class="string">"url"</span>],</span><br><span class="line">        addtime: <span class="built_in">DateTime</span>.parse(json[<span class="string">"addtime"</span>]),</span><br><span class="line">        thumbnail: Thumbnail.fromJson(json[<span class="string">"thumbnail"</span>]),</span><br><span class="line">      );</span><br><span class="line"></span><br><span class="line">  <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">dynamic</span>&gt; toJson() =&gt; &#123;</span><br><span class="line">        <span class="string">"id"</span>: id,</span><br><span class="line">        <span class="string">"title"</span>: title,</span><br><span class="line">        <span class="string">"category"</span>: category,</span><br><span class="line">        <span class="string">"author"</span>: author,</span><br><span class="line">        <span class="string">"url"</span>: url,</span><br><span class="line">        <span class="string">"addtime"</span>:</span><br><span class="line">            <span class="string">"<span class="subst">$&#123;addtime.year.toString().padLeft(<span class="number">4</span>, <span class="string">'0'</span>)&#125;</span>-<span class="subst">$&#123;addtime.month.toString().padLeft(<span class="number">2</span>, <span class="string">'0'</span>)&#125;</span>-<span class="subst">$&#123;addtime.day.toString().padLeft(<span class="number">2</span>, <span class="string">'0'</span>)&#125;</span>"</span>,</span><br><span class="line">        <span class="string">"thumbnail"</span>: thumbnail.toJson(),</span><br><span class="line">      &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Thumbnail</span> </span>&#123;</span><br><span class="line">  Thumbnail(&#123;</span><br><span class="line">    <span class="keyword">this</span>.url,</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">String</span> url;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">factory</span> Thumbnail.fromJson(<span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">dynamic</span>&gt; json) =&gt; Thumbnail(</span><br><span class="line">        url: json[<span class="string">"url"</span>],</span><br><span class="line">      );</span><br><span class="line"></span><br><span class="line">  <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">dynamic</span>&gt; toJson() =&gt; &#123;</span><br><span class="line">        <span class="string">"url"</span>: url,</span><br><span class="line">      &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-5-编写-API-访问"><a href="#4-5-编写-API-访问" class="headerlink" title="4.5 编写 API 访问"></a>4.5 编写 API 访问</h4><ul><li>lib/common/apis/gql_news.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/common/entitys/entitys.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/common/graphql/graphql.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/common/utils/utils.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:graphql/client.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// <span class="markdown">新闻</span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GqlNewsAPI</span> </span>&#123;</span><br><span class="line">  <span class="comment">/// <span class="markdown">翻页</span></span></span><br><span class="line">  <span class="keyword">static</span> Future&lt;<span class="built_in">List</span>&lt;GqlNewsResponseEntity&gt;&gt; newsPageList(&#123;</span><br><span class="line">    <span class="meta">@required</span> BuildContext context,</span><br><span class="line">    <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">dynamic</span>&gt; params,</span><br><span class="line">  &#125;) <span class="keyword">async</span> &#123;</span><br><span class="line">    QueryResult response =</span><br><span class="line">        <span class="keyword">await</span> GraphqlClientUtil.query(context: context, schema: GQL_NEWS_LIST);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> response.data[<span class="string">'newsContents'</span>]</span><br><span class="line">        .map&lt;GqlNewsResponseEntity&gt;(</span><br><span class="line">            (item) =&gt; GqlNewsResponseEntity.fromJson(item))</span><br><span class="line">        .toList();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-6-修改新闻列表页"><a href="#4-6-修改新闻列表页" class="headerlink" title="4.6 修改新闻列表页"></a>4.6 修改新闻列表页</h4><ul><li>lib/pages/main/main.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'dart:async'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/common/apis/apis.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/common/entitys/entitys.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/common/utils/utils.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/common/values/values.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/common/widgets/widgets.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/pages/main/ad_widget.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/pages/main/categories_widget.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/pages/main/channels_widget.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/pages/main/news_item_widget.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/pages/main/newsletter_widget.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/pages/main/recommend_widget.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_easyrefresh/easy_refresh.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MainPage</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span> </span>&#123;</span><br><span class="line">  MainPage(&#123;Key key&#125;) : <span class="keyword">super</span>(key: key);</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  _MainPageState createState() =&gt; _MainPageState();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_MainPageState</span> <span class="keyword">extends</span> <span class="title">State</span>&lt;<span class="title">MainPage</span>&gt; </span>&#123;</span><br><span class="line">  EasyRefreshController _controller; <span class="comment">// EasyRefresh控制器</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// NewsPageListResponseEntity _newsPageList; // 新闻翻页</span></span><br><span class="line">  <span class="built_in">List</span>&lt;GqlNewsResponseEntity&gt; _newsPageList; <span class="comment">// 新闻翻页</span></span><br><span class="line"></span><br><span class="line">  NewsItem _newsRecommend; <span class="comment">// 新闻推荐</span></span><br><span class="line">  <span class="built_in">List</span>&lt;CategoryResponseEntity&gt; _categories; <span class="comment">// 分类</span></span><br><span class="line">  <span class="built_in">List</span>&lt;ChannelResponseEntity&gt; _channels; <span class="comment">// 频道</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">String</span> _selCategoryCode; <span class="comment">// 选中的分类Code</span></span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="keyword">void</span> initState() &#123;</span><br><span class="line">    <span class="keyword">super</span>.initState();</span><br><span class="line">    _controller = EasyRefreshController();</span><br><span class="line">    _loadAllData();</span><br><span class="line">    _loadLatestWithDiskCache();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 如果有磁盘缓存，延迟3秒拉取更新档案</span></span><br><span class="line">  _loadLatestWithDiskCache() &#123;</span><br><span class="line">    <span class="keyword">if</span> (CACHE_ENABLE == <span class="keyword">true</span>) &#123;</span><br><span class="line">      <span class="keyword">var</span> cacheData = StorageUtil().getJSON(STORAGE_INDEX_NEWS_CACHE_KEY);</span><br><span class="line">      <span class="keyword">if</span> (cacheData != <span class="keyword">null</span>) &#123;</span><br><span class="line">        Timer(<span class="built_in">Duration</span>(seconds: <span class="number">3</span>), () &#123;</span><br><span class="line">          _controller.callRefresh();</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 读取所有数据</span></span><br><span class="line">  _loadAllData() <span class="keyword">async</span> &#123;</span><br><span class="line">    _categories = <span class="keyword">await</span> NewsAPI.categories(</span><br><span class="line">      context: context,</span><br><span class="line">      cacheDisk: <span class="keyword">true</span>,</span><br><span class="line">    );</span><br><span class="line">    _channels = <span class="keyword">await</span> NewsAPI.channels(</span><br><span class="line">      context: context,</span><br><span class="line">      cacheDisk: <span class="keyword">true</span>,</span><br><span class="line">    );</span><br><span class="line">    <span class="comment">// _newsRecommend = await NewsAPI.newsRecommend(</span></span><br><span class="line">    <span class="comment">//   context: context,</span></span><br><span class="line">    <span class="comment">//   cacheDisk: true,</span></span><br><span class="line">    <span class="comment">// );</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// _newsPageList = await NewsAPI.newsPageList(</span></span><br><span class="line">    <span class="comment">//   context: context,</span></span><br><span class="line">    <span class="comment">//   cacheDisk: true,</span></span><br><span class="line">    <span class="comment">// );</span></span><br><span class="line">    _newsPageList = <span class="keyword">await</span> GqlNewsAPI.newsPageList(</span><br><span class="line">      context: context,</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    _selCategoryCode = _categories.first.code;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (mounted) &#123;</span><br><span class="line">      setState(() &#123;&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 拉取推荐、新闻</span></span><br><span class="line">  _loadNewsData(</span><br><span class="line">    categoryCode, &#123;</span><br><span class="line">    <span class="built_in">bool</span> refresh = <span class="keyword">false</span>,</span><br><span class="line">  &#125;) <span class="keyword">async</span> &#123;</span><br><span class="line">    _selCategoryCode = categoryCode;</span><br><span class="line">    _newsRecommend = <span class="keyword">await</span> NewsAPI.newsRecommend(</span><br><span class="line">      context: context,</span><br><span class="line">      params: NewsRecommendRequestEntity(categoryCode: categoryCode),</span><br><span class="line">      refresh: refresh,</span><br><span class="line">      cacheDisk: <span class="keyword">true</span>,</span><br><span class="line">    );</span><br><span class="line">    <span class="comment">// _newsPageList = await NewsAPI.newsPageList(</span></span><br><span class="line">    <span class="comment">//   context: context,</span></span><br><span class="line">    <span class="comment">//   params: NewsPageListRequestEntity(categoryCode: categoryCode),</span></span><br><span class="line">    <span class="comment">//   refresh: refresh,</span></span><br><span class="line">    <span class="comment">//   cacheDisk: true,</span></span><br><span class="line">    <span class="comment">// );</span></span><br><span class="line">    _newsPageList = <span class="keyword">await</span> GqlNewsAPI.newsPageList(</span><br><span class="line">      context: context,</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (mounted) &#123;</span><br><span class="line">      setState(() &#123;&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 分类菜单</span></span><br><span class="line">  Widget _buildCategories() &#123;</span><br><span class="line">    <span class="keyword">return</span> _categories == <span class="keyword">null</span></span><br><span class="line">        ? Container()</span><br><span class="line">        : newsCategoriesWidget(</span><br><span class="line">            categories: _categories,</span><br><span class="line">            selCategoryCode: _selCategoryCode,</span><br><span class="line">            onTap: (CategoryResponseEntity item) &#123;</span><br><span class="line">              _loadNewsData(item.code);</span><br><span class="line">            &#125;,</span><br><span class="line">          );</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 推荐阅读</span></span><br><span class="line">  Widget _buildRecommend() &#123;</span><br><span class="line">    <span class="keyword">return</span> _newsRecommend == <span class="keyword">null</span> <span class="comment">// 数据没到位，可以用骨架图展示</span></span><br><span class="line">        ? Container()</span><br><span class="line">        : recommendWidget(_newsRecommend);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 频道</span></span><br><span class="line">  Widget _buildChannels() &#123;</span><br><span class="line">    <span class="keyword">return</span> _channels == <span class="keyword">null</span></span><br><span class="line">        ? Container()</span><br><span class="line">        : newsChannelsWidget(</span><br><span class="line">            channels: _channels,</span><br><span class="line">            onTap: (ChannelResponseEntity item) &#123;&#125;,</span><br><span class="line">          );</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 新闻列表</span></span><br><span class="line">  Widget _buildNewsList() &#123;</span><br><span class="line">    <span class="keyword">return</span> _newsPageList == <span class="keyword">null</span></span><br><span class="line">        ? Container(</span><br><span class="line">            height: duSetHeight(<span class="number">161</span> * <span class="number">5</span> + <span class="number">100.0</span>),</span><br><span class="line">          )</span><br><span class="line">        : Column(</span><br><span class="line">            children: _newsPageList.map((item) &#123;</span><br><span class="line">              <span class="comment">// 新闻行</span></span><br><span class="line">              <span class="built_in">List</span>&lt;Widget&gt; widgets = &lt;Widget&gt;[</span><br><span class="line">                newsItem(item),</span><br><span class="line">                Divider(height: <span class="number">1</span>),</span><br><span class="line">              ];</span><br><span class="line"></span><br><span class="line">              <span class="comment">// 每 5 条 显示广告</span></span><br><span class="line">              <span class="built_in">int</span> index = _newsPageList.indexOf(item);</span><br><span class="line">              <span class="keyword">if</span> (((index + <span class="number">1</span>) % <span class="number">5</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">                widgets.addAll(&lt;Widget&gt;[</span><br><span class="line">                  adWidget(),</span><br><span class="line">                  Divider(height: <span class="number">1</span>),</span><br><span class="line">                ]);</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">              <span class="comment">// 返回</span></span><br><span class="line">              <span class="keyword">return</span> Column(</span><br><span class="line">                children: widgets,</span><br><span class="line">              );</span><br><span class="line">            &#125;).toList(),</span><br><span class="line">          );</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// ad 广告条</span></span><br><span class="line">  <span class="comment">// 邮件订阅</span></span><br><span class="line">  Widget _buildEmailSubscribe() &#123;</span><br><span class="line">    <span class="keyword">return</span> newsletterWidget();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> _newsPageList == <span class="keyword">null</span></span><br><span class="line">        ? cardListSkeleton()</span><br><span class="line">        : EasyRefresh(</span><br><span class="line">            enableControlFinishRefresh: <span class="keyword">true</span>,</span><br><span class="line">            controller: _controller,</span><br><span class="line">            header: ClassicalHeader(),</span><br><span class="line">            onRefresh: () <span class="keyword">async</span> &#123;</span><br><span class="line">              <span class="keyword">await</span> _loadNewsData(</span><br><span class="line">                _selCategoryCode,</span><br><span class="line">                refresh: <span class="keyword">true</span>,</span><br><span class="line">              );</span><br><span class="line">              _controller.finishRefresh();</span><br><span class="line">            &#125;,</span><br><span class="line">            child: SingleChildScrollView(</span><br><span class="line">              child: Column(</span><br><span class="line">                children: &lt;Widget&gt;[</span><br><span class="line">                  _buildCategories(),</span><br><span class="line">                  Divider(height: <span class="number">1</span>),</span><br><span class="line">                  _buildRecommend(),</span><br><span class="line">                  Divider(height: <span class="number">1</span>),</span><br><span class="line">                  _buildChannels(),</span><br><span class="line">                  Divider(height: <span class="number">1</span>),</span><br><span class="line">                  _buildNewsList(),</span><br><span class="line">                  Divider(height: <span class="number">1</span>),</span><br><span class="line">                  _buildEmailSubscribe(),</span><br><span class="line">                ],</span><br><span class="line">              ),</span><br><span class="line">            ),</span><br><span class="line">          );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-7-修改新闻详情页"><a href="#4-7-修改新闻详情页" class="headerlink" title="4.7 修改新闻详情页"></a>4.7 修改新闻详情页</h4><ul><li>lib/pages/main/news_item_widget.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:auto_route/auto_route.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/common/entitys/entitys.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/common/utils/utils.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/common/values/values.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/common/widgets/widgets.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/common/router/router.gr.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// <span class="markdown">新闻行 Item</span></span></span><br><span class="line">Widget newsItem(GqlNewsResponseEntity item) &#123;</span><br><span class="line">  <span class="keyword">return</span> Container(</span><br><span class="line">    height: duSetHeight(<span class="number">161</span>),</span><br><span class="line">    padding: EdgeInsets.all(duSetWidth(<span class="number">20</span>)),</span><br><span class="line">    child: Row(</span><br><span class="line">      mainAxisAlignment: MainAxisAlignment.spaceBetween,</span><br><span class="line">      crossAxisAlignment: CrossAxisAlignment.start,</span><br><span class="line">      children: &lt;Widget&gt;[</span><br><span class="line">        <span class="comment">// 图</span></span><br><span class="line">        InkWell(</span><br><span class="line">          onTap: () &#123;</span><br><span class="line">            ExtendedNavigator.rootNavigator.pushNamed(</span><br><span class="line">              Routes.detailsPageRoute,</span><br><span class="line">              arguments: DetailsPageArguments(item: item),</span><br><span class="line">            );</span><br><span class="line">          &#125;,</span><br><span class="line">          child: imageCached(</span><br><span class="line">            <span class="string">'<span class="subst">$SERVER_STRAPI_GRAPHQL_URL</span><span class="subst">$&#123;item.thumbnail.url&#125;</span>'</span>,</span><br><span class="line">            width: duSetWidth(<span class="number">121</span>),</span><br><span class="line">            height: duSetWidth(<span class="number">121</span>),</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">        <span class="comment">// 右侧</span></span><br><span class="line">        SizedBox(</span><br><span class="line">          width: duSetWidth(<span class="number">194</span>),</span><br><span class="line">          child: Column(</span><br><span class="line">            crossAxisAlignment: CrossAxisAlignment.start,</span><br><span class="line">            children: &lt;Widget&gt;[</span><br><span class="line">              <span class="comment">// 作者</span></span><br><span class="line">              Container(</span><br><span class="line">                margin: EdgeInsets.all(<span class="number">0</span>),</span><br><span class="line">                child: Text(</span><br><span class="line">                  item.author,</span><br><span class="line">                  style: TextStyle(</span><br><span class="line">                    fontFamily: <span class="string">'Avenir'</span>,</span><br><span class="line">                    fontWeight: FontWeight.normal,</span><br><span class="line">                    color: AppColors.thirdElementText,</span><br><span class="line">                    fontSize: duSetFontSize(<span class="number">14</span>),</span><br><span class="line">                    height: <span class="number">1</span>,</span><br><span class="line">                  ),</span><br><span class="line">                ),</span><br><span class="line">              ),</span><br><span class="line">              <span class="comment">// 标题</span></span><br><span class="line">              InkWell(</span><br><span class="line">                onTap: () &#123;</span><br><span class="line">                  ExtendedNavigator.rootNavigator.pushNamed(</span><br><span class="line">                    Routes.detailsPageRoute,</span><br><span class="line">                    arguments: DetailsPageArguments(item: item),</span><br><span class="line">                  );</span><br><span class="line">                &#125;,</span><br><span class="line">                child: Container(</span><br><span class="line">                  margin: EdgeInsets.only(top: duSetHeight(<span class="number">10</span>)),</span><br><span class="line">                  child: Text(</span><br><span class="line">                    item.title,</span><br><span class="line">                    style: TextStyle(</span><br><span class="line">                      fontFamily: <span class="string">'Montserrat'</span>,</span><br><span class="line">                      fontWeight: FontWeight.w500,</span><br><span class="line">                      color: AppColors.primaryText,</span><br><span class="line">                      fontSize: duSetFontSize(<span class="number">16</span>),</span><br><span class="line">                      height: <span class="number">1</span>,</span><br><span class="line">                    ),</span><br><span class="line">                    overflow: TextOverflow.clip,</span><br><span class="line">                    maxLines: <span class="number">3</span>,</span><br><span class="line">                  ),</span><br><span class="line">                ),</span><br><span class="line">              ),</span><br><span class="line">              <span class="comment">// Spacer</span></span><br><span class="line">              Spacer(),</span><br><span class="line">              <span class="comment">// 一行 3 列</span></span><br><span class="line">              Container(</span><br><span class="line">                child: Row(</span><br><span class="line">                  crossAxisAlignment: CrossAxisAlignment.center,</span><br><span class="line">                  children: &lt;Widget&gt;[</span><br><span class="line">                    <span class="comment">// 分类</span></span><br><span class="line">                    ConstrainedBox(</span><br><span class="line">                      constraints: BoxConstraints(</span><br><span class="line">                        maxWidth: duSetWidth(<span class="number">60</span>),</span><br><span class="line">                      ),</span><br><span class="line">                      child: Text(</span><br><span class="line">                        item.category,</span><br><span class="line">                        style: TextStyle(</span><br><span class="line">                          fontFamily: <span class="string">'Avenir'</span>,</span><br><span class="line">                          fontWeight: FontWeight.normal,</span><br><span class="line">                          color: AppColors.secondaryElementText,</span><br><span class="line">                          fontSize: duSetFontSize(<span class="number">14</span>),</span><br><span class="line">                          height: <span class="number">1</span>,</span><br><span class="line">                        ),</span><br><span class="line">                        overflow: TextOverflow.clip,</span><br><span class="line">                        maxLines: <span class="number">1</span>,</span><br><span class="line">                      ),</span><br><span class="line">                    ),</span><br><span class="line">                    <span class="comment">// 添加时间</span></span><br><span class="line">                    Container(</span><br><span class="line">                      width: duSetWidth(<span class="number">15</span>),</span><br><span class="line">                    ),</span><br><span class="line">                    ConstrainedBox(</span><br><span class="line">                      constraints: BoxConstraints(</span><br><span class="line">                        maxWidth: duSetWidth(<span class="number">100</span>),</span><br><span class="line">                      ),</span><br><span class="line">                      child: Text(</span><br><span class="line">                        <span class="string">'• <span class="subst">$&#123;duTimeLineFormat(item.addtime)&#125;</span>'</span>,</span><br><span class="line">                        style: TextStyle(</span><br><span class="line">                          fontFamily: <span class="string">'Avenir'</span>,</span><br><span class="line">                          fontWeight: FontWeight.normal,</span><br><span class="line">                          color: AppColors.thirdElementText,</span><br><span class="line">                          fontSize: duSetFontSize(<span class="number">14</span>),</span><br><span class="line">                          height: <span class="number">1</span>,</span><br><span class="line">                        ),</span><br><span class="line">                        overflow: TextOverflow.clip,</span><br><span class="line">                        maxLines: <span class="number">1</span>,</span><br><span class="line">                      ),</span><br><span class="line">                    ),</span><br><span class="line">                    <span class="comment">// 更多</span></span><br><span class="line">                    Spacer(),</span><br><span class="line">                    InkWell(</span><br><span class="line">                      child: Icon(</span><br><span class="line">                        Icons.more_horiz,</span><br><span class="line">                        color: AppColors.primaryText,</span><br><span class="line">                        size: <span class="number">24</span>,</span><br><span class="line">                      ),</span><br><span class="line">                      onTap: () &#123;&#125;,</span><br><span class="line">                    ),</span><br><span class="line">                  ],</span><br><span class="line">                ),</span><br><span class="line">              ),</span><br><span class="line">            ],</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">      ],</span><br><span class="line">    ),</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h2><h3 id="设计稿蓝湖预览"><a href="#设计稿蓝湖预览" class="headerlink" title="设计稿蓝湖预览"></a>设计稿蓝湖预览</h3><p><a href="https://lanhuapp.com/url/lYuz1" target="_blank" rel="noopener">https://lanhuapp.com/url/lYuz1</a><br>密码: gSKl</p><blockquote><p>蓝湖现在收费了，所以查看标记还请自己上传 xd 设计稿<br>商业设计稿文件不好直接分享, 可以加微信联系 ducafecat</p></blockquote><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li><a href="https://pub.flutter-io.cn/packages/graphql" target="_blank" rel="noopener">https://pub.flutter-io.cn/packages/graphql</a></li><li><a href="https://strapi.io/documentation/v3.x/getting-started/quick-start.html" target="_blank" rel="noopener">https://strapi.io/documentation/v3.x/getting-started/quick-start.html</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                   
      
    
    </summary>
    
      <category term="Flutter 实战从零开始" scheme="https://ducafecat.tech/categories/Flutter-%E5%AE%9E%E6%88%98%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B/"/>
    
    
      <category term="flutter" scheme="https://ducafecat.tech/tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>Flutter 实战从零开始 新闻客户端 - 13 使用 supernova、imgcook 导入 sketch psd xd 自动生成用户中心代码</title>
    <link href="https://ducafecat.tech/2020/06/18/flutter-project/flutter-project-news-13-code-generate-supernova/"/>
    <id>https://ducafecat.tech/2020/06/18/flutter-project/flutter-project-news-13-code-generate-supernova/</id>
    <published>2020-06-17T16:00:00.000Z</published>
    <updated>2020-07-04T05:56:42.135Z</updated>
    
    <content type="html"><![CDATA[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-06-18-14-22-12.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>了解 supernova 代码生成器作用</li><li>导入 xd 设计稿</li><li>如何高效使用生成代码</li></ul><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><iframe src="//player.bilibili.com/player.html?bvid=BV1t5411W7Tt&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="100%" height="400px"> </iframe><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><a href="https://github.com/ducafecat/flutter_learn_news/releases/tag/v1.0.13" target="_blank" rel="noopener">https://github.com/ducafecat/flutter_learn_news/releases/tag/v1.0.13</a></p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="代码生成器"><a href="#代码生成器" class="headerlink" title="代码生成器"></a>代码生成器</h3><ul><li><a href="https://supernova.io" target="_blank" rel="noopener">supernova</a></li><li><a href="https://imgcook.taobao.org" target="_blank" rel="noopener">imgcook</a></li></ul><h3 id="有潜力加入代码生成功能"><a href="#有潜力加入代码生成功能" class="headerlink" title="有潜力加入代码生成功能"></a>有潜力加入代码生成功能</h3><ul><li><a href="https://lanhuapp.com/" target="_blank" rel="noopener">lanhuapp</a></li><li><a href="https://app.mockplus.cn/" target="_blank" rel="noopener">mockplus</a></li></ul><h3 id="supernova-代码生成器"><a href="#supernova-代码生成器" class="headerlink" title="supernova 代码生成器"></a>supernova 代码生成器</h3><p><a href="https://supernova.io/" target="_blank" rel="noopener">https://supernova.io/</a></p><h3 id="导入-xd-设计稿，生成代码"><a href="#导入-xd-设计稿，生成代码" class="headerlink" title="导入 xd 设计稿，生成代码"></a>导入 xd 设计稿，生成代码</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-06-18-11-13-44.png" alt title>                </div>                <div class="image-caption"></div>            </figure><blockquote><p>商业设计稿不好直接分享, 可以加微信联系 ducafecat</p></blockquote><h3 id="编写用户中心界面代码"><a href="#编写用户中心界面代码" class="headerlink" title="编写用户中心界面代码"></a>编写用户中心界面代码</h3><h4 id="组织代码结构"><a href="#组织代码结构" class="headerlink" title="组织代码结构"></a>组织代码结构</h4><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_AccountPageState</span> <span class="keyword">extends</span> <span class="title">State</span>&lt;<span class="title">AccountPage</span>&gt; </span>&#123;</span><br><span class="line">  <span class="comment">// 个人页面 头部</span></span><br><span class="line">  Widget _buildUserHeader() &#123;&#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 列表项</span></span><br><span class="line">  Widget _buildCell() &#123;&#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">final</span> appState = Provider.of&lt;AppState&gt;(context);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> SingleChildScrollView(</span><br><span class="line">      child: Column(</span><br><span class="line">        children: &lt;Widget&gt;[</span><br><span class="line">          _buildUserHeader(),</span><br><span class="line">          _buildCell(),</span><br><span class="line">        ],</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="直接使用生成的代码"><a href="#直接使用生成的代码" class="headerlink" title="直接使用生成的代码"></a>直接使用生成的代码</h4><ul><li>个人页面 头部</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line">Widget _buildUserHeader() &#123;</span><br><span class="line">  <span class="keyword">return</span> Container(</span><br><span class="line">            height: <span class="number">333</span>,</span><br><span class="line">            child: Stack(</span><br><span class="line">              alignment: Alignment.center,</span><br><span class="line">              children: [</span><br><span class="line">                Positioned(</span><br><span class="line">                  left: <span class="number">0</span>,</span><br><span class="line">                  right: <span class="number">0</span>,</span><br><span class="line">                  child: Container(</span><br><span class="line">                    height: <span class="number">333</span>,</span><br><span class="line">                    decoration: BoxDecoration(</span><br><span class="line">                      color: AppColors.primaryBackground,</span><br><span class="line">                    ),</span><br><span class="line">                    child: Column(</span><br><span class="line">                      mainAxisAlignment: MainAxisAlignment.end,</span><br><span class="line">                      crossAxisAlignment: CrossAxisAlignment.stretch,</span><br><span class="line">                      children: [</span><br><span class="line">                        Container(</span><br><span class="line">                          height: <span class="number">2</span>,</span><br><span class="line">                          decoration: BoxDecoration(</span><br><span class="line">                            color: AppColors.primaryElement,</span><br><span class="line">                          ),</span><br><span class="line">                          child: Container(),</span><br><span class="line">                        ),</span><br><span class="line">                      ],</span><br><span class="line">                    ),</span><br><span class="line">                  ),</span><br><span class="line">                ),</span><br><span class="line">                Positioned(</span><br><span class="line">                  left: <span class="number">20</span>,</span><br><span class="line">                  top: <span class="number">40</span>,</span><br><span class="line">                  right: <span class="number">20</span>,</span><br><span class="line">                  bottom: <span class="number">21</span>,</span><br><span class="line">                  child: Column(</span><br><span class="line">                    crossAxisAlignment: CrossAxisAlignment.stretch,</span><br><span class="line">                    children: [</span><br><span class="line">                      Container(</span><br><span class="line">                        height: <span class="number">198</span>,</span><br><span class="line">                        child: Column(</span><br><span class="line">                          crossAxisAlignment: CrossAxisAlignment.stretch,</span><br><span class="line">                          children: [</span><br><span class="line">                            Align(</span><br><span class="line">                              alignment: Alignment.topCenter,</span><br><span class="line">                              child: Container(</span><br><span class="line">                                width: <span class="number">108</span>,</span><br><span class="line">                                height: <span class="number">108</span>,</span><br><span class="line">                                child: Stack(</span><br><span class="line">                                  alignment: Alignment.center,</span><br><span class="line">                                  children: [</span><br><span class="line">                                    Positioned(</span><br><span class="line">                                      top: <span class="number">0</span>,</span><br><span class="line">                                      child: Container(</span><br><span class="line">                                        width: <span class="number">108</span>,</span><br><span class="line">                                        height: <span class="number">108</span>,</span><br><span class="line">                                        decoration: BoxDecoration(</span><br><span class="line">                                          color: AppColors.primaryBackground,</span><br><span class="line">                                          boxShadow: [</span><br><span class="line">                                            Shadows.primaryShadow,</span><br><span class="line">                                          ],</span><br><span class="line">                                          borderRadius: Radii.k54pxRadius,</span><br><span class="line">                                        ),</span><br><span class="line">                                        child: Container(),</span><br><span class="line">                                      ),</span><br><span class="line">                                    ),</span><br><span class="line">                                    Positioned(</span><br><span class="line">                                      top: <span class="number">10</span>,</span><br><span class="line">                                      child: Image.asset(</span><br><span class="line">                                        <span class="string">"assets/images/image.png"</span>,</span><br><span class="line">                                        fit: BoxFit.none,</span><br><span class="line">                                      ),</span><br><span class="line">                                    ),</span><br><span class="line">                                  ],</span><br><span class="line">                                ),</span><br><span class="line">                              ),</span><br><span class="line">                            ),</span><br><span class="line">                            Spacer(),</span><br><span class="line">                            Container(</span><br><span class="line">                              margin: EdgeInsets.only(bottom: <span class="number">9</span>),</span><br><span class="line">                              child: Text(</span><br><span class="line">                                <span class="string">"Cameron Rogers"</span>,</span><br><span class="line">                                textAlign: TextAlign.center,</span><br><span class="line">                                style: TextStyle(</span><br><span class="line">                                  color: AppColors.primaryText,</span><br><span class="line">                                  fontFamily: <span class="string">"Montserrat"</span>,</span><br><span class="line">                                  fontWeight: FontWeight.w400,</span><br><span class="line">                                  fontSize: <span class="number">24</span>,</span><br><span class="line">                                ),</span><br><span class="line">                              ),</span><br><span class="line">                            ),</span><br><span class="line">                            Text(</span><br><span class="line">                              <span class="string">"@boltrogers"</span>,</span><br><span class="line">                              textAlign: TextAlign.center,</span><br><span class="line">                              style: TextStyle(</span><br><span class="line">                                color: AppColors.primaryText,</span><br><span class="line">                                fontFamily: <span class="string">"Avenir"</span>,</span><br><span class="line">                                fontWeight: FontWeight.w400,</span><br><span class="line">                                fontSize: <span class="number">16</span>,</span><br><span class="line">                              ),</span><br><span class="line">                            ),</span><br><span class="line">                          ],</span><br><span class="line">                        ),</span><br><span class="line">                      ),</span><br><span class="line">                      Spacer(),</span><br><span class="line">                      Container(</span><br><span class="line">                        height: <span class="number">44</span>,</span><br><span class="line">                        child: FlatButton(</span><br><span class="line">                          onPressed: () =&gt; <span class="keyword">this</span>.onButtonPressed(context),</span><br><span class="line">                          color: Color.fromARGB(<span class="number">255</span>, <span class="number">41</span>, <span class="number">103</span>, <span class="number">255</span>),</span><br><span class="line">                          shape: RoundedRectangleBorder(</span><br><span class="line">                            borderRadius: BorderRadius.all(Radius.circular(<span class="number">6</span>)),</span><br><span class="line">                          ),</span><br><span class="line">                          textColor: Color.fromARGB(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>),</span><br><span class="line">                          padding: EdgeInsets.all(<span class="number">0</span>),</span><br><span class="line">                          child: Text(</span><br><span class="line">                            <span class="string">"Get Premium - \$9.99"</span>,</span><br><span class="line">                            textAlign: TextAlign.center,</span><br><span class="line">                            style: TextStyle(</span><br><span class="line">                              color: AppColors.secondaryText,</span><br><span class="line">                              fontFamily: <span class="string">"Montserrat"</span>,</span><br><span class="line">                              fontWeight: FontWeight.w400,</span><br><span class="line">                              fontSize: <span class="number">18</span>,</span><br><span class="line">                            ),</span><br><span class="line">                          ),</span><br><span class="line">                        ),</span><br><span class="line">                      ),</span><br><span class="line">                    ],</span><br><span class="line">                  ),</span><br><span class="line">                ),</span><br><span class="line">              ],</span><br><span class="line">            ),</span><br><span class="line">          );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>列表项</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line">Widget _buildCell() &#123;</span><br><span class="line">  <span class="keyword">return</span> Container(</span><br><span class="line">            height: <span class="number">60</span>,</span><br><span class="line">            child: Stack(</span><br><span class="line">              alignment: Alignment.centerLeft,</span><br><span class="line">              children: [</span><br><span class="line">                Positioned(</span><br><span class="line">                  left: <span class="number">0</span>,</span><br><span class="line">                  right: <span class="number">0</span>,</span><br><span class="line">                  child: Container(</span><br><span class="line">                    height: <span class="number">60</span>,</span><br><span class="line">                    decoration: BoxDecoration(</span><br><span class="line">                      color: AppColors.secondaryElement,</span><br><span class="line">                    ),</span><br><span class="line">                    child: Column(</span><br><span class="line">                      mainAxisAlignment: MainAxisAlignment.end,</span><br><span class="line">                      crossAxisAlignment: CrossAxisAlignment.stretch,</span><br><span class="line">                      children: [</span><br><span class="line">                        Container(</span><br><span class="line">                          height: <span class="number">1</span>,</span><br><span class="line">                          decoration: BoxDecoration(</span><br><span class="line">                            color: AppColors.primaryElement,</span><br><span class="line">                          ),</span><br><span class="line">                          child: Container(),</span><br><span class="line">                        ),</span><br><span class="line">                      ],</span><br><span class="line">                    ),</span><br><span class="line">                  ),</span><br><span class="line">                ),</span><br><span class="line">                Positioned(</span><br><span class="line">                  right: <span class="number">0</span>,</span><br><span class="line">                  child: Row(</span><br><span class="line">                    mainAxisAlignment: MainAxisAlignment.end,</span><br><span class="line">                    children: [</span><br><span class="line">                      Container(</span><br><span class="line">                        margin: EdgeInsets.only(right: <span class="number">11</span>),</span><br><span class="line">                        child: Text(</span><br><span class="line">                          <span class="string">"12"</span>,</span><br><span class="line">                          textAlign: TextAlign.right,</span><br><span class="line">                          style: TextStyle(</span><br><span class="line">                            color: AppColors.primaryText,</span><br><span class="line">                            fontFamily: <span class="string">"Avenir"</span>,</span><br><span class="line">                            fontWeight: FontWeight.w400,</span><br><span class="line">                            fontSize: <span class="number">18</span>,</span><br><span class="line">                          ),</span><br><span class="line">                        ),</span><br><span class="line">                      ),</span><br><span class="line">                      Container(</span><br><span class="line">                        width: <span class="number">24</span>,</span><br><span class="line">                        height: <span class="number">24</span>,</span><br><span class="line">                        margin: EdgeInsets.only(right: <span class="number">20</span>),</span><br><span class="line">                        child: Image.asset(</span><br><span class="line">                          <span class="string">"assets/images/icon.png"</span>,</span><br><span class="line">                          fit: BoxFit.none,</span><br><span class="line">                        ),</span><br><span class="line">                      ),</span><br><span class="line">                    ],</span><br><span class="line">                  ),</span><br><span class="line">                ),</span><br><span class="line">                Positioned(</span><br><span class="line">                  left: <span class="number">0</span>,</span><br><span class="line">                  child: Stack(</span><br><span class="line">                    alignment: Alignment.center,</span><br><span class="line">                    children: [</span><br><span class="line">                      Positioned(</span><br><span class="line">                        left: <span class="number">0</span>,</span><br><span class="line">                        right: <span class="number">19</span>,</span><br><span class="line">                        child: Container(),</span><br><span class="line">                      ),</span><br><span class="line">                      Positioned(</span><br><span class="line">                        left: <span class="number">20</span>,</span><br><span class="line">                        right: <span class="number">0</span>,</span><br><span class="line">                        child: Text(</span><br><span class="line">                          <span class="string">"Favorite channels"</span>,</span><br><span class="line">                          textAlign: TextAlign.left,</span><br><span class="line">                          style: TextStyle(</span><br><span class="line">                            color: AppColors.primaryText,</span><br><span class="line">                            fontFamily: <span class="string">"Montserrat"</span>,</span><br><span class="line">                            fontWeight: FontWeight.w400,</span><br><span class="line">                            fontSize: <span class="number">18</span>,</span><br><span class="line">                          ),</span><br><span class="line">                        ),</span><br><span class="line">                      ),</span><br><span class="line">                    ],</span><br><span class="line">                  ),</span><br><span class="line">                ),</span><br><span class="line">              ],</span><br><span class="line">            ),</span><br><span class="line">          );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="抽取代码-lib-common-widgets-app-dart"><a href="#抽取代码-lib-common-widgets-app-dart" class="headerlink" title="抽取代码 lib/common/widgets/app.dart"></a>抽取代码 lib/common/widgets/app.dart</h4><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// <span class="markdown">10像素 Divider</span></span></span><br><span class="line">Widget divider10Px(&#123;Color bgColor = AppColors.secondaryElement&#125;) &#123;</span><br><span class="line">  <span class="keyword">return</span> Container(</span><br><span class="line">    height: duSetWidth(<span class="number">10</span>),</span><br><span class="line">    decoration: BoxDecoration(</span><br><span class="line">      color: bgColor,</span><br><span class="line">    ),</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="修改代码-buildUserHeader"><a href="#修改代码-buildUserHeader" class="headerlink" title="修改代码 _buildUserHeader"></a>修改代码 _buildUserHeader</h4><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 个人页面 头部</span></span><br><span class="line">Widget _buildUserHeader() &#123;</span><br><span class="line">  <span class="keyword">return</span> Container(</span><br><span class="line">    height: duSetWidth(<span class="number">333</span>),</span><br><span class="line">    child: Stack(</span><br><span class="line">      alignment: Alignment.center,</span><br><span class="line">      children: [</span><br><span class="line">        <span class="comment">// 背景</span></span><br><span class="line">        Positioned(</span><br><span class="line">          left: <span class="number">0</span>,</span><br><span class="line">          right: <span class="number">0</span>,</span><br><span class="line">          child: Container(</span><br><span class="line">            height: duSetWidth(<span class="number">333</span>),</span><br><span class="line">            decoration: BoxDecoration(</span><br><span class="line">              color: AppColors.primaryBackground,</span><br><span class="line">            ),</span><br><span class="line">            child: Column(</span><br><span class="line">              mainAxisAlignment: MainAxisAlignment.end,</span><br><span class="line">              crossAxisAlignment: CrossAxisAlignment.stretch,</span><br><span class="line">              children: [</span><br><span class="line">                Container(</span><br><span class="line">                  height: duSetWidth(<span class="number">2</span>),</span><br><span class="line">                  decoration: BoxDecoration(</span><br><span class="line">                    color: AppColors.tabCellSeparator,</span><br><span class="line">                  ),</span><br><span class="line">                  child: Container(),</span><br><span class="line">                ),</span><br><span class="line">              ],</span><br><span class="line">            ),</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">        Positioned(</span><br><span class="line">          left: <span class="number">20</span>,</span><br><span class="line">          top: <span class="number">40</span>,</span><br><span class="line">          right: <span class="number">20</span>,</span><br><span class="line">          bottom: <span class="number">21</span>,</span><br><span class="line">          child: Column(</span><br><span class="line">            crossAxisAlignment: CrossAxisAlignment.stretch,</span><br><span class="line">            children: [</span><br><span class="line">              <span class="comment">// 头像</span></span><br><span class="line">              Container(</span><br><span class="line">                height: duSetWidth(<span class="number">198</span>),</span><br><span class="line">                child: Column(</span><br><span class="line">                  crossAxisAlignment: CrossAxisAlignment.stretch,</span><br><span class="line">                  children: [</span><br><span class="line">                    Align(</span><br><span class="line">                      alignment: Alignment.topCenter,</span><br><span class="line">                      child: Container(</span><br><span class="line">                        width: duSetWidth(<span class="number">108</span>),</span><br><span class="line">                        height: duSetWidth(<span class="number">108</span>),</span><br><span class="line">                        child: Stack(</span><br><span class="line">                          alignment: Alignment.center,</span><br><span class="line">                          children: [</span><br><span class="line">                            Positioned(</span><br><span class="line">                              top: <span class="number">0</span>,</span><br><span class="line">                              child: Container(</span><br><span class="line">                                width: duSetWidth(<span class="number">108</span>),</span><br><span class="line">                                height: duSetWidth(<span class="number">108</span>),</span><br><span class="line">                                decoration: BoxDecoration(</span><br><span class="line">                                  color: AppColors.primaryBackground,</span><br><span class="line">                                  boxShadow: [</span><br><span class="line">                                    Shadows.primaryShadow,</span><br><span class="line">                                  ],</span><br><span class="line">                                  borderRadius: BorderRadius.all(</span><br><span class="line">                                      Radius.circular(duSetWidth(<span class="number">108</span>) / <span class="number">2</span>)),</span><br><span class="line">                                ),</span><br><span class="line">                                child: Container(),</span><br><span class="line">                              ),</span><br><span class="line">                            ),</span><br><span class="line">                            Positioned(</span><br><span class="line">                              top: <span class="number">10</span>,</span><br><span class="line">                              child: Image.asset(</span><br><span class="line">                                <span class="string">"assets/images/account_header.png"</span>,</span><br><span class="line">                                height: duSetWidth(<span class="number">88</span>),</span><br><span class="line">                                width: duSetWidth(<span class="number">88</span>),</span><br><span class="line">                                fit: BoxFit.fill,</span><br><span class="line">                              ),</span><br><span class="line">                            ),</span><br><span class="line">                          ],</span><br><span class="line">                        ),</span><br><span class="line">                      ),</span><br><span class="line">                    ),</span><br><span class="line">                    <span class="comment">// 文字</span></span><br><span class="line">                    Spacer(),</span><br><span class="line">                    Container(</span><br><span class="line">                      margin: EdgeInsets.only(bottom: <span class="number">9</span>),</span><br><span class="line">                      child: Text(</span><br><span class="line">                        Global.profile.displayName,</span><br><span class="line">                        textAlign: TextAlign.center,</span><br><span class="line">                        style: TextStyle(</span><br><span class="line">                          color: AppColors.primaryText,</span><br><span class="line">                          fontFamily: <span class="string">"Montserrat"</span>,</span><br><span class="line">                          fontWeight: FontWeight.w400,</span><br><span class="line">                          fontSize: <span class="number">24</span>,</span><br><span class="line">                        ),</span><br><span class="line">                      ),</span><br><span class="line">                    ),</span><br><span class="line">                    Text(</span><br><span class="line">                      <span class="string">"@boltrogers"</span>,</span><br><span class="line">                      textAlign: TextAlign.center,</span><br><span class="line">                      style: TextStyle(</span><br><span class="line">                        color: AppColors.primaryText,</span><br><span class="line">                        fontFamily: <span class="string">"Avenir"</span>,</span><br><span class="line">                        fontWeight: FontWeight.w400,</span><br><span class="line">                        fontSize: <span class="number">16</span>,</span><br><span class="line">                      ),</span><br><span class="line">                    ),</span><br><span class="line">                  ],</span><br><span class="line">                ),</span><br><span class="line">              ),</span><br><span class="line">              <span class="comment">// 按钮</span></span><br><span class="line">              Spacer(),</span><br><span class="line">              Container(</span><br><span class="line">                height: <span class="number">44</span>,</span><br><span class="line">                child: FlatButton(</span><br><span class="line">                  onPressed: () =&gt; &#123;&#125;,</span><br><span class="line">                  color: Color.fromARGB(<span class="number">255</span>, <span class="number">41</span>, <span class="number">103</span>, <span class="number">255</span>),</span><br><span class="line">                  shape: RoundedRectangleBorder(</span><br><span class="line">                    borderRadius: BorderRadius.all(Radius.circular(<span class="number">6</span>)),</span><br><span class="line">                  ),</span><br><span class="line">                  textColor: Color.fromARGB(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>),</span><br><span class="line">                  padding: EdgeInsets.all(<span class="number">0</span>),</span><br><span class="line">                  child: Text(</span><br><span class="line">                    <span class="string">"Get Premium - \$9.99"</span>,</span><br><span class="line">                    textAlign: TextAlign.center,</span><br><span class="line">                    style: TextStyle(</span><br><span class="line">                      color: AppColors.primaryElementText,</span><br><span class="line">                      fontFamily: <span class="string">"Montserrat"</span>,</span><br><span class="line">                      fontWeight: FontWeight.w400,</span><br><span class="line">                      fontSize: <span class="number">18</span>,</span><br><span class="line">                    ),</span><br><span class="line">                  ),</span><br><span class="line">                ),</span><br><span class="line">              ),</span><br><span class="line">            ],</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">      ],</span><br><span class="line">    ),</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="修改代码-buildCell"><a href="#修改代码-buildCell" class="headerlink" title="修改代码 _buildCell"></a>修改代码 _buildCell</h4><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 列表项</span></span><br><span class="line">Widget _buildCell(&#123;</span><br><span class="line">  <span class="built_in">String</span> title,</span><br><span class="line">  <span class="built_in">String</span> subTitle,</span><br><span class="line">  <span class="built_in">int</span> number,</span><br><span class="line">  <span class="built_in">bool</span> hasArrow = <span class="keyword">false</span>,</span><br><span class="line">  VoidCallback onTap,</span><br><span class="line">&#125;) &#123;</span><br><span class="line">  <span class="keyword">return</span> GestureDetector(</span><br><span class="line">    onTap: onTap,</span><br><span class="line">    child: Container(</span><br><span class="line">      height: duSetWidth(<span class="number">60</span>),</span><br><span class="line">      color: Colors.white,</span><br><span class="line">      child: Stack(</span><br><span class="line">        alignment: Alignment.centerLeft,</span><br><span class="line">        children: [</span><br><span class="line">          <span class="comment">// 背景</span></span><br><span class="line">          Positioned(</span><br><span class="line">            left: <span class="number">0</span>,</span><br><span class="line">            right: <span class="number">0</span>,</span><br><span class="line">            child: Container(</span><br><span class="line">              height: duSetWidth(<span class="number">60</span>),</span><br><span class="line">              decoration: BoxDecoration(</span><br><span class="line">                color: AppColors.primaryBackground,</span><br><span class="line">              ),</span><br><span class="line">              child: Column(</span><br><span class="line">                mainAxisAlignment: MainAxisAlignment.end,</span><br><span class="line">                crossAxisAlignment: CrossAxisAlignment.stretch,</span><br><span class="line">                children: [</span><br><span class="line">                  Container(</span><br><span class="line">                    height: duSetWidth(<span class="number">1</span>),</span><br><span class="line">                    decoration: BoxDecoration(</span><br><span class="line">                      color: AppColors.tabCellSeparator,</span><br><span class="line">                    ),</span><br><span class="line">                    child: Container(),</span><br><span class="line">                  ),</span><br><span class="line">                ],</span><br><span class="line">              ),</span><br><span class="line">            ),</span><br><span class="line">          ),</span><br><span class="line">          <span class="comment">// 右侧</span></span><br><span class="line">          Positioned(</span><br><span class="line">            right: <span class="number">0</span>,</span><br><span class="line">            child: Row(</span><br><span class="line">              mainAxisAlignment: MainAxisAlignment.end,</span><br><span class="line">              children: [</span><br><span class="line">                <span class="comment">// 数字</span></span><br><span class="line">                number == <span class="keyword">null</span></span><br><span class="line">                    ? Container()</span><br><span class="line">                    : Container(</span><br><span class="line">                        margin: EdgeInsets.only(right: <span class="number">11</span>),</span><br><span class="line">                        child: Text(</span><br><span class="line">                          number.toString(),</span><br><span class="line">                          textAlign: TextAlign.right,</span><br><span class="line">                          style: TextStyle(</span><br><span class="line">                            color: AppColors.primaryText,</span><br><span class="line">                            fontFamily: <span class="string">"Avenir"</span>,</span><br><span class="line">                            fontWeight: FontWeight.w400,</span><br><span class="line">                            fontSize: duSetFontSize(<span class="number">18</span>),</span><br><span class="line">                          ),</span><br><span class="line">                        ),</span><br><span class="line">                      ),</span><br><span class="line">                <span class="comment">// 箭头</span></span><br><span class="line">                hasArrow == <span class="keyword">false</span></span><br><span class="line">                    ? Container()</span><br><span class="line">                    : Container(</span><br><span class="line">                        width: duSetWidth(<span class="number">24</span>),</span><br><span class="line">                        height: duSetWidth(<span class="number">24</span>),</span><br><span class="line">                        margin: EdgeInsets.only(right: <span class="number">20</span>),</span><br><span class="line">                        child: Icon(</span><br><span class="line">                          Icons.arrow_forward_ios,</span><br><span class="line">                          color: AppColors.primaryText,</span><br><span class="line">                        ),</span><br><span class="line">                      ),</span><br><span class="line">              ],</span><br><span class="line">            ),</span><br><span class="line">          ),</span><br><span class="line"></span><br><span class="line">          <span class="comment">// 标题</span></span><br><span class="line">          title == <span class="keyword">null</span></span><br><span class="line">              ? Container()</span><br><span class="line">              : Positioned(</span><br><span class="line">                  left: <span class="number">20</span>,</span><br><span class="line">                  child: Text(</span><br><span class="line">                    title,</span><br><span class="line">                    textAlign: TextAlign.left,</span><br><span class="line">                    style: TextStyle(</span><br><span class="line">                      color: AppColors.primaryText,</span><br><span class="line">                      fontFamily: <span class="string">"Montserrat"</span>,</span><br><span class="line">                      fontWeight: FontWeight.w400,</span><br><span class="line">                      fontSize: duSetFontSize(<span class="number">18</span>),</span><br><span class="line">                    ),</span><br><span class="line">                  ),</span><br><span class="line">                ),</span><br><span class="line"></span><br><span class="line">          <span class="comment">// 子标题</span></span><br><span class="line">          subTitle == <span class="keyword">null</span></span><br><span class="line">              ? Container()</span><br><span class="line">              : Positioned(</span><br><span class="line">                  right: <span class="number">20</span>,</span><br><span class="line">                  child: Text(</span><br><span class="line">                    subTitle,</span><br><span class="line">                    textAlign: TextAlign.left,</span><br><span class="line">                    style: TextStyle(</span><br><span class="line">                      color: AppColors.primaryText,</span><br><span class="line">                      fontFamily: <span class="string">"Montserrat"</span>,</span><br><span class="line">                      fontWeight: FontWeight.w400,</span><br><span class="line">                      fontSize: duSetFontSize(<span class="number">18</span>),</span><br><span class="line">                    ),</span><br><span class="line">                  ),</span><br><span class="line">                ),</span><br><span class="line">        ],</span><br><span class="line">      ),</span><br><span class="line">    ),</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="修改代码-build"><a href="#修改代码-build" class="headerlink" title="修改代码 build"></a>修改代码 build</h4><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@override</span></span><br><span class="line">Widget build(BuildContext context) &#123;</span><br><span class="line">  <span class="keyword">final</span> appState = Provider.of&lt;AppState&gt;(context);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> SingleChildScrollView(</span><br><span class="line">    child: Column(</span><br><span class="line">      children: &lt;Widget&gt;[</span><br><span class="line">        _buildUserHeader(),</span><br><span class="line">        divider10Px(),</span><br><span class="line">        _buildCell(</span><br><span class="line">          title: <span class="string">"Email"</span>,</span><br><span class="line">          subTitle: <span class="string">"boltrogers@gmail.com"</span>,</span><br><span class="line">        ),</span><br><span class="line">        divider10Px(),</span><br><span class="line">        _buildCell(</span><br><span class="line">          title: <span class="string">"Favorite channels"</span>,</span><br><span class="line">          number: <span class="number">12</span>,</span><br><span class="line">          hasArrow: <span class="keyword">true</span>,</span><br><span class="line">        ),</span><br><span class="line">        _buildCell(</span><br><span class="line">          title: <span class="string">"Bookmarks"</span>,</span><br><span class="line">          number: <span class="number">294</span>,</span><br><span class="line">          hasArrow: <span class="keyword">true</span>,</span><br><span class="line">        ),</span><br><span class="line">        _buildCell(</span><br><span class="line">          title: <span class="string">"Popular categories"</span>,</span><br><span class="line">          number: <span class="number">7</span>,</span><br><span class="line">          hasArrow: <span class="keyword">true</span>,</span><br><span class="line">        ),</span><br><span class="line">        divider10Px(),</span><br><span class="line">        _buildCell(</span><br><span class="line">          title: <span class="string">"Newsletter"</span>,</span><br><span class="line">          hasArrow: <span class="keyword">true</span>,</span><br><span class="line">        ),</span><br><span class="line">        _buildCell(</span><br><span class="line">          title: <span class="string">"Settings"</span>,</span><br><span class="line">          hasArrow: <span class="keyword">true</span>,</span><br><span class="line">        ),</span><br><span class="line">        divider10Px(),</span><br><span class="line">        _buildCell(</span><br><span class="line">          title: <span class="string">"Switch Gray Filter"</span>,</span><br><span class="line">          hasArrow: <span class="keyword">true</span>,</span><br><span class="line">          onTap: () =&gt; appState.switchGrayFilter(),</span><br><span class="line">        ),</span><br><span class="line">        _buildCell(</span><br><span class="line">          title: <span class="string">"Log out"</span>,</span><br><span class="line">          hasArrow: <span class="keyword">true</span>,</span><br><span class="line">          onTap: () =&gt; goLoginPage(context),</span><br><span class="line">        ),</span><br><span class="line">        divider10Px(),</span><br><span class="line">      ],</span><br><span class="line">    ),</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="技巧"><a href="#技巧" class="headerlink" title="技巧"></a>技巧</h3><ul><li>vscode 固定代码</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-06-18-11-15-41.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-06-19-07-22-10.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h2><h3 id="设计稿蓝湖预览"><a href="#设计稿蓝湖预览" class="headerlink" title="设计稿蓝湖预览"></a>设计稿蓝湖预览</h3><p><a href="https://lanhuapp.com/url/lYuz1" target="_blank" rel="noopener">https://lanhuapp.com/url/lYuz1</a><br>密码: gSKl</p><blockquote><p>蓝湖现在收费了，所以查看标记还请自己上传 xd 设计稿<br>商业设计稿文件不好直接分享, 可以加微信联系 ducafecat</p></blockquote><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                   
      
    
    </summary>
    
      <category term="Flutter 实战从零开始" scheme="https://ducafecat.tech/categories/Flutter-%E5%AE%9E%E6%88%98%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B/"/>
    
    
      <category term="flutter" scheme="https://ducafecat.tech/tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>Flutter 实战从零开始 新闻客户端 - 12 采用 sentry 平台收集错误</title>
    <link href="https://ducafecat.tech/2020/06/05/flutter-project/flutter-project-news-12-error-sentry/"/>
    <id>https://ducafecat.tech/2020/06/05/flutter-project/flutter-project-news-12-error-sentry/</id>
    <published>2020-06-04T16:00:00.000Z</published>
    <updated>2020-07-04T06:33:27.703Z</updated>
    
    <content type="html"><![CDATA[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="bg.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>使用 sentry 平台</li><li>flutter 集成</li><li>android 集成</li><li>ios 集成</li></ul><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><iframe src="//player.bilibili.com/player.html?bvid=BV1Ek4y1r7zk&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="100%" height="400px"> </iframe><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><a href="https://github.com/ducafecat/flutter_learn_news/releases/tag/v1.0.12" target="_blank" rel="noopener">https://github.com/ducafecat/flutter_learn_news/releases/tag/v1.0.12</a></p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="错误收集策略"><a href="#错误收集策略" class="headerlink" title="错误收集策略"></a>错误收集策略</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="flutter-error.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="sentry-平台"><a href="#sentry-平台" class="headerlink" title="sentry 平台"></a>sentry 平台</h3><p><a href="https://sentry.io" target="_blank" rel="noopener">https://sentry.io</a></p><h3 id="收集-flutter"><a href="#收集-flutter" class="headerlink" title="收集 flutter"></a>收集 flutter</h3><ul><li>参考</li></ul><p><a href="https://docs.sentry.io/platforms/flutter/" target="_blank" rel="noopener">https://docs.sentry.io/platforms/flutter/</a></p><ul><li>pubspec.yaml</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">dependencies:</span></span><br><span class="line">  <span class="attr">sentry:</span> <span class="string">^3.0.1</span></span><br></pre></td></tr></table></figure><ul><li>lib/main.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建 SentryClient 用于将异常日志上报给 sentry 平台</span></span><br><span class="line"><span class="keyword">final</span> SentryClient _sentry = <span class="keyword">new</span> SentryClient(</span><br><span class="line">  dsn:</span><br><span class="line">      <span class="string">'https://xxxxxxxxxx'</span>,</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 是否开发环境</span></span><br><span class="line"><span class="built_in">bool</span> <span class="keyword">get</span> isInDebugMode &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">false</span>; <span class="comment">// false 开始上传 sentry</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 上报异常的函数</span></span><br><span class="line">Future&lt;<span class="keyword">void</span>&gt; _reportError(<span class="built_in">dynamic</span> error, <span class="built_in">dynamic</span> stackTrace) <span class="keyword">async</span> &#123;</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">'Caught error: <span class="subst">$error</span>'</span>);</span><br><span class="line">  <span class="keyword">if</span> (isInDebugMode) &#123;</span><br><span class="line">    <span class="built_in">print</span>(stackTrace);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">final</span> SentryResponse response = <span class="keyword">await</span> _sentry.captureException(</span><br><span class="line">      exception: error,</span><br><span class="line">      stackTrace: stackTrace,</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (response.isSuccessful) &#123;</span><br><span class="line">      <span class="built_in">print</span>(<span class="string">'Success! Event ID: <span class="subst">$&#123;response.eventId&#125;</span>'</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="built_in">print</span>(<span class="string">'Failed to report to Sentry.io: <span class="subst">$&#123;response.error&#125;</span>'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Future&lt;<span class="built_in">Null</span>&gt; main() <span class="keyword">async</span> &#123;</span><br><span class="line">  <span class="comment">// 捕获并上报 Flutter 异常</span></span><br><span class="line">  FlutterError.onError = (FlutterErrorDetails details) <span class="keyword">async</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (isInDebugMode == <span class="keyword">true</span>) &#123;</span><br><span class="line">      FlutterError.dumpErrorToConsole(details);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      Zone.current.handleUncaughtError(details.exception, details.stack);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 捕获并上报 Dart 异常</span></span><br><span class="line">  runZonedGuarded(() <span class="keyword">async</span> &#123;</span><br><span class="line">    <span class="keyword">await</span> Global.init();</span><br><span class="line">    runApp(</span><br><span class="line">      MultiProvider(</span><br><span class="line">        providers: [</span><br><span class="line">          ChangeNotifierProvider&lt;AppState&gt;.value(</span><br><span class="line">            value: Global.appState,</span><br><span class="line">          ),</span><br><span class="line">        ],</span><br><span class="line">        child: Consumer&lt;AppState&gt;(builder: (context, appState, _) &#123;</span><br><span class="line">          <span class="keyword">if</span> (appState.isGrayFilter) &#123;</span><br><span class="line">            <span class="keyword">return</span> ColorFiltered(</span><br><span class="line">              colorFilter: ColorFilter.mode(Colors.white, BlendMode.color),</span><br><span class="line">              child: NewsApp(),</span><br><span class="line">            );</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> NewsApp();</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;, (<span class="built_in">Object</span> error, StackTrace stack) &#123;</span><br><span class="line">    _reportError(error, stack);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="收集-android"><a href="#收集-android" class="headerlink" title="收集 android"></a>收集 android</h3><ul><li>参考</li></ul><p><a href="https://docs.sentry.io/platforms/android/" target="_blank" rel="noopener">https://docs.sentry.io/platforms/android/</a></p><ul><li>集成 sdk</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">// ADD JCENTER REPOSITORY</span><br><span class="line">repositories &#123;</span><br><span class="line">    jcenter()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// ADD COMPATIBILITY OPTIONS TO BE COMPATIBLE WITH JAVA 1.8</span><br><span class="line">android &#123;</span><br><span class="line">    compileOptions &#123;</span><br><span class="line">        sourceCompatibility = JavaVersion.VERSION_1_8</span><br><span class="line">        targetCompatibility = JavaVersion.VERSION_1_8</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// ADD SENTRY ANDROID AS A DEPENDENCY</span><br><span class="line">dependencies &#123;</span><br><span class="line">    // https://github.com/getsentry/sentry-android/releases</span><br><span class="line">    implementation &apos;io.sentry:sentry-android:&#123;version&#125;&apos;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>android/app/src/main/AndroidManifest.xml</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:name</span>=<span class="string">"io.flutter.app.FlutterApplication"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:label</span>=<span class="string">"猫哥新闻"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:icon</span>=<span class="string">"@mipmap/launcher_icon"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- sentry --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta-data</span> <span class="attr">android:name</span>=<span class="string">"io.sentry.dsn"</span> <span class="attr">android:value</span>=<span class="string">"xxxxxxxxxxxxxxxxx"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>android/app/src/main/kotlin/com/example/flutterducafecatnews/CrashHandler.java</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CrashHandler</span> <span class="keyword">implements</span> <span class="title">UncaughtExceptionHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">uncaughtException</span><span class="params">(Thread t, Throwable e)</span> </span>&#123;</span><br><span class="line">        Sentry.captureException(e);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>android/app/src/main/kotlin/com/example/flutterducafecatnews/MainActivity.kt</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> io.sentry.core.Sentry</span><br><span class="line"></span><br><span class="line">class MainActivity: FlutterActivity() &#123;</span><br><span class="line">    <span class="function">override fun <span class="title">configureFlutterEngine</span><span class="params">(@NonNull flutterEngine: FlutterEngine)</span> </span>&#123;</span><br><span class="line">        val crashHandler = CrashHandler()</span><br><span class="line">        Thread.setDefaultUncaughtExceptionHandler(crashHandler)</span><br><span class="line">        GeneratedPluginRegistrant.registerWith(flutterEngine)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="收集-ios"><a href="#收集-ios" class="headerlink" title="收集 ios"></a>收集 ios</h3><ul><li>资料</li></ul><p><a href="https://docs.sentry.io/platforms/cocoa/?_ga=2.17974013.534595501.1591172359-228174411.1591172359&amp;_gac=1.12380800.1591172359.EAIaIQobChMIrICd9Jrl6QIVCj5gCh2zFw8lEAAYASAAEgJwyfD_BwE&amp;platform=javascript" target="_blank" rel="noopener">https://docs.sentry.io/platforms/cocoa/?_ga=2.17974013.534595501.1591172359-228174411.1591172359&amp;_gac=1.12380800.1591172359.EAIaIQobChMIrICd9Jrl6QIVCj5gCh2zFw8lEAAYASAAEgJwyfD_BwE&amp;platform=javascript</a></p><ul><li>集成 CocoaPods</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">platform :ios, &apos;8.0&apos;</span><br><span class="line">use_frameworks! # This is important</span><br><span class="line"></span><br><span class="line">target &apos;YourApp&apos; do</span><br><span class="line">    pod &apos;Sentry&apos;, :git =&gt; &apos;https://github.com/getsentry/sentry-cocoa.git&apos;, :tag =&gt; &apos;5.1.2&apos;</span><br><span class="line">end</span><br></pre></td></tr></table></figure><ul><li>ios/Runner/AppDelegate.swift</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">SentrySDK</span>.start(options: [</span><br><span class="line">        <span class="string">"dsn"</span>: <span class="string">"https://xxxxxxxxxxxxxxxxxxx"</span>,</span><br><span class="line">        <span class="string">"debug"</span>: <span class="literal">true</span>, <span class="comment">// Enabled debug when first installing is always helpful</span></span><br><span class="line">        <span class="string">"enableAutoSessionTracking"</span>: <span class="literal">true</span></span><br><span class="line">    ])</span><br><span class="line"></span><br><span class="line">    <span class="type">NSSetUncaughtExceptionHandler</span> &#123; exception <span class="keyword">in</span></span><br><span class="line">     <span class="built_in">print</span>(exception)</span><br><span class="line">     <span class="type">SentrySDK</span>.capture(message: exception.description)</span><br><span class="line">     <span class="type">SentrySDK</span>.capture(exception: exception)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">GeneratedPluginRegistrant</span>.register(with: <span class="keyword">self</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">super</span>.application(application, didFinishLaunchingWithOptions: launchOptions)</span><br><span class="line"></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h2><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li><p><a href="https://docs.sentry.io/platforms/flutter/" target="_blank" rel="noopener">https://docs.sentry.io/platforms/flutter/</a></p></li><li><p><a href="https://docs.sentry.io/platforms/android/" target="_blank" rel="noopener">https://docs.sentry.io/platforms/android/</a></p></li><li><p><a href="https://docs.sentry.io/platforms/cocoa/?_ga=2.17974013.534595501.1591172359-228174411.1591172359&amp;_gac=1.12380800.1591172359.EAIaIQobChMIrICd9Jrl6QIVCj5gCh2zFw8lEAAYASAAEgJwyfD_BwE&amp;platform=javascript" target="_blank" rel="noopener">https://docs.sentry.io/platforms/cocoa/?_ga=2.17974013.534595501.1591172359-228174411.1591172359&amp;_gac=1.12380800.1591172359.EAIaIQobChMIrICd9Jrl6QIVCj5gCh2zFw8lEAAYASAAEgJwyfD_BwE&amp;platform=javascript</a></p></li></ul><h3 id="设计稿蓝湖预览"><a href="#设计稿蓝湖预览" class="headerlink" title="设计稿蓝湖预览"></a>设计稿蓝湖预览</h3><p><a href="https://lanhuapp.com/url/lYuz1" target="_blank" rel="noopener">https://lanhuapp.com/url/lYuz1</a><br>密码: gSKl</p><blockquote><p>蓝湖现在收费了，所以查看标记还请自己上传 xd 设计稿<br>商业设计稿文件不好直接分享, 可以加微信联系 ducafecat</p></blockquote><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                   
      
    
    </summary>
    
      <category term="Flutter 实战从零开始" scheme="https://ducafecat.tech/categories/Flutter-%E5%AE%9E%E6%88%98%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B/"/>
    
    
      <category term="flutter" scheme="https://ducafecat.tech/tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>Docker - 02 前端全栈 windows 从零安装 vmware + centos + docker + yapi</title>
    <link href="https://ducafecat.tech/2020/05/29/docker/docker-02-windows-vmware-centos-setup/"/>
    <id>https://ducafecat.tech/2020/05/29/docker/docker-02-windows-vmware-centos-setup/</id>
    <published>2020-05-28T16:00:00.000Z</published>
    <updated>2020-07-09T06:26:43.598Z</updated>
    
    <content type="html"><![CDATA[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="bg.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>前端全栈主力操作系统选哪个 ?</li><li>windows 下使用 docker 为什么不行 ?</li><li>VMWare 安装 centos</li><li>远程 centos 系统</li><li>centos 配置 docker 环境</li></ul><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><p><a href="https://youtu.be/NJIwbs8qmDY" target="_blank" rel="noopener">https://youtu.be/NJIwbs8qmDY</a></p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="1-主力操作系统分析"><a href="#1-主力操作系统分析" class="headerlink" title="1. 主力操作系统分析"></a>1. 主力操作系统分析</h3><p>从前端全栈角度考虑</p><table><thead><tr><th></th><th>windows</th><th>macos</th><th>ubuntu</th></tr></thead><tbody><tr><td>nodejs、java、go、python</td><td>ok</td><td>ok</td><td>ok</td></tr><tr><td>vue、react、electron、rn</td><td>ok</td><td>ok</td><td>ok</td></tr><tr><td>小程序</td><td>ok</td><td>ok</td><td>ok</td></tr><tr><td>ios</td><td></td><td>ok</td><td></td></tr><tr><td>android</td><td>ok</td><td>ok</td><td>ok</td></tr><tr><td>办公 office wps ps 微信 QQ XD VSCode</td><td>ok</td><td>ok</td><td>ok</td></tr><tr><td>macos 专属 safri sketch</td><td></td><td>ok</td><td></td></tr><tr><td>程序编译、文件名大小写严格</td><td></td><td>ok</td><td>ok</td></tr></tbody></table><h3 id="2-windows-直接用-docker-存在的问题"><a href="#2-windows-直接用-docker-存在的问题" class="headerlink" title="2. windows 直接用 docker 存在的问题"></a>2. windows 直接用 docker 存在的问题</h3><p><strong>问题：</strong></p><p><a href="https://docs.docker.com/get-started/overview/" target="_blank" rel="noopener">https://docs.docker.com/get-started/overview/</a><br><a href="https://docs.docker.com/get-started/" target="_blank" rel="noopener">https://docs.docker.com/get-started/</a><br><a href="https://docs.microsoft.com/en-us/windows/wsl/about" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/windows/wsl/about</a></p><ul><li><p>容器架构不同</p></li><li><p>切到 linux 容器架构，频繁遇到存储驱动兼容问题</p></li><li><p>WSL 2 的路还很长</p></li></ul><p><strong>总结</strong></p><p>开发环境与线上环境不一致，引发不必要的联调成本。</p><h3 id="3-windows-下-vmware-安装-centos"><a href="#3-windows-下-vmware-安装-centos" class="headerlink" title="3. windows 下 vmware 安装 centos"></a>3. windows 下 vmware 安装 centos</h3><h4 id="3-1-下载-centos-7"><a href="#3-1-下载-centos-7" class="headerlink" title="3.1 下载 centos 7"></a>3.1 下载 centos 7</h4><p><a href="http://isoredirect.centos.org/centos/7/isos/x86_64/" target="_blank" rel="noopener">http://isoredirect.centos.org/centos/7/isos/x86_64/</a></p><h4 id="3-2-安装-centos-7"><a href="#3-2-安装-centos-7" class="headerlink" title="3.2 安装 centos 7"></a>3.2 安装 centos 7</h4><p>操作见视频</p><h4 id="3-3-配置-centos-网卡"><a href="#3-3-配置-centos-网卡" class="headerlink" title="3.3 配置 centos 网卡"></a>3.3 配置 centos 网卡</h4><p>操作见视频</p><p>指令记录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 修改配置</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> /etc/sysconfig/network-scripts</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ll</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> vi ifcfg-eth0</span></span><br><span class="line">ONBOOT=yes</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> vi 文件编辑</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">cd</span> 进入目录</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ll 目录列表</span></span><br><span class="line"></span><br><span class="line">------------------------------</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 重启网卡</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> service network restart</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> service 管理系统服务</span></span><br><span class="line"></span><br><span class="line">------------------------------</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装工具</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> yum install -y net-tools</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> yum 软件包管理</span></span><br><span class="line"></span><br><span class="line">------------------------------</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看ip</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ifconfig</span></span><br><span class="line"></span><br><span class="line">------------------------------</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 固定ip、dns</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> vi ifcfg-eth0</span></span><br><span class="line">BOOTPROTO=static</span><br><span class="line">IPADDR=10.211.55.5</span><br><span class="line">NETMASK=255.255.255.0</span><br><span class="line">GATEWAY=10.211.55.1</span><br><span class="line">DNS1=223.5.5.5</span><br><span class="line">DNS2=223.6.6.6</span><br><span class="line"></span><br><span class="line">------------------------------</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 重启服务、查看dns</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> service network restart</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> cat /etc/resolv.conf</span></span><br></pre></td></tr></table></figure><h4 id="3-4-远程-ssh-工具"><a href="#3-4-远程-ssh-工具" class="headerlink" title="3.4 远程 ssh 工具"></a>3.4 远程 ssh 工具</h4><ul><li><p>finalshell<br><a href="http://www.hostbuf.com" target="_blank" rel="noopener">http://www.hostbuf.com</a></p></li><li><p>xshell、sftp<br><a href="https://www.netsarang.com/zh/xshell/" target="_blank" rel="noopener">https://www.netsarang.com/zh/xshell/</a></p></li><li><p>putty<br><a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html" target="_blank" rel="noopener">https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html</a></p></li><li><p>cmder<br><a href="http://cmder.net/" target="_blank" rel="noopener">http://cmder.net/</a></p></li></ul><h4 id="3-6-安装-docker"><a href="#3-6-安装-docker" class="headerlink" title="3.6 安装 docker"></a>3.6 安装 docker</h4><h5 id="卸载旧版"><a href="#卸载旧版" class="headerlink" title="卸载旧版"></a>卸载旧版</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo yum remove docker \</span></span><br><span class="line">                  docker-client \</span><br><span class="line">                  docker-client-latest \</span><br><span class="line">                  docker-common \</span><br><span class="line">                  docker-latest \</span><br><span class="line">                  docker-latest-logrotate \</span><br><span class="line">                  docker-logrotate \</span><br><span class="line">                  docker-engine</span><br></pre></td></tr></table></figure><blockquote><p>sudo root 用户可以不用</p></blockquote><h5 id="原生安装"><a href="#原生安装" class="headerlink" title="原生安装"></a>原生安装</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 系统工具</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 加仓库</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo yum-config-manager \</span></span><br><span class="line">    --add-repo \</span><br><span class="line">    https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装 docker ce cli</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo yum install -y docker-ce docker-ce-cli containerd.io</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动服务</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo systemctl start docker</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 开机启动</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo systemctl <span class="built_in">enable</span> docker</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装 docker-compose</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo curl -L <span class="string">"https://github.com/docker/compose/releases/download/1.25.5/docker-compose-<span class="variable">$(uname -s)</span>-<span class="variable">$(uname -m)</span>"</span> -o /usr/<span class="built_in">local</span>/bin/docker-compose</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 阿里云加速</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo mkdir -p /etc/docker</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo tee /etc/docker/daemon.json &lt;&lt;-<span class="string">'EOF'</span></span></span><br><span class="line">&#123;</span><br><span class="line">  "registry-mirrors": ["https://8stycbeq.mirror.aliyuncs.com"]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo systemctl daemon-reload</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo systemctl restart docker</span></span><br></pre></td></tr></table></figure><h3 id="4-运行-yapi"><a href="#4-运行-yapi" class="headerlink" title="4. 运行 yapi"></a>4. 运行 yapi</h3><h4 id="4-1-docker-compose-配置"><a href="#4-1-docker-compose-配置" class="headerlink" title="4.1 docker-compose 配置"></a>4.1 docker-compose 配置</h4><p>这次修改了数据持久化在指定目录</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">"3"</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">mongo-yapi:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mongo</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">mongo-ypai</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="comment"># ports:</span></span><br><span class="line">    <span class="comment">#   - 27017:27017</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MONGO_INITDB_DATABASE=yapi</span></span><br><span class="line">      <span class="comment"># - MONGO_INITDB_ROOT_USERNAME=root</span></span><br><span class="line">      <span class="comment"># - MONGO_INITDB_ROOT_PASSWORD=$&#123;PASSWORD&#125;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./docker-data/mongo-yapi:/data/db</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="attr">docker_net:</span></span><br><span class="line">        <span class="attr">ipv4_address:</span> <span class="number">172.22</span><span class="number">.0</span><span class="number">.11</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># https://github.com/fjc0k/docker-YApi</span></span><br><span class="line">  <span class="attr">web-yapi:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">jayfong/yapi:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">web-ypai</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">3000</span><span class="string">:3000</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mongo-yapi</span></span><br><span class="line">    <span class="attr">links:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mongo-yapi</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">YAPI_ADMIN_ACCOUNT=admin@ducafecat.tech</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">YAPI_ADMIN_PASSWORD=$&#123;PASSWORD&#125;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">YAPI_CLOSE_REGISTER=true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">YAPI_DB_SERVERNAME=mongo-yapi</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">YAPI_DB_PORT=27017</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">YAPI_DB_DATABASE=yapi</span></span><br><span class="line">      <span class="comment"># - YAPI_DB_USER=root</span></span><br><span class="line">      <span class="comment"># - YAPI_DB_PASS=$&#123;PASSWORD&#125;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">YAPI_MAIL_ENABLE=false</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">YAPI_LDAP_LOGIN_ENABLE=false</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">YAPI_PLUGINS=[]</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="attr">docker_net:</span></span><br><span class="line">        <span class="attr">ipv4_address:</span> <span class="number">172.22</span><span class="number">.0</span><span class="number">.12</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">docker_net:</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">bridge</span></span><br><span class="line">    <span class="attr">ipam:</span></span><br><span class="line">      <span class="attr">config:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">subnet:</span> <span class="number">172.22</span><span class="number">.0</span><span class="number">.0</span><span class="string">/16</span></span><br></pre></td></tr></table></figure><h4 id="4-2-运行-yapi"><a href="#4-2-运行-yapi" class="headerlink" title="4.2 运行 yapi"></a>4.2 运行 yapi</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 启动</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> docker-compose up -d</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 卸载</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> docker-compose down</span></span><br></pre></td></tr></table></figure><h4 id="4-3-修改本地解析"><a href="#4-3-修改本地解析" class="headerlink" title="4.3 修改本地解析"></a>4.3 修改本地解析</h4><p>C:\Windows\System32\drivers\etc\hosts</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1 api.news.ducafecat.tech</span><br></pre></td></tr></table></figure><h2 id="问题整理"><a href="#问题整理" class="headerlink" title="问题整理"></a>问题整理</h2><h3 id="VMware-Workstation-与-Device-Credential-Guard-不兼容。"><a href="#VMware-Workstation-与-Device-Credential-Guard-不兼容。" class="headerlink" title="VMware Workstation 与 Device/Credential Guard 不兼容。"></a>VMware Workstation 与 Device/Credential Guard 不兼容。</h3><p>网上说卸载 Hyper-V， 没必要卸载</p><p>管理员方式运行 cmd 执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bcdedit /set hypervisorlaunchtype off</span><br></pre></td></tr></table></figure><p>然后重启电脑</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><p>install docker</p><p><a href="https://docs.docker.com/engine/install/centos/" target="_blank" rel="noopener">https://docs.docker.com/engine/install/centos/</a></p></li><li><p>install docker-compose</p><p><a href="https://github.com/docker/compose/releases" target="_blank" rel="noopener">https://github.com/docker/compose/releases</a></p></li><li><p>阿里镜像</p><p><a href="https://cr.console.aliyun.com/cn-beijing/instances/mirrors" target="_blank" rel="noopener">https://cr.console.aliyun.com/cn-beijing/instances/mirrors</a></p></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                   
      
    
    </summary>
    
      <category term="Docker" scheme="https://ducafecat.tech/categories/Docker/"/>
    
    
      <category term="Docker" scheme="https://ducafecat.tech/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Docker - 01 windows 下安装 docker 并运行 yapi 服务</title>
    <link href="https://ducafecat.tech/2020/05/21/docker/docker-01-install-yapi/"/>
    <id>https://ducafecat.tech/2020/05/21/docker/docker-01-install-yapi/</id>
    <published>2020-05-20T16:00:00.000Z</published>
    <updated>2020-05-22T12:59:16.289Z</updated>
    
    <content type="html"><![CDATA[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="bg.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>安装 docker</li><li>启动 yapi</li><li>备份、恢复 yapi</li></ul><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="安装-Windows-10-专业工作站版"><a href="#安装-Windows-10-专业工作站版" class="headerlink" title="安装 Windows 10 专业工作站版"></a>安装 Windows 10 专业工作站版</h3><ul><li>i tell you</li></ul><p><a href="https://msdn.itellyou.cn/" target="_blank" rel="noopener">https://msdn.itellyou.cn/</a></p><ul><li>选用 business 镜像</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-05-18-14-40-53.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="安装-docker"><a href="#安装-docker" class="headerlink" title="安装 docker"></a>安装 docker</h3><ul><li>官网</li></ul><p><a href="https://www.docker.com/" target="_blank" rel="noopener">https://www.docker.com/</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-05-18-14-46-06.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>启用 Hyper-V</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-05-21-11-02-39.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>切换 linunx container</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-05-21-11-03-10.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="阿里镜像加速"><a href="#阿里镜像加速" class="headerlink" title="阿里镜像加速"></a>阿里镜像加速</h3><ul><li>阿里镜像加速</li></ul><p><a href="https://cr.console.aliyun.com/cn-zhangjiakou/instances/mirrors" target="_blank" rel="noopener">https://cr.console.aliyun.com/cn-zhangjiakou/instances/mirrors</a></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="string">"registry-mirrors"</span>: [<span class="string">"https://你的代码.mirror.aliyuncs.com"</span>],</span><br><span class="line"><span class="string">"insecure-registries"</span>: [],</span><br><span class="line"><span class="string">"debug"</span>: <span class="literal">true</span>,</span><br><span class="line"><span class="string">"experimental"</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="docker-compose-配置-yapi"><a href="#docker-compose-配置-yapi" class="headerlink" title="docker-compose 配置 yapi"></a>docker-compose 配置 yapi</h3><ul><li>.env</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PASSWORD=$V7iTNk5N8#AkOeiwO@BywzBFte2^WsAuI$eJ4k9CKV0riqe</span><br></pre></td></tr></table></figure><ul><li>docker-compose.yml</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">"3"</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">mongo-yapi:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mongo</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">mongo-ypai</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="comment"># ports:</span></span><br><span class="line">    <span class="comment">#   - 27017:27017</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MONGO_INITDB_DATABASE=yapi</span></span><br><span class="line">      <span class="comment"># - MONGO_INITDB_ROOT_USERNAME=root</span></span><br><span class="line">      <span class="comment"># - MONGO_INITDB_ROOT_PASSWORD=$&#123;PASSWORD&#125;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="comment"># - ./docker-data/mongo-yapi:/data/db</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mongo-data:/data/db</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="attr">docker_net:</span></span><br><span class="line">        <span class="attr">ipv4_address:</span> <span class="number">172.22</span><span class="number">.0</span><span class="number">.11</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># https://github.com/fjc0k/docker-YApi</span></span><br><span class="line">  <span class="attr">web-yapi:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">jayfong/yapi:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">web-ypai</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">3000</span><span class="string">:3000</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mongo-yapi</span></span><br><span class="line">    <span class="attr">links:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mongo-yapi</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">YAPI_ADMIN_ACCOUNT=admin@ducafecat.tech</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">YAPI_ADMIN_PASSWORD=$&#123;PASSWORD&#125;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">YAPI_CLOSE_REGISTER=true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">YAPI_DB_SERVERNAME=mongo-yapi</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">YAPI_DB_PORT=27017</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">YAPI_DB_DATABASE=yapi</span></span><br><span class="line">      <span class="comment"># - YAPI_DB_USER=root</span></span><br><span class="line">      <span class="comment"># - YAPI_DB_PASS=$&#123;PASSWORD&#125;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">YAPI_MAIL_ENABLE=false</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">YAPI_LDAP_LOGIN_ENABLE=false</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">YAPI_PLUGINS=[]</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="attr">docker_net:</span></span><br><span class="line">        <span class="attr">ipv4_address:</span> <span class="number">172.22</span><span class="number">.0</span><span class="number">.12</span></span><br><span class="line"></span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line">  <span class="attr">mongo-data:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">docker_net:</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">bridge</span></span><br><span class="line">    <span class="attr">ipam:</span></span><br><span class="line">      <span class="attr">config:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">subnet:</span> <span class="number">172.22</span><span class="number">.0</span><span class="number">.0</span><span class="string">/16</span></span><br></pre></td></tr></table></figure><h3 id="启动、卸载-ypai-服务"><a href="#启动、卸载-ypai-服务" class="headerlink" title="启动、卸载 ypai 服务"></a>启动、卸载 ypai 服务</h3><ul><li>启动</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker-compose up -d</span><br></pre></td></tr></table></figure><ul><li>卸载</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker-compose down</span><br></pre></td></tr></table></figure><h3 id="本地域名解析"><a href="#本地域名解析" class="headerlink" title="本地域名解析"></a>本地域名解析</h3><ul><li>C:\Windows\System32\drivers\etc\hosts</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1 api.news.ducafecat.tech</span><br></pre></td></tr></table></figure><h3 id="查询-volume"><a href="#查询-volume" class="headerlink" title="查询 volume"></a>查询 volume</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ docker volume ls</span><br><span class="line">DRIVER              VOLUME NAME</span><br><span class="line"><span class="built_in">local</span>               2fc91e2fd47a7110c2ecc5c8b88b997c4e6ddcf471a1df04f3fb618238ffd8aa</span><br><span class="line"><span class="built_in">local</span>               26e58cd678a97108f6dcd2cab33b9de341f992ceedacb7fd772c196bec908306</span><br><span class="line"><span class="built_in">local</span>               yapi-volumes_mongo-data</span><br></pre></td></tr></table></figure><h3 id="备份数据"><a href="#备份数据" class="headerlink" title="备份数据"></a>备份数据</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker run --rm --volumes-from mongo-ypai -v c:\backup:/backup ubuntu tar cvf /backup/backup.tar -C /data/db .</span><br></pre></td></tr></table></figure><h3 id="还原数据"><a href="#还原数据" class="headerlink" title="还原数据"></a>还原数据</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker run --rm --volumes-from mongo-ypai -v c:\backup:/backup ubuntu bash -c <span class="string">"cd /data/db &amp;&amp; tar xvf /backup/backup.tar -C /data/db "</span></span><br></pre></td></tr></table></figure><h2 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h2><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li><a href="https://github.com/fjc0k/docker-YApi" target="_blank" rel="noopener">https://github.com/fjc0k/docker-YApi</a></li><li><a href="https://cr.console.aliyun.com/cn-zhangjiakou/instances/mirrors" target="_blank" rel="noopener">https://cr.console.aliyun.com/cn-zhangjiakou/instances/mirrors</a></li><li><a href="https://docs.docker.com/storage/volumes/#backup-restore-or-migrate-data-volumes" target="_blank" rel="noopener">https://docs.docker.com/storage/volumes/#backup-restore-or-migrate-data-volumes</a></li></ul><h3 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h3><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p><a href="https://github.com/ducafecat/docker-yapi.git" target="_blank" rel="noopener">https://github.com/ducafecat/docker-yapi.git</a></p><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                   
      
    
    </summary>
    
      <category term="Docker" scheme="https://ducafecat.tech/categories/Docker/"/>
    
    
      <category term="Docker" scheme="https://ducafecat.tech/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Flutter 实战从零开始 新闻客户端 - 11 APP升级、android动态授权</title>
    <link href="https://ducafecat.tech/2020/05/16/flutter-project/flutter-project-news-11-update-permission/"/>
    <id>https://ducafecat.tech/2020/05/16/flutter-project/flutter-project-news-11-update-permission/</id>
    <published>2020-05-15T16:00:00.000Z</published>
    <updated>2020-07-04T06:33:27.703Z</updated>
    
    <content type="html"><![CDATA[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="bg.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>app 升级策略</li><li>android 动态授权</li><li>android 设备目录</li><li>ios 支持 swift 语言</li><li>快速提示框</li></ul><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><iframe src="//player.bilibili.com/player.html?bvid=BV1Gi4y147zG&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="100%" height="400px"> </iframe><iframe src="//player.bilibili.com/player.html?bvid=BV17t4y117ua&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="100%" height="400px"> </iframe><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><a href="https://github.com/ducafecat/flutter_learn_news/releases/tag/v1.0.11" target="_blank" rel="noopener">https://github.com/ducafecat/flutter_learn_news/releases/tag/v1.0.11</a></p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="ios-支持-swift-语言"><a href="#ios-支持-swift-语言" class="headerlink" title="ios 支持 swift 语言"></a>ios 支持 swift 语言</h3><ul><li>出发点</li></ul><p>社区第三方包都在用 swift 开发，打包的时候需要加入 swift 语言包。</p><ul><li>操作</li></ul><p>创建一个支持 swift 的新项目，然后把 lib assets pubspec.yaml 覆盖即可。</p><h3 id="app-升级策略"><a href="#app-升级策略" class="headerlink" title="app 升级策略"></a>app 升级策略</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-05-16-15-18-48.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><h4 id="定义接口"><a href="#定义接口" class="headerlink" title="定义接口"></a>定义接口</h4><ul><li>post /app/update</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-05-16-16-02-33.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h4 id="加入依赖包"><a href="#加入依赖包" class="headerlink" title="加入依赖包"></a>加入依赖包</h4><ul><li>pubspec.yaml</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">dependencies:</span></span><br><span class="line">  <span class="comment"># 设备信息</span></span><br><span class="line">  <span class="attr">device_info:</span> <span class="string">^0.4.2+3</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 包信息</span></span><br><span class="line">  <span class="attr">package_info:</span> <span class="string">^0.4.0+18</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 路径查询</span></span><br><span class="line">  <span class="attr">path_provider:</span> <span class="string">^1.6.8</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># permission 权限</span></span><br><span class="line">  <span class="attr">permission_handler:</span> <span class="string">^5.0.0+hotfix.6</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 安装</span></span><br><span class="line">  <span class="attr">install_plugin:</span> <span class="string">^2.0.1</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 对话框</span></span><br><span class="line">  <span class="attr">easy_dialog:</span> <span class="string">^1.0.5</span></span><br></pre></td></tr></table></figure><h4 id="升级工具类"><a href="#升级工具类" class="headerlink" title="升级工具类"></a>升级工具类</h4><ul><li>lib/common/utils/update.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'dart:io'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:dio/dio.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:easy_dialog/easy_dialog.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/common/apis/app.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/common/entitys/entitys.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/common/widgets/toast.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/global.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:install_plugin/install_plugin.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:path_provider/path_provider.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// <span class="markdown">app 升级</span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AppUpdateUtil</span> </span>&#123;</span><br><span class="line">  <span class="keyword">static</span> AppUpdateUtil _instance = AppUpdateUtil._internal();</span><br><span class="line">  <span class="keyword">factory</span> AppUpdateUtil() =&gt; _instance;</span><br><span class="line"></span><br><span class="line">  BuildContext _context;</span><br><span class="line">  AppUpdateResponseEntity _appUpdateInfo;</span><br><span class="line"></span><br><span class="line">  AppUpdateUtil._internal();</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">获取更新信息</span></span></span><br><span class="line">  Future run(BuildContext context) <span class="keyword">async</span> &#123;</span><br><span class="line">    _context = context;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 提交 设备类型、发行渠道、架构、机型</span></span><br><span class="line">    AppUpdateRequestEntity requestDeviceInfo = AppUpdateRequestEntity(</span><br><span class="line">      device: Global.isIOS == <span class="keyword">true</span> ? <span class="string">"ios"</span> : <span class="string">"android"</span>,</span><br><span class="line">      channel: Global.channel,</span><br><span class="line">      architecture: Global.isIOS == <span class="keyword">true</span></span><br><span class="line">          ? Global.iosDeviceInfo.utsname.machine</span><br><span class="line">          : Global.androidDeviceInfo.device,</span><br><span class="line">      model: Global.isIOS == <span class="keyword">true</span></span><br><span class="line">          ? Global.iosDeviceInfo.name</span><br><span class="line">          : Global.androidDeviceInfo.brand,</span><br><span class="line">    );</span><br><span class="line">    _appUpdateInfo =</span><br><span class="line">        <span class="keyword">await</span> AppApi.update(context: context, params: requestDeviceInfo);</span><br><span class="line"></span><br><span class="line">    _runAppUpdate();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">检查是否有新版</span></span></span><br><span class="line">  Future _runAppUpdate() <span class="keyword">async</span> &#123;</span><br><span class="line">    <span class="comment">// 比较版本</span></span><br><span class="line">    <span class="keyword">final</span> isNewVersion =</span><br><span class="line">        (_appUpdateInfo.latestVersion.compareTo(Global.packageInfo.version) ==</span><br><span class="line">            <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 安装</span></span><br><span class="line">    <span class="keyword">if</span> (isNewVersion == <span class="keyword">true</span>) &#123;</span><br><span class="line">      _appUpdateConformDialog(() &#123;</span><br><span class="line">        Navigator.of(_context).pop();</span><br><span class="line">        <span class="keyword">if</span> (Global.isIOS == <span class="keyword">true</span>) &#123;</span><br><span class="line">          <span class="comment">// 去苹果店</span></span><br><span class="line">          InstallPlugin.gotoAppStore(_appUpdateInfo.shopUrl);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="comment">// apk 下载安装</span></span><br><span class="line">          toastInfo(msg: <span class="string">"开始下载升级包"</span>);</span><br><span class="line">          _downloadAPKAndSetup(_appUpdateInfo.fileUrl);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">下载文件 &amp; 安装</span></span></span><br><span class="line">  Future _downloadAPKAndSetup(<span class="built_in">String</span> fileUrl) <span class="keyword">async</span> &#123;</span><br><span class="line">    <span class="comment">// 下载</span></span><br><span class="line">    Directory externalDir = <span class="keyword">await</span> getExternalStorageDirectory();</span><br><span class="line">    <span class="built_in">String</span> fullPath = externalDir.path + <span class="string">"/release.apk"</span>;</span><br><span class="line"></span><br><span class="line">    Dio dio = Dio(BaseOptions(</span><br><span class="line">        responseType: ResponseType.bytes,</span><br><span class="line">        followRedirects: <span class="keyword">false</span>,</span><br><span class="line">        validateStatus: (status) &#123;</span><br><span class="line">          <span class="keyword">return</span> status &lt; <span class="number">500</span>;</span><br><span class="line">        &#125;));</span><br><span class="line">    Response response = <span class="keyword">await</span> dio.<span class="keyword">get</span>(</span><br><span class="line">      fileUrl,</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    File file = File(fullPath);</span><br><span class="line">    <span class="keyword">var</span> raf = file.openSync(mode: FileMode.write);</span><br><span class="line">    raf.writeFromSync(response.data);</span><br><span class="line">    <span class="keyword">await</span> raf.close();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 安装</span></span><br><span class="line">    <span class="keyword">await</span> InstallPlugin.installApk(fullPath, Global.packageInfo.packageName);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">升级确认对话框</span></span></span><br><span class="line">  <span class="keyword">void</span> _appUpdateConformDialog(VoidCallback onPressed) &#123;</span><br><span class="line">    EasyDialog(</span><br><span class="line">        title: Text(</span><br><span class="line">          <span class="string">"发现新版本 <span class="subst">$&#123;_appUpdateInfo.latestVersion&#125;</span>"</span>,</span><br><span class="line">          style: TextStyle(fontWeight: FontWeight.bold),</span><br><span class="line">          textScaleFactor: <span class="number">1.2</span>,</span><br><span class="line">        ),</span><br><span class="line">        description: Text(</span><br><span class="line">          _appUpdateInfo.latestDescription,</span><br><span class="line">          textScaleFactor: <span class="number">1.1</span>,</span><br><span class="line">          textAlign: TextAlign.center,</span><br><span class="line">        ),</span><br><span class="line">        height: <span class="number">220</span>,</span><br><span class="line">        contentList: [</span><br><span class="line">          Row(</span><br><span class="line">            mainAxisAlignment: MainAxisAlignment.end,</span><br><span class="line">            children: &lt;Widget&gt;[</span><br><span class="line">              <span class="keyword">new</span> FlatButton(</span><br><span class="line">                padding: <span class="keyword">const</span> EdgeInsets.only(top: <span class="number">8.0</span>),</span><br><span class="line">                textColor: Colors.lightBlue,</span><br><span class="line">                onPressed: onPressed,</span><br><span class="line">                child: <span class="keyword">new</span> Text(</span><br><span class="line">                  <span class="string">"同意"</span>,</span><br><span class="line">                  textScaleFactor: <span class="number">1.2</span>,</span><br><span class="line">                ),</span><br><span class="line">              ),</span><br><span class="line">              <span class="keyword">new</span> FlatButton(</span><br><span class="line">                padding: <span class="keyword">const</span> EdgeInsets.only(top: <span class="number">8.0</span>),</span><br><span class="line">                textColor: Colors.lightBlue,</span><br><span class="line">                onPressed: () &#123;</span><br><span class="line">                  Navigator.of(_context).pop();</span><br><span class="line">                &#125;,</span><br><span class="line">                child: <span class="keyword">new</span> Text(</span><br><span class="line">                  <span class="string">"取消"</span>,</span><br><span class="line">                  textScaleFactor: <span class="number">1.2</span>,</span><br><span class="line">                ),</span><br><span class="line">              ),</span><br><span class="line">            ],</span><br><span class="line">          )</span><br><span class="line">        ]).<span class="keyword">show</span>(_context);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="读取设备信息"><a href="#读取设备信息" class="headerlink" title="读取设备信息"></a>读取设备信息</h4><ul><li>插件</li></ul><p><a href="https://pub.flutter-io.cn/packages/device_info" target="_blank" rel="noopener">https://pub.flutter-io.cn/packages/device_info</a></p><ul><li>全局信息</li></ul><p>lib/global.dart</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// <span class="markdown">是否 ios</span></span></span><br><span class="line"><span class="keyword">static</span> <span class="built_in">bool</span> isIOS = Platform.isIOS;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// <span class="markdown">android 设备信息</span></span></span><br><span class="line"><span class="keyword">static</span> AndroidDeviceInfo androidDeviceInfo;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// <span class="markdown">ios 设备信息</span></span></span><br><span class="line"><span class="keyword">static</span> IosDeviceInfo iosDeviceInfo;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// <span class="markdown">包信息</span></span></span><br><span class="line"><span class="keyword">static</span> PackageInfo packageInfo;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// <span class="markdown">init</span></span></span><br><span class="line"><span class="keyword">static</span> Future init() <span class="keyword">async</span> &#123;</span><br><span class="line">  ...</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 读取设备信息</span></span><br><span class="line">  DeviceInfoPlugin deviceInfoPlugin = DeviceInfoPlugin();</span><br><span class="line">  <span class="keyword">if</span> (Global.isIOS) &#123;</span><br><span class="line">    Global.iosDeviceInfo = <span class="keyword">await</span> deviceInfoPlugin.iosInfo;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    Global.androidDeviceInfo = <span class="keyword">await</span> deviceInfoPlugin.androidInfo;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 包信息</span></span><br><span class="line">  Global.packageInfo = <span class="keyword">await</span> PackageInfo.fromPlatform();</span><br><span class="line"></span><br><span class="line">  ...</span><br></pre></td></tr></table></figure><ul><li>定义升级信息 entity</li></ul><p>lib/common/entitys/app.dart</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AppUpdateRequestEntity</span> </span>&#123;</span><br><span class="line">  <span class="built_in">String</span> device;</span><br><span class="line">  <span class="built_in">String</span> channel;</span><br><span class="line">  <span class="built_in">String</span> architecture;</span><br><span class="line">  <span class="built_in">String</span> model;</span><br><span class="line"></span><br><span class="line">  AppUpdateRequestEntity(&#123;</span><br><span class="line">    <span class="keyword">this</span>.device,</span><br><span class="line">    <span class="keyword">this</span>.channel,</span><br><span class="line">    <span class="keyword">this</span>.architecture,</span><br><span class="line">    <span class="keyword">this</span>.model,</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">factory</span> AppUpdateRequestEntity.fromJson(<span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">dynamic</span>&gt; json) =&gt;</span><br><span class="line">      AppUpdateRequestEntity(</span><br><span class="line">        device: json[<span class="string">"device"</span>],</span><br><span class="line">        channel: json[<span class="string">"channel"</span>],</span><br><span class="line">        architecture: json[<span class="string">"architecture"</span>],</span><br><span class="line">        model: json[<span class="string">"model"</span>],</span><br><span class="line">      );</span><br><span class="line"></span><br><span class="line">  <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">dynamic</span>&gt; toJson() =&gt; &#123;</span><br><span class="line">        <span class="string">"device"</span>: device,</span><br><span class="line">        <span class="string">"channel"</span>: channel,</span><br><span class="line">        <span class="string">"architecture"</span>: architecture,</span><br><span class="line">        <span class="string">"model"</span>: model,</span><br><span class="line">      &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AppUpdateResponseEntity</span> </span>&#123;</span><br><span class="line">  <span class="built_in">String</span> shopUrl;</span><br><span class="line">  <span class="built_in">String</span> fileUrl;</span><br><span class="line">  <span class="built_in">String</span> latestVersion;</span><br><span class="line">  <span class="built_in">String</span> latestDescription;</span><br><span class="line"></span><br><span class="line">  AppUpdateResponseEntity(&#123;</span><br><span class="line">    <span class="keyword">this</span>.shopUrl,</span><br><span class="line">    <span class="keyword">this</span>.fileUrl,</span><br><span class="line">    <span class="keyword">this</span>.latestVersion,</span><br><span class="line">    <span class="keyword">this</span>.latestDescription,</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">factory</span> AppUpdateResponseEntity.fromJson(<span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">dynamic</span>&gt; json) =&gt;</span><br><span class="line">      AppUpdateResponseEntity(</span><br><span class="line">        shopUrl: json[<span class="string">"shopUrl"</span>],</span><br><span class="line">        fileUrl: json[<span class="string">"fileUrl"</span>],</span><br><span class="line">        latestVersion: json[<span class="string">"latestVersion"</span>],</span><br><span class="line">        latestDescription: json[<span class="string">"latestDescription"</span>],</span><br><span class="line">      );</span><br><span class="line"></span><br><span class="line">  <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">dynamic</span>&gt; toJson() =&gt; &#123;</span><br><span class="line">        <span class="string">"shopUrl"</span>: shopUrl,</span><br><span class="line">        <span class="string">"fileUrl"</span>: fileUrl,</span><br><span class="line">        <span class="string">"latestVersion"</span>: latestVersion,</span><br><span class="line">        <span class="string">"latestDescription"</span>: latestDescription,</span><br><span class="line">      &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>api 请求</li></ul><p>lib/common/apis/app.dart</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// <span class="markdown">系统相关</span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AppApi</span> </span>&#123;</span><br><span class="line">  <span class="comment">/// <span class="markdown">获取最新版本信息</span></span></span><br><span class="line">  <span class="keyword">static</span> Future&lt;AppUpdateResponseEntity&gt; update(&#123;</span><br><span class="line">    <span class="meta">@required</span> BuildContext context,</span><br><span class="line">    AppUpdateRequestEntity params,</span><br><span class="line">  &#125;) <span class="keyword">async</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> response = <span class="keyword">await</span> HttpUtil().post(</span><br><span class="line">      <span class="string">'/app/update'</span>,</span><br><span class="line">      context: context,</span><br><span class="line">      params: params,</span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">return</span> AppUpdateResponseEntity.fromJson(response);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>提交信息 获取版本</li></ul><p>lib/common/utils/update.dart</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// <span class="markdown">获取更新信息</span></span></span><br><span class="line">Future run(BuildContext context) <span class="keyword">async</span> &#123;</span><br><span class="line">  _context = context;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 提交 设备类型、发行渠道、架构、机型</span></span><br><span class="line">  AppUpdateRequestEntity requestDeviceInfo = AppUpdateRequestEntity(</span><br><span class="line">    device: Global.isIOS == <span class="keyword">true</span> ? <span class="string">"ios"</span> : <span class="string">"android"</span>,</span><br><span class="line">    channel: Global.channel,</span><br><span class="line">    architecture: Global.isIOS == <span class="keyword">true</span></span><br><span class="line">        ? Global.iosDeviceInfo.utsname.machine</span><br><span class="line">        : Global.androidDeviceInfo.device,</span><br><span class="line">    model: Global.isIOS == <span class="keyword">true</span></span><br><span class="line">        ? Global.iosDeviceInfo.name</span><br><span class="line">        : Global.androidDeviceInfo.brand,</span><br><span class="line">  );</span><br><span class="line">  _appUpdateInfo =</span><br><span class="line">      <span class="keyword">await</span> AppApi.update(context: context, params: requestDeviceInfo);</span><br><span class="line"></span><br><span class="line">  _runAppUpdate();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// <span class="markdown">检查是否有新版</span></span></span><br><span class="line">Future _runAppUpdate() <span class="keyword">async</span> &#123;</span><br><span class="line">  <span class="comment">// 比较版本</span></span><br><span class="line">  <span class="keyword">final</span> isNewVersion =</span><br><span class="line">      (_appUpdateInfo.latestVersion.compareTo(Global.packageInfo.version) ==</span><br><span class="line">          <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 安装</span></span><br><span class="line">  <span class="keyword">if</span> (isNewVersion == <span class="keyword">true</span>) &#123;</span><br><span class="line">    _appUpdateConformDialog(() &#123;</span><br><span class="line">      Navigator.of(_context).pop();</span><br><span class="line">      <span class="keyword">if</span> (Global.isIOS == <span class="keyword">true</span>) &#123;</span><br><span class="line">        <span class="comment">// 去苹果店</span></span><br><span class="line">        InstallPlugin.gotoAppStore(_appUpdateInfo.shopUrl);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// apk 下载安装</span></span><br><span class="line">        toastInfo(msg: <span class="string">"开始下载升级包"</span>);</span><br><span class="line">        _downloadAPKAndSetup(_appUpdateInfo.fileUrl);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="android-动态授权"><a href="#android-动态授权" class="headerlink" title="android 动态授权"></a>android 动态授权</h4><ul><li>插件</li></ul><p><a href="https://pub.flutter-io.cn/packages/permission_handler" target="_blank" rel="noopener">https://pub.flutter-io.cn/packages/permission_handler</a></p><ul><li>官方文章</li></ul><p><a href="https://developer.android.com/training/permissions/requesting" target="_blank" rel="noopener">https://developer.android.com/training/permissions/requesting</a></p><p><a href="https://developer.android.com/training/permissions/usage-notes" target="_blank" rel="noopener">https://developer.android.com/training/permissions/usage-notes</a></p><ul><li>AndroidManifest.xml 中加入权限</li></ul><p>android/app/src/main/AndroidManifest.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.INTERNET"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.READ_EXTERNAL_STORAGE"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.WRITE_EXTERNAL_STORAGE"</span> /&gt;</span></span><br></pre></td></tr></table></figure><ul><li>flutter 启动页中执行授权</li></ul><p>lib/pages/index/index.dart</p><p>在 initState 是执行</p><p>延迟 3 秒，用户体验好些</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_IndexPageState</span> <span class="keyword">extends</span> <span class="title">State</span>&lt;<span class="title">IndexPage</span>&gt; </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="keyword">void</span> initState() &#123;</span><br><span class="line">    <span class="keyword">super</span>.initState();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (Global.isRelease == <span class="keyword">true</span>) &#123;</span><br><span class="line">      doAppUpdate();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  Future doAppUpdate() <span class="keyword">async</span> &#123;</span><br><span class="line">    <span class="keyword">await</span> Future.delayed(<span class="built_in">Duration</span>(seconds: <span class="number">3</span>), () <span class="keyword">async</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (Global.isIOS == <span class="keyword">false</span> &amp;&amp;</span><br><span class="line">          <span class="keyword">await</span> Permission.storage.isGranted == <span class="keyword">false</span>) &#123;</span><br><span class="line">        <span class="keyword">await</span> [Permission.storage].request();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">await</span> Permission.storage.isGranted) &#123;</span><br><span class="line">        AppUpdateUtil().run(context);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h4 id="android-目录权限"><a href="#android-目录权限" class="headerlink" title="android 目录权限"></a>android 目录权限</h4><ul><li>插件</li></ul><p><a href="https://pub.flutter-io.cn/packages/path_provider" target="_blank" rel="noopener">https://pub.flutter-io.cn/packages/path_provider</a><br><a href="https://pub.flutter-io.cn/packages/install_plugin" target="_blank" rel="noopener">https://pub.flutter-io.cn/packages/install_plugin</a></p><ul><li>文章</li></ul><p><a href="https://developer.android.com/reference/androidx/core/content/FileProvider.html" target="_blank" rel="noopener">https://developer.android.com/reference/androidx/core/content/FileProvider.html</a></p><ul><li>lib/common/utils/update.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// <span class="markdown">下载文件 &amp; 安装</span></span></span><br><span class="line">Future _downloadAPKAndSetup(<span class="built_in">String</span> fileUrl) <span class="keyword">async</span> &#123;</span><br><span class="line">  <span class="comment">// 下载</span></span><br><span class="line">  Directory externalDir = <span class="keyword">await</span> getExternalStorageDirectory();</span><br><span class="line">  <span class="built_in">String</span> fullPath = externalDir.path + <span class="string">"/release.apk"</span>;</span><br><span class="line"></span><br><span class="line">  Dio dio = Dio(BaseOptions(</span><br><span class="line">      responseType: ResponseType.bytes,</span><br><span class="line">      followRedirects: <span class="keyword">false</span>,</span><br><span class="line">      validateStatus: (status) &#123;</span><br><span class="line">        <span class="keyword">return</span> status &lt; <span class="number">500</span>;</span><br><span class="line">      &#125;));</span><br><span class="line">  Response response = <span class="keyword">await</span> dio.<span class="keyword">get</span>(</span><br><span class="line">    fileUrl,</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">  File file = File(fullPath);</span><br><span class="line">  <span class="keyword">var</span> raf = file.openSync(mode: FileMode.write);</span><br><span class="line">  raf.writeFromSync(response.data);</span><br><span class="line">  <span class="keyword">await</span> raf.close();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 安装</span></span><br><span class="line">  <span class="keyword">await</span> InstallPlugin.installApk(fullPath, Global.packageInfo.packageName);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="EasyDialog-快速提示框"><a href="#EasyDialog-快速提示框" class="headerlink" title="EasyDialog 快速提示框"></a>EasyDialog 快速提示框</h4><ul><li>插件</li></ul><p><a href="https://pub.flutter-io.cn/packages/easy_dialog" target="_blank" rel="noopener">https://pub.flutter-io.cn/packages/easy_dialog</a></p><ul><li>lib/common/utils/update.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// <span class="markdown">升级确认对话框</span></span></span><br><span class="line"><span class="keyword">void</span> _appUpdateConformDialog(VoidCallback onPressed) &#123;</span><br><span class="line">  EasyDialog(</span><br><span class="line">      title: Text(</span><br><span class="line">        <span class="string">"发现新版本 <span class="subst">$&#123;_appUpdateInfo.latestVersion&#125;</span>"</span>,</span><br><span class="line">        style: TextStyle(fontWeight: FontWeight.bold),</span><br><span class="line">        textScaleFactor: <span class="number">1.2</span>,</span><br><span class="line">      ),</span><br><span class="line">      description: Text(</span><br><span class="line">        _appUpdateInfo.latestDescription,</span><br><span class="line">        textScaleFactor: <span class="number">1.1</span>,</span><br><span class="line">        textAlign: TextAlign.center,</span><br><span class="line">      ),</span><br><span class="line">      height: <span class="number">220</span>,</span><br><span class="line">      contentList: [</span><br><span class="line">        Row(</span><br><span class="line">          mainAxisAlignment: MainAxisAlignment.end,</span><br><span class="line">          children: &lt;Widget&gt;[</span><br><span class="line">            <span class="keyword">new</span> FlatButton(</span><br><span class="line">              padding: <span class="keyword">const</span> EdgeInsets.only(top: <span class="number">8.0</span>),</span><br><span class="line">              textColor: Colors.lightBlue,</span><br><span class="line">              onPressed: onPressed,</span><br><span class="line">              child: <span class="keyword">new</span> Text(</span><br><span class="line">                <span class="string">"同意"</span>,</span><br><span class="line">                textScaleFactor: <span class="number">1.2</span>,</span><br><span class="line">              ),</span><br><span class="line">            ),</span><br><span class="line">            <span class="keyword">new</span> FlatButton(</span><br><span class="line">              padding: <span class="keyword">const</span> EdgeInsets.only(top: <span class="number">8.0</span>),</span><br><span class="line">              textColor: Colors.lightBlue,</span><br><span class="line">              onPressed: () &#123;</span><br><span class="line">                Navigator.of(_context).pop();</span><br><span class="line">              &#125;,</span><br><span class="line">              child: <span class="keyword">new</span> Text(</span><br><span class="line">                <span class="string">"取消"</span>,</span><br><span class="line">                textScaleFactor: <span class="number">1.2</span>,</span><br><span class="line">              ),</span><br><span class="line">            ),</span><br><span class="line">          ],</span><br><span class="line">        )</span><br><span class="line">      ]).<span class="keyword">show</span>(_context);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h2><h3 id="视频-1"><a href="#视频-1" class="headerlink" title="视频"></a>视频</h3><ul><li><a href="https://space.bilibili.com/404904528/channel/detail?cid=106755" target="_blank" rel="noopener">b 站</a></li><li><a href="https://www.youtube.com/watch?v=Uucg6GGGBsY&amp;list=PL274L1n86T80VZR30KaLOKV6jqwTq5E8D" target="_blank" rel="noopener">油管镜像</a></li></ul><h3 id="蓝湖设计稿（加微信给授权-ducafecat）"><a href="#蓝湖设计稿（加微信给授权-ducafecat）" class="headerlink" title="蓝湖设计稿（加微信给授权 ducafecat）"></a>蓝湖设计稿（加微信给授权 ducafecat）</h3><p><a href="https://lanhuapp.com/url/lYuz1" target="_blank" rel="noopener">https://lanhuapp.com/url/lYuz1</a><br>密码: gSKl</p><blockquote><p>蓝湖现在收费了，所以查看标记还请自己上传 xd 设计稿<br>商业设计稿文件不好直接分享, 可以加微信联系 ducafecat</p></blockquote><h3 id="YAPI-接口管理"><a href="#YAPI-接口管理" class="headerlink" title="YAPI 接口管理"></a>YAPI 接口管理</h3><p><a href="http://yapi.demo.qunar.com/" target="_blank" rel="noopener">http://yapi.demo.qunar.com/</a></p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li>文章</li></ul><p><a href="https://developer.android.com/training/permissions/requesting" target="_blank" rel="noopener">https://developer.android.com/training/permissions/requesting</a><br><a href="https://developer.android.com/training/permissions/usage-notes" target="_blank" rel="noopener">https://developer.android.com/training/permissions/usage-notes</a><br><a href="https://developer.android.com/reference/androidx/core/content/FileProvider.html" target="_blank" rel="noopener">https://developer.android.com/reference/androidx/core/content/FileProvider.html</a></p><ul><li>flutter 插件</li></ul><p><a href="https://pub.flutter-io.cn/packages/device_info" target="_blank" rel="noopener">https://pub.flutter-io.cn/packages/device_info</a><br><a href="https://pub.flutter-io.cn/packages/path_provider" target="_blank" rel="noopener">https://pub.flutter-io.cn/packages/path_provider</a><br><a href="https://pub.flutter-io.cn/packages/permission_handler" target="_blank" rel="noopener">https://pub.flutter-io.cn/packages/permission_handler</a><br><a href="https://pub.flutter-io.cn/packages/install_plugin" target="_blank" rel="noopener">https://pub.flutter-io.cn/packages/install_plugin</a><br><a href="https://pub.flutter-io.cn/packages/easy_dialog" target="_blank" rel="noopener">https://pub.flutter-io.cn/packages/easy_dialog</a></p><h3 id="VSCode-插件"><a href="#VSCode-插件" class="headerlink" title="VSCode 插件"></a>VSCode 插件</h3><ul><li>Flutter、Dart</li><li><a href="https://marketplace.visualstudio.com/items?itemName=alexisvt.flutter-snippets" target="_blank" rel="noopener">Flutter Widget Snippets</a></li><li><a href="https://marketplace.visualstudio.com/items?itemName=Nash.awesome-flutter-snippets" target="_blank" rel="noopener">Awesome Flutter Snippets</a></li><li><a href="https://marketplace.visualstudio.com/items?itemName=quicktype.quicktype" target="_blank" rel="noopener">Paste JSON as Code</a></li><li><a href="https://marketplace.visualstudio.com/items?itemName=FelixAngelov.bloc" target="_blank" rel="noopener">bloc</a></li><li><a href="https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker" target="_blank" rel="noopener">Code Spell Checker</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                   
      
    
    </summary>
    
      <category term="Flutter 实战从零开始" scheme="https://ducafecat.tech/categories/Flutter-%E5%AE%9E%E6%88%98%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B/"/>
    
    
      <category term="flutter" scheme="https://ducafecat.tech/tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>Flutter 实战从零开始 新闻客户端 - 10 编译发布正式版</title>
    <link href="https://ducafecat.tech/2020/05/05/flutter-project/flutter-project-news-10-release/"/>
    <id>https://ducafecat.tech/2020/05/05/flutter-project/flutter-project-news-10-release/</id>
    <published>2020-05-04T16:00:00.000Z</published>
    <updated>2020-07-04T06:33:27.703Z</updated>
    
    <content type="html"><![CDATA[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="bg.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>编译 build releae</li><li>程序瘦身</li><li>混淆程序</li><li>修改程序名称</li><li>制作图标</li><li>制作启动画面</li></ul><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><iframe src="//player.bilibili.com/player.html?bvid=BV1G541147ZV&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="100%" height="400px"> </iframe><iframe src="//player.bilibili.com/player.html?bvid=BV1ik4y1k7yP&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="100%" height="400px"> </iframe><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><a href="https://github.com/ducafecat/flutter_learn_news/releases/tag/v1.0.10" target="_blank" rel="noopener">https://github.com/ducafecat/flutter_learn_news/releases/tag/v1.0.10</a></p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="1-APP-图标"><a href="#1-APP-图标" class="headerlink" title="1. APP 图标"></a>1. APP 图标</h3><h4 id="规格说明"><a href="#规格说明" class="headerlink" title="规格说明"></a>规格说明</h4><p><a href="https://developer.android.com/google-play/resources/icon-design-specifications" target="_blank" rel="noopener">https://developer.android.com/google-play/resources/icon-design-specifications</a></p><p><a href="https://developer.apple.com/design/human-interface-guidelines/ios/icons-and-images/app-icon/" target="_blank" rel="noopener">https://developer.apple.com/design/human-interface-guidelines/ios/icons-and-images/app-icon/</a></p><h4 id="图标尺寸"><a href="#图标尺寸" class="headerlink" title="图标尺寸"></a>图标尺寸</h4><p>android 512x512</p><p>ios 1024x1024</p><h4 id="在线工具"><a href="#在线工具" class="headerlink" title="在线工具"></a>在线工具</h4><p><a href="https://www.designevo.com/cn/logo-maker/" target="_blank" rel="noopener">https://www.designevo.com/cn/logo-maker/</a></p><h4 id="flutter-launcher-icons-插件"><a href="#flutter-launcher-icons-插件" class="headerlink" title="flutter_launcher_icons 插件"></a>flutter_launcher_icons 插件</h4><p><a href="https://pub.dev/packages/flutter_launcher_icons" target="_blank" rel="noopener">https://pub.dev/packages/flutter_launcher_icons</a></p><h4 id="pubspec-yaml"><a href="#pubspec-yaml" class="headerlink" title="pubspec.yaml"></a>pubspec.yaml</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">dev_dependencies:</span></span><br><span class="line">  <span class="comment"># icons</span></span><br><span class="line">  <span class="attr">flutter_launcher_icons:</span> <span class="string">^0.7.5</span></span><br><span class="line"></span><br><span class="line"><span class="attr">flutter_icons:</span></span><br><span class="line">  <span class="attr">android:</span> <span class="string">"launcher_icon"</span></span><br><span class="line">  <span class="attr">ios:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">image_path:</span> <span class="string">"assets/icons/logo-1024.png"</span></span><br></pre></td></tr></table></figure><h4 id="生成图标"><a href="#生成图标" class="headerlink" title="生成图标"></a>生成图标</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flutter pub run flutter_launcher_icons:main</span><br></pre></td></tr></table></figure><h4 id="图标目录"><a href="#图标目录" class="headerlink" title="图标目录"></a>图标目录</h4><p>android/app/src/main/res</p><p>ios/Runner/Assets.xcassets/AppIcon.appiconset</p><h3 id="2-启动图片"><a href="#2-启动图片" class="headerlink" title="2. 启动图片"></a>2. 启动图片</h3><h4 id="规格说明-1"><a href="#规格说明-1" class="headerlink" title="规格说明"></a>规格说明</h4><p><a href="https://developer.apple.com/design/human-interface-guidelines/ios/visual-design/adaptivity-and-layout/#device-screen-sizes-and-orientations" target="_blank" rel="noopener">https://developer.apple.com/design/human-interface-guidelines/ios/visual-design/adaptivity-and-layout/#device-screen-sizes-and-orientations</a></p><p><a href="https://developer.android.com/about/dashboards/index.html#Screens" target="_blank" rel="noopener">https://developer.android.com/about/dashboards/index.html#Screens</a></p><p><a href="https://uiiiuiii.com/screen/" target="_blank" rel="noopener">https://uiiiuiii.com/screen/</a></p><h4 id="图片尺寸"><a href="#图片尺寸" class="headerlink" title="图片尺寸"></a>图片尺寸</h4><p>iPhone XS Max 1242px × 2688px</p><p>android xxhdpi xhdpi</p><h4 id="在线工具-1"><a href="#在线工具-1" class="headerlink" title="在线工具"></a>在线工具</h4><p><a href="https://hotpot.ai/icon_resizer" target="_blank" rel="noopener">https://hotpot.ai/icon_resizer</a></p><h3 id="3-Android-发布"><a href="#3-Android-发布" class="headerlink" title="3. Android 发布"></a>3. Android 发布</h3><h4 id="证书签名说明"><a href="#证书签名说明" class="headerlink" title="证书签名说明"></a>证书签名说明</h4><p><a href="https://developer.android.com/studio/publish/app-signing?hl=zh-cn" target="_blank" rel="noopener">https://developer.android.com/studio/publish/app-signing?hl=zh-cn</a></p><h4 id="生成证书"><a href="#生成证书" class="headerlink" title="生成证书"></a>生成证书</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入目录 android/app/</span></span><br><span class="line">keytool -genkey -v -keystore ./key.jks -keyalg RSA -keysize 2048 -validity 10000 -<span class="built_in">alias</span> key</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出文件</span></span><br><span class="line">android/app/key.jks</span><br></pre></td></tr></table></figure><h4 id="Gradle-配置"><a href="#Gradle-配置" class="headerlink" title="Gradle 配置"></a>Gradle 配置</h4><ul><li><p>android/gradle.properties</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">android.enableAapt2=false # 不检测依赖资源</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>android/key.properties</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">storePassword=123456</span><br><span class="line">keyPassword=123456</span><br><span class="line">keyAlias=key</span><br><span class="line">storeFile=./key.jks</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>android/app/build.gradle</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义属性读取对象，读取 android/key.properties</span></span><br><span class="line"><span class="keyword">def</span> keystoreProperties = <span class="keyword">new</span> Properties()</span><br><span class="line"><span class="keyword">def</span> keystorePropertiesFile = rootProject.<span class="keyword">file</span>(<span class="string">'key.properties'</span>)</span><br><span class="line"><span class="keyword">if</span> (keystorePropertiesFile.exists()) &#123;</span><br><span class="line">    keystoreProperties.load(<span class="keyword">new</span> FileInputStream(keystorePropertiesFile))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">android &#123;</span><br><span class="line">    compileSdkVersion <span class="number">28</span></span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 签名配置</span></span><br><span class="line">    signingConfigs &#123;</span><br><span class="line">        release &#123;</span><br><span class="line">            keyAlias keystoreProperties[<span class="string">'keyAlias'</span>]</span><br><span class="line">            keyPassword keystoreProperties[<span class="string">'keyPassword'</span>]</span><br><span class="line">            storeFile <span class="keyword">file</span>(keystoreProperties[<span class="string">'storeFile'</span>])</span><br><span class="line">            storePassword keystoreProperties[<span class="string">'storePassword'</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    buildTypes &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 发布配置</span></span><br><span class="line">        release &#123;</span><br><span class="line">            signingConfig signingConfigs.release</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="修改版本号"><a href="#修改版本号" class="headerlink" title="修改版本号"></a>修改版本号</h4><ul><li>pubspec.yaml</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">version: 1.0.0+1</span><br></pre></td></tr></table></figure><h4 id="修改程序名称"><a href="#修改程序名称" class="headerlink" title="修改程序名称"></a>修改程序名称</h4><ul><li><p>android/app/src/main/AndroidManifest.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:name</span>=<span class="string">"io.flutter.app.FlutterApplication"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:label</span>=<span class="string">"猫哥新闻"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:icon</span>=<span class="string">"@mipmap/launcher_icon"</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="设置网络权限"><a href="#设置网络权限" class="headerlink" title="设置网络权限"></a>设置网络权限</h4><ul><li><p>android/app/src/main/AndroidManifest.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.INTERNET"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="编译打包"><a href="#编译打包" class="headerlink" title="编译打包"></a>编译打包</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flutter build apk --split-per-abi</span><br></pre></td></tr></table></figure><h4 id="输出目录"><a href="#输出目录" class="headerlink" title="输出目录"></a>输出目录</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">✓ Built build/app/outputs/apk/release/app-armeabi-v7a-release.apk (7.2MB).</span><br><span class="line">✓ Built build/app/outputs/apk/release/app-arm64-v8a-release.apk (7.4MB).</span><br><span class="line">✓ Built build/app/outputs/apk/release/app-x86_64-release.apk (7.6MB).</span><br></pre></td></tr></table></figure><h4 id="混淆编译"><a href="#混淆编译" class="headerlink" title="混淆编译"></a>混淆编译</h4><p><a href="https://github.com/flutter/flutter/wiki/Obfuscating-Dart-Code" target="_blank" rel="noopener">https://github.com/flutter/flutter/wiki/Obfuscating-Dart-Code</a></p><ul><li><p>android/gradle.properties</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">extra-gen-snapshot-options=--obfuscate</span><br></pre></td></tr></table></figure></li><li><p>android/proguard-rules.pro</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#Flutter Wrapper</span><br><span class="line">-dontwarn io.flutter.**</span><br><span class="line">-keep class io.flutter.app.** &#123; *; &#125;</span><br><span class="line">-keep class io.flutter.plugin.**  &#123; *; &#125;</span><br><span class="line">-keep class io.flutter.util.**  &#123; *; &#125;</span><br><span class="line">-keep class io.flutter.view.**  &#123; *; &#125;</span><br><span class="line">-keep class io.flutter.**  &#123; *; &#125;</span><br><span class="line">-keep class io.flutter.plugins.**  &#123; *; &#125;</span><br></pre></td></tr></table></figure></li><li><p>android/app/build.gradle</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">buildTypes &#123;</span><br><span class="line">    release &#123;</span><br><span class="line">        signingConfig signingConfigs.release</span><br><span class="line"></span><br><span class="line">        minifyEnabled <span class="keyword">true</span>  <span class="comment">//资源压缩设置</span></span><br><span class="line">        useProguard <span class="keyword">true</span>    <span class="comment">//代码压缩设置</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//读取代码压缩配置文件</span></span><br><span class="line">        proguardFiles getDefaultProguardFile(<span class="string">'proguard-android.txt'</span>), <span class="string">'proguard-rules.pro'</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编译</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flutter build apk --split-per-abi</span><br></pre></td></tr></table></figure><h4 id="启动页"><a href="#启动页" class="headerlink" title="启动页"></a>启动页</h4><ul><li><p>图片<br><img src="2020-05-07-21-56-57.png" alt></p></li><li><p>android/app/src/main/res/values/colors.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">color</span> <span class="attr">name</span>=<span class="string">"cyan"</span>&gt;</span>#deecec<span class="tag">&lt;/<span class="name">color</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>android/app/src/main/res/drawable/launch_background.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Modify this file to customize your launch splash screen --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">layer-list</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:drawable</span>=<span class="string">"@color/cyan"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bitmap</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:gravity</span>=<span class="string">"center"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:src</span>=<span class="string">"@mipmap/launch_image"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">layer-list</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="4-IOS-发布"><a href="#4-IOS-发布" class="headerlink" title="4. IOS 发布"></a>4. IOS 发布</h3><h4 id="启动页-1"><a href="#启动页-1" class="headerlink" title="启动页"></a>启动页</h4><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-05-07-21-52-25.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h4 id="修改程序名称-1"><a href="#修改程序名称-1" class="headerlink" title="修改程序名称"></a>修改程序名称</h4><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-05-07-21-51-46.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h2><h3 id="视频-1"><a href="#视频-1" class="headerlink" title="视频"></a>视频</h3><ul><li><a href="https://space.bilibili.com/404904528/channel/detail?cid=106755" target="_blank" rel="noopener">b 站</a></li><li><a href="https://www.youtube.com/watch?v=Uucg6GGGBsY&amp;list=PL274L1n86T80VZR30KaLOKV6jqwTq5E8D" target="_blank" rel="noopener">油管镜像</a></li></ul><h3 id="蓝湖设计稿（加微信给授权-ducafecat）"><a href="#蓝湖设计稿（加微信给授权-ducafecat）" class="headerlink" title="蓝湖设计稿（加微信给授权 ducafecat）"></a>蓝湖设计稿（加微信给授权 ducafecat）</h3><p><a href="https://lanhuapp.com/url/lYuz1" target="_blank" rel="noopener">https://lanhuapp.com/url/lYuz1</a><br>密码: gSKl</p><blockquote><p>蓝湖现在收费了，所以查看标记还请自己上传 xd 设计稿<br>商业设计稿文件不好直接分享, 可以加微信联系 ducafecat</p></blockquote><h3 id="YAPI-接口管理"><a href="#YAPI-接口管理" class="headerlink" title="YAPI 接口管理"></a>YAPI 接口管理</h3><p><a href="http://yapi.demo.qunar.com/" target="_blank" rel="noopener">http://yapi.demo.qunar.com/</a></p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://flutter.dev/docs/deployment/android" target="_blank" rel="noopener">https://flutter.dev/docs/deployment/android</a></p><p><a href="https://flutter.dev/docs/deployment/ios" target="_blank" rel="noopener">https://flutter.dev/docs/deployment/ios</a></p><p><a href="https://flutter.dev/docs/deployment/obfuscate" target="_blank" rel="noopener">https://flutter.dev/docs/deployment/obfuscate</a></p><p><a href="https://github.com/flutter/flutter/wiki/Obfuscating-Dart-Code" target="_blank" rel="noopener">https://github.com/flutter/flutter/wiki/Obfuscating-Dart-Code</a></p><p><a href="https://pub.dev/packages/flutter_launcher_icons" target="_blank" rel="noopener">https://pub.dev/packages/flutter_launcher_icons</a></p><p><a href="https://developer.android.com/google-play/resources/icon-design-specifications" target="_blank" rel="noopener">https://developer.android.com/google-play/resources/icon-design-specifications</a></p><p><a href="https://developer.apple.com/design/human-interface-guidelines/ios/icons-and-images/app-icon/" target="_blank" rel="noopener">https://developer.apple.com/design/human-interface-guidelines/ios/icons-and-images/app-icon/</a></p><p><a href="https://developer.apple.com/design/human-interface-guidelines/ios/visual-design/adaptivity-and-layout/#device-screen-sizes-and-orientations" target="_blank" rel="noopener">https://developer.apple.com/design/human-interface-guidelines/ios/visual-design/adaptivity-and-layout/#device-screen-sizes-and-orientations</a></p><p><a href="https://developer.android.com/about/dashboards/index.html#Screens" target="_blank" rel="noopener">https://developer.android.com/about/dashboards/index.html#Screens</a></p><p><a href="https://uiiiuiii.com/screen/" target="_blank" rel="noopener">https://uiiiuiii.com/screen/</a></p><h3 id="VSCode-插件"><a href="#VSCode-插件" class="headerlink" title="VSCode 插件"></a>VSCode 插件</h3><ul><li>Flutter、Dart</li><li><a href="https://marketplace.visualstudio.com/items?itemName=alexisvt.flutter-snippets" target="_blank" rel="noopener">Flutter Widget Snippets</a></li><li><a href="https://marketplace.visualstudio.com/items?itemName=Nash.awesome-flutter-snippets" target="_blank" rel="noopener">Awesome Flutter Snippets</a></li><li><a href="https://marketplace.visualstudio.com/items?itemName=quicktype.quicktype" target="_blank" rel="noopener">Paste JSON as Code</a></li><li><a href="https://marketplace.visualstudio.com/items?itemName=FelixAngelov.bloc" target="_blank" rel="noopener">bloc</a></li><li><a href="https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker" target="_blank" rel="noopener">Code Spell Checker</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                   
      
    
    </summary>
    
      <category term="Flutter 实战从零开始" scheme="https://ducafecat.tech/categories/Flutter-%E5%AE%9E%E6%88%98%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B/"/>
    
    
      <category term="flutter" scheme="https://ducafecat.tech/tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>Flutter 实战从零开始 新闻客户端 - 09 详情页展示、分享、远程真机调试</title>
    <link href="https://ducafecat.tech/2020/04/24/flutter-project/flutter-project-news-09-webview/"/>
    <id>https://ducafecat.tech/2020/04/24/flutter-project/flutter-project-news-09-webview/</id>
    <published>2020-04-23T16:00:00.000Z</published>
    <updated>2020-07-04T06:33:27.703Z</updated>
    
    <content type="html"><![CDATA[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="bg.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>详情页技术方案比较</li><li>载入 web 内容</li><li>自动计算高度</li><li>清除广告、推荐</li><li>拦截请求</li><li>loading 状态显示</li><li>分享插件</li><li>远程 android 设备调试</li></ul><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><iframe src="//player.bilibili.com/player.html?bvid=BV18e411s7A1&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="100%" height="400px"> </iframe><iframe src="//player.bilibili.com/player.html?bvid=BV1RZ4y1W7CN&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="100%" height="400px"> </iframe><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><a href="https://github.com/ducafecat/flutter_learn_news/releases/tag/v1.0.9" target="_blank" rel="noopener">https://github.com/ducafecat/flutter_learn_news/releases/tag/v1.0.9</a></p><h2 id="详情展示"><a href="#详情展示" class="headerlink" title="详情展示"></a>详情展示</h2><h3 id="技术方案选择"><a href="#技术方案选择" class="headerlink" title="技术方案选择"></a>技术方案选择</h3><h4 id="分析工具-UI-automator-view"><a href="#分析工具-UI-automator-view" class="headerlink" title="分析工具 UI automator view"></a>分析工具 UI automator view</h4><ul><li>文件位置</li></ul><p>/Users/ducafecat/Library/Android/sdk/tools/bin/uiautomatorviewer</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-04-24-10-32-51.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h4 id="淘宝方案"><a href="#淘宝方案" class="headerlink" title="淘宝方案"></a>淘宝方案</h4><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-04-24-10-30-45.png" alt title>                </div>                <div class="image-caption"></div>            </figure><blockquote><p>混合方式</p></blockquote><h4 id="头条"><a href="#头条" class="headerlink" title="头条"></a>头条</h4><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-04-24-11-08-21.png" alt title>                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-04-24-11-09-58.png" alt title>                </div>                <div class="image-caption"></div>            </figure><blockquote><p>混合方式</p></blockquote><h4 id="什么值得买"><a href="#什么值得买" class="headerlink" title="什么值得买"></a>什么值得买</h4><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-04-24-11-14-22.png" alt title>                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-04-24-11-15-10.png" alt title>                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-04-24-11-16-16.png" alt title>                </div>                <div class="image-caption"></div>            </figure><blockquote><p>单一 webView</p></blockquote><h3 id="技术点分析"><a href="#技术点分析" class="headerlink" title="技术点分析"></a>技术点分析</h3><ul><li><ol><li>webView 原生 混合方式</li></ol></li><li><ol start="2"><li>计算 web 页面高度</li></ol></li><li><ol start="3"><li>拦截请求，自定义指令</li></ol></li><li><ol start="4"><li>内存占用（尽量少的 dom 元素）</li></ol></li></ul><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><ul><li>webview_flutter</li></ul><p><a href="https://pub.flutter-io.cn/packages/webview_flutter" target="_blank" rel="noopener">https://pub.flutter-io.cn/packages/webview_flutter</a></p><ul><li>pubspec.yaml</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">dependencies:</span></span><br><span class="line">  <span class="attr">webview_flutter:</span> <span class="string">^0.3.20+2</span></span><br></pre></td></tr></table></figure><ul><li>ios/Runner/Info.plist</li></ul><figure class="highlight plist"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>io.flutter.embedded_views_preview<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br></pre></td></tr></table></figure><h3 id="构建界面代码"><a href="#构建界面代码" class="headerlink" title="构建界面代码"></a>构建界面代码</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 顶部导航</span></span><br><span class="line">Widget _buildAppBar() &#123;</span><br><span class="line">  <span class="keyword">return</span> Container();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 页标题</span></span><br><span class="line">Widget _buildPageTitle() &#123;</span><br><span class="line">  <span class="keyword">return</span> Container();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 页头部</span></span><br><span class="line">Widget _buildPageHeader() &#123;</span><br><span class="line">  <span class="keyword">return</span> Container();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// web内容</span></span><br><span class="line">Widget _buildWebView() &#123;</span><br><span class="line">  <span class="keyword">return</span> Container();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@override</span></span><br><span class="line">Widget build(BuildContext context) &#123;</span><br><span class="line">  <span class="keyword">return</span> Scaffold(</span><br><span class="line">      appBar: _buildAppBar(),</span><br><span class="line">      body: SingleChildScrollView(</span><br><span class="line">            child: Column(</span><br><span class="line">              children: &lt;Widget&gt;[</span><br><span class="line">                _buildPageTitle(),</span><br><span class="line">                Divider(height: <span class="number">1</span>),</span><br><span class="line">                _buildPageHeader(),</span><br><span class="line">                _buildWebView(),</span><br><span class="line">              ],</span><br><span class="line">            ),</span><br><span class="line">          ),</span><br><span class="line">        );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="url-载入"><a href="#url-载入" class="headerlink" title="url 载入"></a>url 载入</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Widget _buildWebView() &#123;</span><br><span class="line">  <span class="keyword">return</span> Container(</span><br><span class="line">    height: _webViewHeight,</span><br><span class="line">    child: WebView(</span><br><span class="line">      initialUrl:</span><br><span class="line">          <span class="string">'<span class="subst">$SERVER_API_URL</span>/news/content/<span class="subst">$&#123;widget.item.id&#125;</span>'</span>, <span class="comment">//widget.url,</span></span><br><span class="line">      javascriptMode: JavascriptMode.unrestricted,</span><br><span class="line">      onWebViewCreated: (WebViewController webViewController) <span class="keyword">async</span> &#123;</span><br><span class="line">        _controller.complete(webViewController);</span><br><span class="line">      &#125;,</span><br><span class="line">      gestureNavigationEnabled: <span class="keyword">true</span>,</span><br><span class="line">    ),</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="计算高度"><a href="#计算高度" class="headerlink" title="计算高度"></a>计算高度</h3><ul><li><p>PX DP</p><ul><li><a href="https://blog.akanelee.me/2018/07/31/dpi-px-pt-dp-sp/" target="_blank" rel="noopener">https://blog.akanelee.me/2018/07/31/dpi-px-pt-dp-sp/</a></li></ul></li><li><p>设备像素密度</p><blockquote><p>一个逻辑像素占用多少个实际像素</p></blockquote><ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Window/devicePixelRatio" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/API/Window/devicePixelRatio</a></li><li><a href="https://api.flutter.dev/flutter/dart-ui/Window/devicePixelRatio.html" target="_blank" rel="noopener">https://api.flutter.dev/flutter/dart-ui/Window/devicePixelRatio.html</a></li></ul></li><li><p>注册 js</p></li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">double</span> _webViewHeight = <span class="number">200</span>;</span><br><span class="line"></span><br><span class="line">      javascriptChannels: &lt;JavascriptChannel&gt;[</span><br><span class="line">        _invokeJavascriptChannel(context),</span><br><span class="line">      ].toSet(),</span><br></pre></td></tr></table></figure><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 注册js回调</span></span><br><span class="line">JavascriptChannel _invokeJavascriptChannel(BuildContext context) &#123;</span><br><span class="line">  <span class="keyword">return</span> JavascriptChannel(</span><br><span class="line">      name: <span class="string">'Invoke'</span>,</span><br><span class="line">      onMessageReceived: (JavascriptMessage message) &#123;</span><br><span class="line">        <span class="built_in">print</span>(message.message);</span><br><span class="line">        <span class="keyword">var</span> webHeight = <span class="built_in">double</span>.parse(message.message);</span><br><span class="line">        <span class="keyword">if</span> (webHeight != <span class="keyword">null</span>) &#123;</span><br><span class="line">          setState(() &#123;</span><br><span class="line">            _webViewHeight = webHeight;</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>回调</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">onPageFinished: (<span class="built_in">String</span> url) &#123;</span><br><span class="line">  _getWebViewHeight();</span><br><span class="line">  setState(() &#123;</span><br><span class="line">    _isPageFinished = <span class="keyword">true</span>;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取页面高度</span></span><br><span class="line">_getWebViewHeight() <span class="keyword">async</span> &#123;</span><br><span class="line">  <span class="keyword">await</span> (<span class="keyword">await</span> _controller.future)?.evaluateJavascript(<span class="string">'''</span></span><br><span class="line"><span class="string">      try &#123;</span></span><br><span class="line"><span class="string">        // Invoke.postMessage([document.body.clientHeight,document.documentElement.clientHeight,document.documentElement.scrollHeight]);</span></span><br><span class="line"><span class="string">        let scrollHeight = document.documentElement.scrollHeight;</span></span><br><span class="line"><span class="string">        if (scrollHeight) &#123;</span></span><br><span class="line"><span class="string">          Invoke.postMessage(scrollHeight);</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125; catch &#123;&#125;</span></span><br><span class="line"><span class="string">      '''</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="清除广告、推荐"><a href="#清除广告、推荐" class="headerlink" title="清除广告、推荐"></a>清除广告、推荐</h3><ul><li><p><a href="https://cn.engadget.com/cn-2020-01-21-google-pixelbook-go-not-pink-available.html" target="_blank" rel="noopener">https://cn.engadget.com/cn-2020-01-21-google-pixelbook-go-not-pink-available.html</a></p></li><li><p>删除广告</p></li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">onPageStarted: (<span class="built_in">String</span> url) &#123;</span><br><span class="line">  Timer(<span class="built_in">Duration</span>(seconds: <span class="number">1</span>), () &#123;</span><br><span class="line">     setState(() &#123;</span><br><span class="line">       _isPageFinished = <span class="keyword">true</span>;</span><br><span class="line">     &#125;);</span><br><span class="line">   _removeAd();</span><br><span class="line">   _getViewHeight();</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">_removeWebViewAd() <span class="keyword">async</span> &#123;</span><br><span class="line">  <span class="keyword">await</span> (<span class="keyword">await</span> _controller.future)?.evaluateJavascript(<span class="string">'''</span></span><br><span class="line"><span class="string">      try &#123;</span></span><br><span class="line"><span class="string">        function removeElement(elementName)&#123;</span></span><br><span class="line"><span class="string">          let _element = document.getElementById(elementName);</span></span><br><span class="line"><span class="string">          if(!_element) &#123;</span></span><br><span class="line"><span class="string">            _element = document.querySelector(elementName);</span></span><br><span class="line"><span class="string">          &#125;</span></span><br><span class="line"><span class="string">          if(!_element) &#123;</span></span><br><span class="line"><span class="string">            return;</span></span><br><span class="line"><span class="string">          &#125;</span></span><br><span class="line"><span class="string">          let _parentElement = _element.parentNode;</span></span><br><span class="line"><span class="string">          if(_parentElement)&#123;</span></span><br><span class="line"><span class="string">              _parentElement.removeChild(_element);</span></span><br><span class="line"><span class="string">          &#125;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        removeElement('module-engadget-deeplink-top-ad');</span></span><br><span class="line"><span class="string">        removeElement('module-engadget-deeplink-streams');</span></span><br><span class="line"><span class="string">        removeElement('footer');</span></span><br><span class="line"><span class="string">      &#125; catch&#123;&#125;</span></span><br><span class="line"><span class="string">      '''</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="拦截请求"><a href="#拦截请求" class="headerlink" title="拦截请求"></a>拦截请求</h3><ul><li>页面中 href</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tags"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/tag/chrome-os"</span> <span class="attr">class</span>=<span class="string">"tag"</span>&gt;</span>chrome os<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/tag/chromebook"</span> <span class="attr">class</span>=<span class="string">"tag"</span>&gt;</span>chromebook<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/tag/computer"</span> <span class="attr">class</span>=<span class="string">"tag"</span>&gt;</span>computer<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/tag/gear"</span> <span class="attr">class</span>=<span class="string">"tag"</span>&gt;</span>gear<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/tag/google"</span> <span class="attr">class</span>=<span class="string">"tag"</span>&gt;</span>google<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/tag/laptop"</span> <span class="attr">class</span>=<span class="string">"tag"</span>&gt;</span>laptop<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/tag/personal computing"</span> <span class="attr">class</span>=<span class="string">"tag"</span>&gt;</span>personal computing<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/tag/personalcomputing"</span> <span class="attr">class</span>=<span class="string">"tag"</span>&gt;</span>personalcomputing<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/tag/pixelbook-go"</span> <span class="attr">class</span>=<span class="string">"tag"</span>&gt;</span>pixelbook go<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>navigation 拦截</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">navigationDelegate: (NavigationRequest request) &#123;</span><br><span class="line">  <span class="keyword">if</span> (request.url != <span class="string">'<span class="subst">$SERVER_API_URL</span>/news/content/<span class="subst">$&#123;widget.item.id&#125;</span>'</span>) &#123;</span><br><span class="line">    toastInfo(msg: request.url);</span><br><span class="line">    <span class="keyword">return</span> NavigationDecision.prevent;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> NavigationDecision.navigate;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h3 id="loading-状态显示"><a href="#loading-状态显示" class="headerlink" title="loading 状态显示"></a>loading 状态显示</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">bool</span> _isPageFinished = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@override</span></span><br><span class="line">Widget build(BuildContext context) &#123;</span><br><span class="line">  <span class="keyword">return</span> Scaffold(</span><br><span class="line">      appBar: _buildAppBar(),</span><br><span class="line">      body: Stack(</span><br><span class="line">        children: &lt;Widget&gt;[</span><br><span class="line">          SingleChildScrollView(</span><br><span class="line">            child: Column(</span><br><span class="line">              children: &lt;Widget&gt;[</span><br><span class="line">                _buildPageTitle(),</span><br><span class="line">                Divider(height: <span class="number">1</span>),</span><br><span class="line">                _buildPageHeader(),</span><br><span class="line">                _buildWebView(),</span><br><span class="line">              ],</span><br><span class="line">            ),</span><br><span class="line">          ),</span><br><span class="line">          _isPageFinished == <span class="keyword">true</span></span><br><span class="line">              ? Container()</span><br><span class="line">              : Align(</span><br><span class="line">                  alignment: Alignment.center,</span><br><span class="line">                  child: LoadingBouncingGrid.square(),</span><br><span class="line">                ),</span><br><span class="line">        ],</span><br><span class="line">      ));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="分享"><a href="#分享" class="headerlink" title="分享"></a>分享</h2><h3 id="安装插件-1"><a href="#安装插件-1" class="headerlink" title="安装插件"></a>安装插件</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">dependencies:</span></span><br><span class="line">  <span class="attr">share:</span> <span class="string">^0.6.4</span></span><br></pre></td></tr></table></figure><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">onPressed: () &#123;</span><br><span class="line">  Share.share(<span class="string">'<span class="subst">$&#123;widget.item.title&#125;</span> <span class="subst">$&#123;widget.item.url&#125;</span>'</span>);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h3 id="真机调试"><a href="#真机调试" class="headerlink" title="真机调试"></a>真机调试</h3><ul><li>scrcpy</li></ul><p><a href="https://github.com/Genymobile/scrcpy" target="_blank" rel="noopener">https://github.com/Genymobile/scrcpy</a></p><h2 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h2><h3 id="视频-1"><a href="#视频-1" class="headerlink" title="视频"></a>视频</h3><ul><li><a href="https://space.bilibili.com/404904528/channel/detail?cid=106755" target="_blank" rel="noopener">b 站</a></li><li><a href="https://www.youtube.com/watch?v=Uucg6GGGBsY&amp;list=PL274L1n86T80VZR30KaLOKV6jqwTq5E8D" target="_blank" rel="noopener">油管镜像</a></li></ul><h3 id="蓝湖设计稿（加微信给授权-ducafecat）"><a href="#蓝湖设计稿（加微信给授权-ducafecat）" class="headerlink" title="蓝湖设计稿（加微信给授权 ducafecat）"></a>蓝湖设计稿（加微信给授权 ducafecat）</h3><p><a href="https://lanhuapp.com/url/lYuz1" target="_blank" rel="noopener">https://lanhuapp.com/url/lYuz1</a><br>密码: gSKl</p><blockquote><p>蓝湖现在收费了，所以查看标记还请自己上传 xd 设计稿<br>商业设计稿文件不好直接分享, 可以加微信联系 ducafecat</p></blockquote><h3 id="YAPI-接口管理"><a href="#YAPI-接口管理" class="headerlink" title="YAPI 接口管理"></a>YAPI 接口管理</h3><p><a href="http://yapi.demo.qunar.com/" target="_blank" rel="noopener">http://yapi.demo.qunar.com/</a></p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://pub.flutter-io.cn/packages/webview_flutter" target="_blank" rel="noopener">https://pub.flutter-io.cn/packages/webview_flutter</a><br><a href="https://pub.flutter-io.cn/packages/loading_animations" target="_blank" rel="noopener">https://pub.flutter-io.cn/packages/loading_animations</a><br><a href="https://pub.flutter-io.cn/packages/share" target="_blank" rel="noopener">https://pub.flutter-io.cn/packages/share</a><br><a href="https://github.com/Genymobile/scrcpy" target="_blank" rel="noopener">https://github.com/Genymobile/scrcpy</a></p><h3 id="VSCode-插件"><a href="#VSCode-插件" class="headerlink" title="VSCode 插件"></a>VSCode 插件</h3><ul><li>Flutter、Dart</li><li><a href="https://marketplace.visualstudio.com/items?itemName=alexisvt.flutter-snippets" target="_blank" rel="noopener">Flutter Widget Snippets</a></li><li><a href="https://marketplace.visualstudio.com/items?itemName=Nash.awesome-flutter-snippets" target="_blank" rel="noopener">Awesome Flutter Snippets</a></li><li><a href="https://marketplace.visualstudio.com/items?itemName=quicktype.quicktype" target="_blank" rel="noopener">Paste JSON as Code</a></li><li><a href="https://marketplace.visualstudio.com/items?itemName=FelixAngelov.bloc" target="_blank" rel="noopener">bloc</a></li><li><a href="https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker" target="_blank" rel="noopener">Code Spell Checker</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                   
      
    
    </summary>
    
      <category term="Flutter 实战从零开始" scheme="https://ducafecat.tech/categories/Flutter-%E5%AE%9E%E6%88%98%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B/"/>
    
    
      <category term="flutter" scheme="https://ducafecat.tech/tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>Flutter 实战从零开始 新闻客户端 - 08 路由管理 auto_route</title>
    <link href="https://ducafecat.tech/2020/04/17/flutter-project/flutter-project-news-08-auto-route/"/>
    <id>https://ducafecat.tech/2020/04/17/flutter-project/flutter-project-news-08-auto-route/</id>
    <published>2020-04-16T16:00:00.000Z</published>
    <updated>2020-07-04T06:33:27.703Z</updated>
    
    <content type="html"><![CDATA[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="bg.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>安装插件</li><li>路由定义</li><li>自动生成路由控制类</li><li>转场动画</li><li>登录检查中间件</li><li>带参数传递</li><li>获取返回值</li></ul><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><iframe src="//player.bilibili.com/player.html?bvid=BV1xf4y1S7Xq&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="100%" height="400px"> </iframe><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><a href="https://github.com/ducafecat/flutter_learn_news/releases/tag/v1.0.8" target="_blank" rel="noopener">https://github.com/ducafecat/flutter_learn_news/releases/tag/v1.0.8</a></p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="一些优秀的路由插件"><a href="#一些优秀的路由插件" class="headerlink" title="一些优秀的路由插件"></a>一些优秀的路由插件</h3><ul><li><p><a href="https://pub.flutter-io.cn/packages/fluro" target="_blank" rel="noopener">fluro</a></p><p>前端的使用体验</p><p>router.navigateTo(context, “/users/1234”, transition: TransitionType.fadeIn);</p></li><li><p><a href="https://pub.flutter-io.cn/packages/flutter_modular" target="_blank" rel="noopener">flutter_modular</a></p><p>功能强大的路由管理：中间件、懒加载、状态管理、动态路由、分组路由、动画、返回值、命名路由</p></li><li><p><a href="https://pub.flutter-io.cn/packages/auto_route" target="_blank" rel="noopener">auto_route</a></p><p>设计精简、低耦合其它功能</p><p>功能：中间件、自动生成路由代码、动态路由、动画、返回值、命名路由</p></li></ul><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><ul><li>官网</li></ul><p><a href="https://pub.flutter-io.cn/packages/auto_route" target="_blank" rel="noopener">https://pub.flutter-io.cn/packages/auto_route</a></p><ul><li>pubspec.yaml</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">dependencies:</span></span><br><span class="line">  <span class="attr">flutter:</span></span><br><span class="line">    <span class="attr">sdk:</span> <span class="string">flutter</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 路由管理</span></span><br><span class="line">  <span class="attr">auto_route:</span> <span class="string">^0.4.4</span></span><br><span class="line"></span><br><span class="line"><span class="attr">dev_dependencies:</span></span><br><span class="line">  <span class="attr">flutter_test:</span></span><br><span class="line">    <span class="attr">sdk:</span> <span class="string">flutter</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 路由生成</span></span><br><span class="line">  <span class="attr">auto_route_generator:</span> <span class="string">^0.4.4</span></span><br><span class="line">  <span class="attr">build_runner:</span></span><br></pre></td></tr></table></figure><h3 id="路由定义"><a href="#路由定义" class="headerlink" title="路由定义"></a>路由定义</h3><ul><li>lib/common/router/router.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@MaterialAutoRouter</span>()</span><br><span class="line"><span class="class"><span class="keyword">class</span> $<span class="title">AppRouter</span> </span>&#123;</span><br><span class="line">  <span class="meta">@initial</span></span><br><span class="line">  IndexPage indexPageRoute;</span><br><span class="line"></span><br><span class="line">  WelcomePage welcomePageRoute;</span><br><span class="line"></span><br><span class="line">  SignInPage signInPageRoute;</span><br><span class="line"></span><br><span class="line">  SignUpPage signUpPageRoute;</span><br><span class="line"></span><br><span class="line">  ApplicationPage applicationPageRoute;</span><br><span class="line"></span><br><span class="line">  DetailsPage detailsPageRoute;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意 <code>$</code> 符号</p></blockquote><h3 id="自动生成路由控制类"><a href="#自动生成路由控制类" class="headerlink" title="自动生成路由控制类"></a>自动生成路由控制类</h3><ul><li>执行命令</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flutter packages pub run build_runner build</span><br></pre></td></tr></table></figure><ul><li>自动生成 lib/common/router/router.gr.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// GENERATED CODE - DO NOT MODIFY BY HAND</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// **************************************************************************</span></span><br><span class="line"><span class="comment">// AutoRouteGenerator</span></span><br><span class="line"><span class="comment">// **************************************************************************</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/cupertino.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:auto_route/auto_route.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/pages/index/index.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/pages/welcome/welcome.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/pages/sign_in/sign_in.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/pages/sign_up/sign_up.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/pages/application/application.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/common/router/auth_grard.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/pages/details/details.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Routes</span> </span>&#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">const</span> indexPageRoute = <span class="string">'/'</span>;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">const</span> welcomePageRoute = <span class="string">'/welcome-page-route'</span>;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">const</span> signInPageRoute = <span class="string">'/sign-in-page-route'</span>;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">const</span> signUpPageRoute = <span class="string">'/sign-up-page-route'</span>;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">const</span> applicationPageRoute = <span class="string">'/application-page-route'</span>;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">const</span> detailsPageRoute = <span class="string">'/details-page-route'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AppRouter</span> <span class="keyword">extends</span> <span class="title">RouterBase</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">List</span>&lt;<span class="built_in">Type</span>&gt;&gt; <span class="keyword">get</span> guardedRoutes =&gt; &#123;</span><br><span class="line">        Routes.applicationPageRoute: [AuthGuard],</span><br><span class="line">        Routes.detailsPageRoute: [AuthGuard],</span><br><span class="line">      &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//This will probably be removed in future versions</span></span><br><span class="line">  <span class="comment">//you should call ExtendedNavigator.ofRouter&lt;Router&gt;() directly</span></span><br><span class="line">  <span class="keyword">static</span> ExtendedNavigatorState <span class="keyword">get</span> navigator =&gt;</span><br><span class="line">      ExtendedNavigator.ofRouter&lt;AppRouter&gt;();</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Route&lt;<span class="built_in">dynamic</span>&gt; onGenerateRoute(RouteSettings settings) &#123;</span><br><span class="line">    <span class="keyword">final</span> args = settings.arguments;</span><br><span class="line">    <span class="keyword">switch</span> (settings.name) &#123;</span><br><span class="line">      <span class="keyword">case</span> Routes.indexPageRoute:</span><br><span class="line">        <span class="keyword">if</span> (hasInvalidArgs&lt;IndexPageArguments&gt;(args)) &#123;</span><br><span class="line">          <span class="keyword">return</span> misTypedArgsRoute&lt;IndexPageArguments&gt;(args);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">final</span> typedArgs = args <span class="keyword">as</span> IndexPageArguments ?? IndexPageArguments();</span><br><span class="line">        <span class="keyword">return</span> MaterialPageRoute&lt;<span class="built_in">dynamic</span>&gt;(</span><br><span class="line">          builder: (_) =&gt; IndexPage(key: typedArgs.key),</span><br><span class="line">          settings: settings,</span><br><span class="line">        );</span><br><span class="line">      <span class="keyword">case</span> Routes.welcomePageRoute:</span><br><span class="line">        <span class="keyword">if</span> (hasInvalidArgs&lt;WelcomePageArguments&gt;(args)) &#123;</span><br><span class="line">          <span class="keyword">return</span> misTypedArgsRoute&lt;WelcomePageArguments&gt;(args);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">final</span> typedArgs =</span><br><span class="line">            args <span class="keyword">as</span> WelcomePageArguments ?? WelcomePageArguments();</span><br><span class="line">        <span class="keyword">return</span> MaterialPageRoute&lt;<span class="built_in">dynamic</span>&gt;(</span><br><span class="line">          builder: (_) =&gt; WelcomePage(key: typedArgs.key),</span><br><span class="line">          settings: settings,</span><br><span class="line">        );</span><br><span class="line">      <span class="keyword">case</span> Routes.signInPageRoute:</span><br><span class="line">        <span class="keyword">if</span> (hasInvalidArgs&lt;SignInPageArguments&gt;(args)) &#123;</span><br><span class="line">          <span class="keyword">return</span> misTypedArgsRoute&lt;SignInPageArguments&gt;(args);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">final</span> typedArgs = args <span class="keyword">as</span> SignInPageArguments ?? SignInPageArguments();</span><br><span class="line">        <span class="keyword">return</span> MaterialPageRoute&lt;<span class="built_in">dynamic</span>&gt;(</span><br><span class="line">          builder: (_) =&gt; SignInPage(key: typedArgs.key),</span><br><span class="line">          settings: settings,</span><br><span class="line">        );</span><br><span class="line">      <span class="keyword">case</span> Routes.signUpPageRoute:</span><br><span class="line">        <span class="keyword">if</span> (hasInvalidArgs&lt;SignUpPageArguments&gt;(args)) &#123;</span><br><span class="line">          <span class="keyword">return</span> misTypedArgsRoute&lt;SignUpPageArguments&gt;(args);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">final</span> typedArgs = args <span class="keyword">as</span> SignUpPageArguments ?? SignUpPageArguments();</span><br><span class="line">        <span class="keyword">return</span> MaterialPageRoute&lt;<span class="built_in">dynamic</span>&gt;(</span><br><span class="line">          builder: (_) =&gt; SignUpPage(key: typedArgs.key),</span><br><span class="line">          settings: settings,</span><br><span class="line">        );</span><br><span class="line">      <span class="keyword">case</span> Routes.applicationPageRoute:</span><br><span class="line">        <span class="keyword">if</span> (hasInvalidArgs&lt;ApplicationPageArguments&gt;(args)) &#123;</span><br><span class="line">          <span class="keyword">return</span> misTypedArgsRoute&lt;ApplicationPageArguments&gt;(args);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">final</span> typedArgs =</span><br><span class="line">            args <span class="keyword">as</span> ApplicationPageArguments ?? ApplicationPageArguments();</span><br><span class="line">        <span class="keyword">return</span> MaterialPageRoute&lt;<span class="built_in">dynamic</span>&gt;(</span><br><span class="line">          builder: (_) =&gt; ApplicationPage(key: typedArgs.key),</span><br><span class="line">          settings: settings,</span><br><span class="line">        );</span><br><span class="line">      <span class="keyword">case</span> Routes.detailsPageRoute:</span><br><span class="line">        <span class="keyword">if</span> (hasInvalidArgs&lt;DetailsPageArguments&gt;(args)) &#123;</span><br><span class="line">          <span class="keyword">return</span> misTypedArgsRoute&lt;DetailsPageArguments&gt;(args);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">final</span> typedArgs =</span><br><span class="line">            args <span class="keyword">as</span> DetailsPageArguments ?? DetailsPageArguments();</span><br><span class="line">        <span class="keyword">return</span> MaterialPageRoute&lt;<span class="built_in">dynamic</span>&gt;(</span><br><span class="line">          builder: (_) =&gt; DetailsPage(key: typedArgs.key),</span><br><span class="line">          settings: settings,</span><br><span class="line">        );</span><br><span class="line">      <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">return</span> unknownRoutePage(settings.name);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//**************************************************************************</span></span><br><span class="line"><span class="comment">// Arguments holder classes</span></span><br><span class="line"><span class="comment">//***************************************************************************</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//IndexPage arguments holder class</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IndexPageArguments</span> </span>&#123;</span><br><span class="line">  <span class="keyword">final</span> Key key;</span><br><span class="line">  IndexPageArguments(&#123;<span class="keyword">this</span>.key&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//WelcomePage arguments holder class</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WelcomePageArguments</span> </span>&#123;</span><br><span class="line">  <span class="keyword">final</span> Key key;</span><br><span class="line">  WelcomePageArguments(&#123;<span class="keyword">this</span>.key&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//SignInPage arguments holder class</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SignInPageArguments</span> </span>&#123;</span><br><span class="line">  <span class="keyword">final</span> Key key;</span><br><span class="line">  SignInPageArguments(&#123;<span class="keyword">this</span>.key&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//SignUpPage arguments holder class</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SignUpPageArguments</span> </span>&#123;</span><br><span class="line">  <span class="keyword">final</span> Key key;</span><br><span class="line">  SignUpPageArguments(&#123;<span class="keyword">this</span>.key&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//ApplicationPage arguments holder class</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ApplicationPageArguments</span> </span>&#123;</span><br><span class="line">  <span class="keyword">final</span> Key key;</span><br><span class="line">  ApplicationPageArguments(&#123;<span class="keyword">this</span>.key&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//DetailsPage arguments holder class</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DetailsPageArguments</span> </span>&#123;</span><br><span class="line">  <span class="keyword">final</span> Key key;</span><br><span class="line">  DetailsPageArguments(&#123;<span class="keyword">this</span>.key&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="路由跳转"><a href="#路由跳转" class="headerlink" title="路由跳转"></a>路由跳转</h3><ul><li>方式 1：带 context 方式</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ExtendedNavigator.of(context).pushNamed(Routes.signUpPageRoute);</span><br></pre></td></tr></table></figure><ul><li>方式 2：不带 context 方式</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ExtendedNavigator.ofRouter&lt;AppRouter&gt;().pushNamed(Routes.signUpPageRoute);</span><br></pre></td></tr></table></figure><ul><li>方式 3：如果你只有一个导航</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ExtenedNavigator.rootNavigator.pushNamed(Routes.signUpPageRoute);</span><br></pre></td></tr></table></figure><h3 id="转场动画"><a href="#转场动画" class="headerlink" title="转场动画"></a>转场动画</h3><ul><li>lib/common/router/router.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Widget zoomInTransition(BuildContext context, Animation&lt;<span class="built_in">double</span>&gt; animation,</span><br><span class="line">    Animation&lt;<span class="built_in">double</span>&gt; secondaryAnimation, Widget child) &#123;</span><br><span class="line">  <span class="comment">// you get an animation object and a widget</span></span><br><span class="line">  <span class="comment">// make your own transition</span></span><br><span class="line">  <span class="keyword">return</span> ScaleTransition(scale: animation, child: child);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@MaterialAutoRouter</span>()</span><br><span class="line"><span class="class"><span class="keyword">class</span> $<span class="title">AppRouter</span> </span>&#123;</span><br><span class="line">  ...</span><br><span class="line"></span><br><span class="line">  <span class="meta">@CustomRoute</span>(transitionsBuilder: zoomInTransition)</span><br><span class="line">  ApplicationPage applicationPageRoute;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>重新生成</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flutter packages pub run build_runner build</span><br></pre></td></tr></table></figure><h3 id="登录检查中间件"><a href="#登录检查中间件" class="headerlink" title="登录检查中间件"></a>登录检查中间件</h3><ul><li>创建 lib/common/router/auth_grard.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:auto_route/auto_route.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/common/router/router.gr.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/common/utils/utils.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AuthGuard</span> <span class="keyword">extends</span> <span class="title">RouteGuard</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Future&lt;<span class="built_in">bool</span>&gt; canNavigate(ExtendedNavigatorState navigator, <span class="built_in">String</span> routeName,</span><br><span class="line">      <span class="built_in">Object</span> arguments) <span class="keyword">async</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> isAuth = <span class="keyword">await</span> isAuthenticated();</span><br><span class="line">    <span class="keyword">if</span> (isAuth == <span class="keyword">false</span>) &#123;</span><br><span class="line">      ExtendedNavigator.rootNavigator.pushNamed(Routes.signInPageRoute);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> isAuth;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>注册 lib/main.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line">      title: <span class="string">'ducafecat.tech'</span>,</span><br><span class="line">      debugShowCheckedModeBanner: <span class="keyword">false</span>,</span><br><span class="line">      builder: ExtendedNavigator&lt;AppRouter&gt;(</span><br><span class="line">        initialRoute: Routes.indexPageRoute,</span><br><span class="line">        router: AppRouter(),</span><br><span class="line">        guards: [AuthGuard()],</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>定义 lib/common/router/router.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@MaterialAutoRouter</span>()</span><br><span class="line"><span class="class"><span class="keyword">class</span> $<span class="title">AppRouter</span> </span>&#123;</span><br><span class="line">  ...</span><br><span class="line"></span><br><span class="line">  <span class="meta">@GuardedBy</span>([AuthGuard])</span><br><span class="line">  <span class="meta">@CustomRoute</span>(transitionsBuilder: zoomInTransition)</span><br><span class="line">  ApplicationPage applicationPageRoute;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>重新生成</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flutter packages pub run build_runner build</span><br></pre></td></tr></table></figure><h2 id="参数传递"><a href="#参数传递" class="headerlink" title="参数传递"></a>参数传递</h2><ul><li>设定初始参数 lib/pages/details/details.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DetailsPage</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span> </span>&#123;</span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String</span> cid;</span><br><span class="line">  DetailsPage(&#123;Key key, <span class="keyword">this</span>.cid&#125;) : <span class="keyword">super</span>(key: key);</span><br></pre></td></tr></table></figure><ul><li>定义 lib/common/router/router.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@MaterialAutoRouter</span>(generateNavigationHelperExtension: <span class="keyword">true</span>)</span><br><span class="line"><span class="class"><span class="keyword">class</span> $<span class="title">AppRouter</span> </span>&#123;</span><br><span class="line">  ...</span><br></pre></td></tr></table></figure><ul><li>重新生成</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flutter packages pub run build_runner build</span><br></pre></td></tr></table></figure><ul><li>lib/common/router/router.gr.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//DetailsPage arguments holder class</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DetailsPageArguments</span> </span>&#123;</span><br><span class="line">  <span class="keyword">final</span> Key key;</span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String</span> cid;</span><br><span class="line">  DetailsPageArguments(&#123;<span class="keyword">this</span>.key, <span class="keyword">this</span>.cid&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>导航参数</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ExtendedNavigator.rootNavigator.pushDetailsPageRoute(cid: <span class="string">'123'</span>);</span><br></pre></td></tr></table></figure><ul><li>获取返回值</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ExtendedNavigator.rootNavigator</span><br><span class="line">    .pushNamed(Routes.signUpPageRoute)</span><br><span class="line">    .then((onValue) &#123;</span><br><span class="line">  <span class="built_in">print</span>(onValue);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h2><h3 id="视频-1"><a href="#视频-1" class="headerlink" title="视频"></a>视频</h3><ul><li><a href="https://space.bilibili.com/404904528/channel/detail?cid=106755" target="_blank" rel="noopener">b 站</a></li><li><a href="https://www.youtube.com/watch?v=Uucg6GGGBsY&amp;list=PL274L1n86T80VZR30KaLOKV6jqwTq5E8D" target="_blank" rel="noopener">油管镜像</a></li></ul><h3 id="蓝湖设计稿（加微信给授权-ducafecat）"><a href="#蓝湖设计稿（加微信给授权-ducafecat）" class="headerlink" title="蓝湖设计稿（加微信给授权 ducafecat）"></a>蓝湖设计稿（加微信给授权 ducafecat）</h3><p><a href="https://lanhuapp.com/url/lYuz1" target="_blank" rel="noopener">https://lanhuapp.com/url/lYuz1</a><br>密码: gSKl</p><blockquote><p>蓝湖现在收费了，所以查看标记还请自己上传 xd 设计稿<br>商业设计稿文件不好直接分享, 可以加微信联系 ducafecat</p></blockquote><h3 id="YAPI-接口管理"><a href="#YAPI-接口管理" class="headerlink" title="YAPI 接口管理"></a>YAPI 接口管理</h3><p><a href="http://yapi.demo.qunar.com/" target="_blank" rel="noopener">http://yapi.demo.qunar.com/</a></p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://pub.flutter-io.cn/packages/auto_route" target="_blank" rel="noopener">https://pub.flutter-io.cn/packages/auto_route</a></p><h3 id="VSCode-插件"><a href="#VSCode-插件" class="headerlink" title="VSCode 插件"></a>VSCode 插件</h3><ul><li>Flutter、Dart</li><li><a href="https://marketplace.visualstudio.com/items?itemName=alexisvt.flutter-snippets" target="_blank" rel="noopener">Flutter Widget Snippets</a></li><li><a href="https://marketplace.visualstudio.com/items?itemName=Nash.awesome-flutter-snippets" target="_blank" rel="noopener">Awesome Flutter Snippets</a></li><li><a href="https://marketplace.visualstudio.com/items?itemName=quicktype.quicktype" target="_blank" rel="noopener">Paste JSON as Code</a></li><li><a href="https://marketplace.visualstudio.com/items?itemName=FelixAngelov.bloc" target="_blank" rel="noopener">bloc</a></li><li><a href="https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker" target="_blank" rel="noopener">Code Spell Checker</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                   
      
    
    </summary>
    
      <category term="Flutter 实战从零开始" scheme="https://ducafecat.tech/categories/Flutter-%E5%AE%9E%E6%88%98%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B/"/>
    
    
      <category term="flutter" scheme="https://ducafecat.tech/tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>Flutter 实战从零开始 新闻客户端 - 07 Provider、认证授权、骨架屏、磁盘缓存</title>
    <link href="https://ducafecat.tech/2020/04/08/flutter-project/flutter-project-news-07-provider/"/>
    <id>https://ducafecat.tech/2020/04/08/flutter-project/flutter-project-news-07-provider/</id>
    <published>2020-04-07T16:00:00.000Z</published>
    <updated>2020-07-04T06:29:29.891Z</updated>
    
    <content type="html"><![CDATA[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="bg.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h2><ul><li>第一次登录显示欢迎界面</li><li>离线登录</li><li>Provider 响应数据管理</li><li>实现 APP 色彩灰度处理</li><li>注销登录</li><li>Http Status 401 认证授权</li><li>首页磁盘缓存</li><li>首页缓存策略，延迟 1~3 秒</li><li>首页骨架屏</li></ul><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><iframe src="//player.bilibili.com/player.html?bvid=BV1vV411o7bn&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="100%" height="400px"> </iframe><iframe src="//player.bilibili.com/player.html?bvid=BV1SA411t7ov&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="100%" height="400px"> </iframe><iframe src="//player.bilibili.com/player.html?bvid=BV1jt4y1U7Nn&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="100%" height="400px"> </iframe><iframe src="//player.bilibili.com/player.html?bvid=BV1wt4y127L5&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="100%" height="400px"> </iframe><iframe src="//player.bilibili.com/player.html?bvid=BV1b54y1d7DB&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="100%" height="400px"> </iframe><iframe src="//player.bilibili.com/player.html?bvid=BV11z411b7FJ&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="100%" height="400px"> </iframe><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><a href="https://github.com/ducafecat/flutter_learn_news/releases/tag/v1.0.7" target="_blank" rel="noopener">https://github.com/ducafecat/flutter_learn_news/releases/tag/v1.0.7</a></p><h2 id="视频-1"><a href="#视频-1" class="headerlink" title="视频"></a>视频</h2><ul><li><a href="https://space.bilibili.com/404904528/channel/detail?cid=106755" target="_blank" rel="noopener">b 站</a></li><li><a href="https://www.youtube.com/watch?v=Uucg6GGGBsY&amp;list=PL274L1n86T80VZR30KaLOKV6jqwTq5E8D" target="_blank" rel="noopener">油管镜像</a></li></ul><h2 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h2><ul><li><p>蓝湖设计稿（加微信给授权 ducafecat）<br><a href="https://lanhuapp.com/url/wbhGq" target="_blank" rel="noopener">https://lanhuapp.com/url/wbhGq</a></p></li><li><p>YAPI 接口管理<br><a href="http://yapi.demo.qunar.com/" target="_blank" rel="noopener">http://yapi.demo.qunar.com/</a></p></li><li><p>代码<br><a href="https://github.com/ducafecat/flutter_learn_news/releases/tag/v1.0.7" target="_blank" rel="noopener">https://github.com/ducafecat/flutter_learn_news/releases/tag/v1.0.7</a></p></li><li><p>参考</p><ul><li><a href="https://pub.flutter-io.cn/packages/provider" target="_blank" rel="noopener">provider</a></li><li><a href="https://pub.flutter-io.cn/packages/pk_skeleton" target="_blank" rel="noopener">pk_skeleton</a></li></ul></li></ul><h2 id="第一次显示欢迎界面、离线登录"><a href="#第一次显示欢迎界面、离线登录" class="headerlink" title="第一次显示欢迎界面、离线登录"></a>第一次显示欢迎界面、离线登录</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-04-08-22-08-21.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>lib/global.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// <span class="markdown">是否第一次打开</span></span></span><br><span class="line"><span class="keyword">static</span> <span class="built_in">bool</span> isFirstOpen = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// <span class="markdown">是否离线登录</span></span></span><br><span class="line"><span class="keyword">static</span> <span class="built_in">bool</span> isOfflineLogin = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// <span class="markdown">init</span></span></span><br><span class="line"><span class="keyword">static</span> Future init() <span class="keyword">async</span> &#123;</span><br><span class="line">  ...</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 读取设备第一次打开</span></span><br><span class="line">  isFirstOpen = !StorageUtil().getBool(STORAGE_DEVICE_ALREADY_OPEN_KEY);</span><br><span class="line">  <span class="keyword">if</span> (isFirstOpen) &#123;</span><br><span class="line">    StorageUtil().setBool(STORAGE_DEVICE_ALREADY_OPEN_KEY, <span class="keyword">true</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 读取离线用户信息</span></span><br><span class="line">  <span class="keyword">var</span> _profileJSON = StorageUtil().getJSON(STORAGE_USER_PROFILE_KEY);</span><br><span class="line">  <span class="keyword">if</span> (_profileJSON != <span class="keyword">null</span>) &#123;</span><br><span class="line">    profile = UserLoginResponseEntity.fromJson(_profileJSON);</span><br><span class="line">    isOfflineLogin = <span class="keyword">true</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><ul><li>lib/pages/index/index.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IndexPage</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span> </span>&#123;</span><br><span class="line">  IndexPage(&#123;Key key&#125;) : <span class="keyword">super</span>(key: key);</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  _IndexPageState createState() =&gt; _IndexPageState();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_IndexPageState</span> <span class="keyword">extends</span> <span class="title">State</span>&lt;<span class="title">IndexPage</span>&gt; </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    ScreenUtil.init(</span><br><span class="line">      context,</span><br><span class="line">      width: <span class="number">375</span>,</span><br><span class="line">      height: <span class="number">812</span> - <span class="number">44</span> - <span class="number">34</span>,</span><br><span class="line">      allowFontScaling: <span class="keyword">true</span>,</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> Scaffold(</span><br><span class="line">      body: Global.isFirstOpen == <span class="keyword">true</span></span><br><span class="line">          ? WelcomePage()</span><br><span class="line">          : Global.isOfflineLogin == <span class="keyword">true</span> ? ApplicationPage() : SignInPage(),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Provider-实现动态灰度处理"><a href="#Provider-实现动态灰度处理" class="headerlink" title="Provider 实现动态灰度处理"></a>Provider 实现动态灰度处理</h2><p><a href="https://pub.flutter-io.cn/packages/provider" target="_blank" rel="noopener">https://pub.flutter-io.cn/packages/provider</a></p><h3 id="步骤-1：安装依赖"><a href="#步骤-1：安装依赖" class="headerlink" title="步骤 1：安装依赖"></a>步骤 1：安装依赖</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">dependencies:</span></span><br><span class="line">  <span class="attr">provider:</span> <span class="string">^4.0.4</span></span><br></pre></td></tr></table></figure><h3 id="步骤-2：创建响应数据类"><a href="#步骤-2：创建响应数据类" class="headerlink" title="步骤 2：创建响应数据类"></a>步骤 2：创建响应数据类</h3><ul><li>lib/common/provider/app.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// <span class="markdown">系统相应状态</span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AppState</span> <span class="title">with</span> <span class="title">ChangeNotifier</span> </span>&#123;</span><br><span class="line">  <span class="built_in">bool</span> _isGrayFilter;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">get</span> isGrayFilter =&gt; _isGrayFilter;</span><br><span class="line"></span><br><span class="line">  AppState(&#123;<span class="built_in">bool</span> isGrayFilter = <span class="keyword">false</span>&#125;) &#123;</span><br><span class="line">    <span class="keyword">this</span>._isGrayFilter = isGrayFilter;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="步骤-3：初始响应数据"><a href="#步骤-3：初始响应数据" class="headerlink" title="步骤 3：初始响应数据"></a>步骤 3：初始响应数据</h3><h4 id="方式一：先创建数据对象，再挂载"><a href="#方式一：先创建数据对象，再挂载" class="headerlink" title="方式一：先创建数据对象，再挂载"></a>方式一：先创建数据对象，再挂载</h4><ul><li>lib/global.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// <span class="markdown">应用状态</span></span></span><br><span class="line"><span class="keyword">static</span> AppState appState = AppState();</span><br></pre></td></tr></table></figure><ul><li>lib/main.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> main() =&gt; Global.init().then((e) =&gt; runApp(</span><br><span class="line">      MultiProvider(</span><br><span class="line">        providers: [</span><br><span class="line">          ChangeNotifierProvider&lt;AppState&gt;.value(</span><br><span class="line">            value: Global.appState,</span><br><span class="line">          ),</span><br><span class="line">        ],</span><br><span class="line">        child: MyApp(),</span><br><span class="line">      ),</span><br><span class="line">    ));</span><br></pre></td></tr></table></figure><h4 id="方式二：挂载时，创建对象"><a href="#方式二：挂载时，创建对象" class="headerlink" title="方式二：挂载时，创建对象"></a>方式二：挂载时，创建对象</h4><ul><li>lib/main.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> main() =&gt; Global.init().then((e) =&gt; runApp(</span><br><span class="line">      MultiProvider(</span><br><span class="line">        providers: [</span><br><span class="line">          ChangeNotifierProvider&lt;AppState&gt;(</span><br><span class="line">            Create: (_) =&gt; <span class="keyword">new</span> AppState(),</span><br><span class="line">          ),</span><br><span class="line">        ],</span><br><span class="line">        child: MyApp(),</span><br><span class="line">      ),</span><br><span class="line">    ));</span><br></pre></td></tr></table></figure><h3 id="步骤-4：通知数据发声变化"><a href="#步骤-4：通知数据发声变化" class="headerlink" title="步骤 4：通知数据发声变化"></a>步骤 4：通知数据发声变化</h3><ul><li>lib/common/provider/app.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AppState</span> <span class="title">with</span> <span class="title">ChangeNotifier</span> </span>&#123;</span><br><span class="line">  ...</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 切换灰色滤镜</span></span><br><span class="line">  switchGrayFilter() &#123;</span><br><span class="line">    _isGrayFilter = !_isGrayFilter;</span><br><span class="line">    notifyListeners();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="步骤-5：收到数据发声变化"><a href="#步骤-5：收到数据发声变化" class="headerlink" title="步骤 5：收到数据发声变化"></a>步骤 5：收到数据发声变化</h3><h4 id="方式一：Consumer"><a href="#方式一：Consumer" class="headerlink" title="方式一：Consumer"></a>方式一：Consumer</h4><ul><li>lib/main.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> main() =&gt; Global.init().then((e) =&gt; runApp(</span><br><span class="line">      MultiProvider(</span><br><span class="line">        providers: [</span><br><span class="line">          ChangeNotifierProvider&lt;AppState&gt;.value(</span><br><span class="line">            value: Global.appState,</span><br><span class="line">          ),</span><br><span class="line">        ],</span><br><span class="line">        child: Consumer&lt;AppState&gt;(builder: (context, appState, _) &#123;</span><br><span class="line">          <span class="keyword">if</span> (appState.isGrayFilter) &#123;</span><br><span class="line">            <span class="keyword">return</span> ColorFiltered(</span><br><span class="line">              colorFilter: ColorFilter.mode(Colors.white, BlendMode.color),</span><br><span class="line">              child: MyApp(),</span><br><span class="line">            );</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> MyApp();</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;),</span><br><span class="line">      ),</span><br><span class="line">    ));</span><br></pre></td></tr></table></figure><h4 id="方式二：Provider-of"><a href="#方式二：Provider-of" class="headerlink" title="方式二：Provider.of"></a>方式二：Provider.of</h4><ul><li>lib/pages/account/account.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> appState = Provider.of&lt;AppState&gt;(context);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> Column(</span><br><span class="line">  children: &lt;Widget&gt;[</span><br><span class="line">    MaterialButton(</span><br><span class="line">      onPressed: () &#123;</span><br><span class="line">        appState.switchGrayFilter();</span><br><span class="line">      &#125;,</span><br><span class="line">      child: Text(<span class="string">'灰色切换 <span class="subst">$&#123;appState.isGrayFilter&#125;</span>'</span>),</span><br><span class="line">    ),</span><br><span class="line">  ],</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="多个响应数据处理"><a href="#多个响应数据处理" class="headerlink" title="多个响应数据处理"></a>多个响应数据处理</h3><ul><li><p>挂载用 MultiProvider</p></li><li><p>接收用 Consumer2 ~ Consumer6</p></li></ul><h2 id="注销登录"><a href="#注销登录" class="headerlink" title="注销登录"></a>注销登录</h2><ul><li>lib/common/utils/authentication.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// <span class="markdown">检查是否有 token</span></span></span><br><span class="line">Future&lt;<span class="built_in">bool</span>&gt; isAuthenticated() <span class="keyword">async</span> &#123;</span><br><span class="line">  <span class="keyword">var</span> profileJSON = StorageUtil().getJSON(STORAGE_USER_PROFILE_KEY);</span><br><span class="line">  <span class="keyword">return</span> profileJSON != <span class="keyword">null</span> ? <span class="keyword">true</span> : <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// <span class="markdown">删除缓存 token</span></span></span><br><span class="line">Future deleteAuthentication() <span class="keyword">async</span> &#123;</span><br><span class="line">  <span class="keyword">await</span> StorageUtil().remove(STORAGE_USER_PROFILE_KEY);</span><br><span class="line">  Global.profile = <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// <span class="markdown">重新登录</span></span></span><br><span class="line">Future goLoginPage(BuildContext context) <span class="keyword">async</span> &#123;</span><br><span class="line">  <span class="keyword">await</span> deleteAuthentication();</span><br><span class="line">  Navigator.pushNamedAndRemoveUntil(</span><br><span class="line">      context, <span class="string">"/sign-in"</span>, (Route&lt;<span class="built_in">dynamic</span>&gt; route) =&gt; <span class="keyword">false</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>lib/pages/account/account.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_AccountPageState</span> <span class="keyword">extends</span> <span class="title">State</span>&lt;<span class="title">AccountPage</span>&gt; </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">final</span> appState = Provider.of&lt;AppState&gt;(context);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> Column(</span><br><span class="line">      children: &lt;Widget&gt;[</span><br><span class="line">        Text(<span class="string">'用户: <span class="subst">$&#123;Global.profile.displayName&#125;</span>'</span>),</span><br><span class="line">        Divider(),</span><br><span class="line">        MaterialButton(</span><br><span class="line">          onPressed: () &#123;</span><br><span class="line">            goLoginPage(context);</span><br><span class="line">          &#125;,</span><br><span class="line">          child: Text(<span class="string">'退出'</span>),</span><br><span class="line">        ),</span><br><span class="line">      ],</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Http-Status-401-认证授权"><a href="#Http-Status-401-认证授权" class="headerlink" title="Http Status 401 认证授权"></a>Http Status 401 认证授权</h2><h3 id="dio-封装界面的上下文对象-BuildContext-context"><a href="#dio-封装界面的上下文对象-BuildContext-context" class="headerlink" title="dio 封装界面的上下文对象 BuildContext context"></a>dio 封装界面的上下文对象 BuildContext context</h3><ul><li>lib/common/utils/http.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Future post(</span><br><span class="line">  <span class="built_in">String</span> path, &#123;</span><br><span class="line">  <span class="meta">@required</span> BuildContext context,</span><br><span class="line">  <span class="built_in">dynamic</span> params,</span><br><span class="line">  Options options,</span><br><span class="line">&#125;) <span class="keyword">async</span> &#123;</span><br><span class="line">  Options requestOptions = options ?? Options();</span><br><span class="line">  requestOptions = requestOptions.merge(extra: &#123;</span><br><span class="line">    <span class="string">"context"</span>: context,</span><br><span class="line">  &#125;);</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="错误处理-401-去登录界面"><a href="#错误处理-401-去登录界面" class="headerlink" title="错误处理 401 去登录界面"></a>错误处理 401 去登录界面</h3><ul><li>lib/common/utils/http.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 添加拦截器</span></span><br><span class="line">dio.interceptors</span><br><span class="line">    .add(InterceptorsWrapper(onRequest: (RequestOptions options) &#123;</span><br><span class="line">  <span class="keyword">return</span> options; <span class="comment">//continue</span></span><br><span class="line">&#125;, onResponse: (Response response) &#123;</span><br><span class="line">  <span class="keyword">return</span> response; <span class="comment">// continue</span></span><br><span class="line">&#125;, onError: (DioError e) &#123;</span><br><span class="line">  ErrorEntity eInfo = createErrorEntity(e);</span><br><span class="line">  <span class="comment">// 错误提示</span></span><br><span class="line">  toastInfo(msg: eInfo.message);</span><br><span class="line">  <span class="comment">// 错误交互处理</span></span><br><span class="line">  <span class="keyword">var</span> context = e.request.extra[<span class="string">"context"</span>];</span><br><span class="line">  <span class="keyword">if</span> (context != <span class="keyword">null</span>) &#123;</span><br><span class="line">    <span class="keyword">switch</span> (eInfo.code) &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">401</span>: <span class="comment">// 没有权限 重新登录</span></span><br><span class="line">        goLoginPage(context);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">default</span>:</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> eInfo;</span><br><span class="line">&#125;));</span><br></pre></td></tr></table></figure><h2 id="首页磁盘缓存"><a href="#首页磁盘缓存" class="headerlink" title="首页磁盘缓存"></a>首页磁盘缓存</h2><ul><li>lib/common/utils/net_cache.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 策略 1 内存缓存优先，2 然后才是磁盘缓存</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 1 内存缓存</span></span><br><span class="line"><span class="keyword">var</span> ob = cache[key];</span><br><span class="line"><span class="keyword">if</span> (ob != <span class="keyword">null</span>) &#123;</span><br><span class="line">  <span class="comment">//若缓存未过期，则返回缓存内容</span></span><br><span class="line">  <span class="keyword">if</span> ((<span class="built_in">DateTime</span>.now().millisecondsSinceEpoch - ob.timeStamp) / <span class="number">1000</span> &lt;</span><br><span class="line">      CACHE_MAXAGE) &#123;</span><br><span class="line">    <span class="keyword">return</span> cache[key].response;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">//若已过期则删除缓存，继续向服务器请求</span></span><br><span class="line">    cache.remove(key);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2 磁盘缓存</span></span><br><span class="line"><span class="keyword">if</span> (cacheDisk) &#123;</span><br><span class="line">  <span class="keyword">var</span> cacheData = StorageUtil().getJSON(key);</span><br><span class="line">  <span class="keyword">if</span> (cacheData != <span class="keyword">null</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> Response(</span><br><span class="line">      statusCode: <span class="number">200</span>,</span><br><span class="line">      data: cacheData,</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="首页缓存策略，延迟-1-3-秒"><a href="#首页缓存策略，延迟-1-3-秒" class="headerlink" title="首页缓存策略，延迟 1~3 秒"></a>首页缓存策略，延迟 1~3 秒</h2><ul><li>lib/pages/main/channels_widget.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 如果有磁盘缓存，延迟3秒拉取更新档案</span></span><br><span class="line">_loadLatestWithDiskCache() &#123;</span><br><span class="line">  <span class="keyword">if</span> (CACHE_ENABLE == <span class="keyword">true</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> cacheData = StorageUtil().getJSON(STORAGE_INDEX_NEWS_CACHE_KEY);</span><br><span class="line">    <span class="keyword">if</span> (cacheData != <span class="keyword">null</span>) &#123;</span><br><span class="line">      Timer(<span class="built_in">Duration</span>(seconds: <span class="number">3</span>), () &#123;</span><br><span class="line">        _controller.callRefresh();</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="首页骨架屏"><a href="#首页骨架屏" class="headerlink" title="首页骨架屏"></a>首页骨架屏</h2><p><a href="https://pub.flutter-io.cn/packages/pk_skeleton" target="_blank" rel="noopener">https://pub.flutter-io.cn/packages/pk_skeleton</a></p><ul><li>lib/pages/main/main.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@override</span></span><br><span class="line">Widget build(BuildContext context) &#123;</span><br><span class="line">  <span class="keyword">return</span> _newsPageList == <span class="keyword">null</span></span><br><span class="line">      ? cardListSkeleton()</span><br><span class="line">      : EasyRefresh(</span><br><span class="line">          enableControlFinishRefresh: <span class="keyword">true</span>,</span><br><span class="line">          controller: _controller,</span><br><span class="line">          ...</span><br></pre></td></tr></table></figure><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                   
      
    
    </summary>
    
      <category term="Flutter 实战从零开始" scheme="https://ducafecat.tech/categories/Flutter-%E5%AE%9E%E6%88%98%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B/"/>
    
    
      <category term="flutter" scheme="https://ducafecat.tech/tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>Flutter 实战从零开始 新闻客户端 - 06 代码规范、业务代码组织、新闻首页实现</title>
    <link href="https://ducafecat.tech/2020/03/31/flutter-project/flutter-project-news-06-main-ui/"/>
    <id>https://ducafecat.tech/2020/03/31/flutter-project/flutter-project-news-06-main-ui/</id>
    <published>2020-03-30T16:00:00.000Z</published>
    <updated>2020-07-04T06:33:27.722Z</updated>
    
    <content type="html"><![CDATA[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="bg.jpeg" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="1-本节目标"><a href="#1-本节目标" class="headerlink" title="1 本节目标"></a>1 本节目标</h2><ul><li>代码规范</li><li>业务代码组织</li><li>首页代码编写</li></ul><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><iframe src="//player.bilibili.com/player.html?bvid=BV1Pp4y1C7hx&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="100%" height="400px"> </iframe><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><a href="https://github.com/ducafecat/flutter_learn_news/releases/tag/v1.0.6" target="_blank" rel="noopener">https://github.com/ducafecat/flutter_learn_news/releases/tag/v1.0.6</a></p><h2 id="2-代码规范"><a href="#2-代码规范" class="headerlink" title="2 代码规范"></a>2 代码规范</h2><h3 id="2-1-官方代码规范"><a href="#2-1-官方代码规范" class="headerlink" title="2.1 官方代码规范"></a>2.1 官方代码规范</h3><p><a href="https://dart.dev/guides/language/effective-dart" target="_blank" rel="noopener">https://dart.dev/guides/language/effective-dart</a></p><h3 id="2-3-chrome-插件-lt-彩云小译-网页翻译插件-gt"><a href="#2-3-chrome-插件-lt-彩云小译-网页翻译插件-gt" class="headerlink" title="2.3 chrome 插件 &lt;彩云小译 - 网页翻译插件&gt;"></a>2.3 chrome 插件 &lt;彩云小译 - 网页翻译插件&gt;</h3><p><a href="https://chrome.google.com/webstore/detail/lingocloud-web-translatio/jmpepeebcbihafjjadogphmbgiffiajh" target="_blank" rel="noopener">https://chrome.google.com/webstore/detail/lingocloud-web-translatio/jmpepeebcbihafjjadogphmbgiffiajh</a></p><h3 id="2-4-阿里项目规范"><a href="#2-4-阿里项目规范" class="headerlink" title="2.4 阿里项目规范"></a>2.4 阿里项目规范</h3><p><a href="https://github.com/alibaba/flutter-go/blob/master/Flutter_Go%20%E4%BB%A3%E7%A0%81%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83.md" target="_blank" rel="noopener">https://github.com/alibaba/flutter-go/blob/master/Flutter_Go%20%E4%BB%A3%E7%A0%81%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83.md</a></p><h2 id="3-业务界面代码组织"><a href="#3-业务界面代码组织" class="headerlink" title="3 业务界面代码组织"></a>3 业务界面代码组织</h2><h3 id="3-1-redux、fish-redux"><a href="#3-1-redux、fish-redux" class="headerlink" title="3.1 redux、fish-redux"></a>3.1 redux、fish-redux</h3><ul><li>redux 架构</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-04-01-09-50-51.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>fish-redux 架构</li></ul><p>进一步的细分，进行规范</p><p><a href="https://github.com/alibaba/fish-redux/tree/master/doc" target="_blank" rel="noopener">https://github.com/alibaba/fish-redux/tree/master/doc</a><br><a href="https://medium.com/@dave790602/flutter-architecture-fish-redux-9b753912224a" target="_blank" rel="noopener">https://medium.com/@dave790602/flutter-architecture-fish-redux-9b753912224a</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-04-01-09-52-25.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>fish-redux 代码</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-04-01-10-30-19.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="3-2-bloc"><a href="#3-2-bloc" class="headerlink" title="3.2 bloc"></a>3.2 bloc</h3><ul><li>架构</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-04-01-09-56-04.png" alt title>                </div>                <div class="image-caption"></div>            </figure><p><a href="https://bloclibrary.dev/#/" target="_blank" rel="noopener">https://bloclibrary.dev/#/</a></p><ul><li>代码组织</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-04-01-10-39-09.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="3-3-简单就是美"><a href="#3-3-简单就是美" class="headerlink" title="3.3 简单就是美"></a>3.3 简单就是美</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-04-01-10-41-34.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="3-4-如何平衡"><a href="#3-4-如何平衡" class="headerlink" title="3.4 如何平衡"></a>3.4 如何平衡</h3><ul><li>是否团队开发</li></ul><ul><li>是否简单业务（20 页面）</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-04-01-14-17-41.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>是否重交互（视频社交、聊天 A）</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-04-01-14-16-06.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="4-新闻首页实现"><a href="#4-新闻首页实现" class="headerlink" title="4 新闻首页实现"></a>4 新闻首页实现</h2><h3 id="4-1-界面组成分析"><a href="#4-1-界面组成分析" class="headerlink" title="4.1 界面组成分析"></a>4.1 界面组成分析</h3><ul><li>分类导航、推荐新闻、频道导航</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-04-01-10-55-39.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>新闻列表、广告 ad、邮件订阅</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-04-01-10-57-39.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="4-2-代码框架"><a href="#4-2-代码框架" class="headerlink" title="4.2 代码框架"></a>4.2 代码框架</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_MainPageState</span> <span class="keyword">extends</span> <span class="title">State</span>&lt;<span class="title">MainPage</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="keyword">void</span> initState() &#123;</span><br><span class="line">    <span class="keyword">super</span>.initState();</span><br><span class="line">    _loadAllData();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 读取所有数据</span></span><br><span class="line">  _loadAllData() <span class="keyword">async</span> &#123;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 分类菜单</span></span><br><span class="line">  Widget _buildCategories() &#123;</span><br><span class="line">    <span class="keyword">return</span> Container();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 推荐阅读</span></span><br><span class="line">  Widget _buildRecommend() &#123;</span><br><span class="line">    <span class="keyword">return</span> Container();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 频道</span></span><br><span class="line">  Widget _buildChannels() &#123;</span><br><span class="line">    <span class="keyword">return</span> Container();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 新闻列表</span></span><br><span class="line">  Widget _buildNewsList() &#123;</span><br><span class="line">    <span class="keyword">return</span> Container();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// ad 广告条</span></span><br><span class="line">  <span class="comment">// 邮件订阅</span></span><br><span class="line">  Widget _buildEmailSubscribe() &#123;</span><br><span class="line">    <span class="keyword">return</span> newsletterWidget();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> SingleChildScrollView(</span><br><span class="line">        child: Column(</span><br><span class="line">          children: &lt;Widget&gt;[</span><br><span class="line">            _buildCategories(),</span><br><span class="line">            Divider(height: <span class="number">1</span>),</span><br><span class="line">            _buildRecommend(),</span><br><span class="line">            Divider(height: <span class="number">1</span>),</span><br><span class="line">            _buildChannels(),</span><br><span class="line">            Divider(height: <span class="number">1</span>),</span><br><span class="line">            _buildNewsList(),</span><br><span class="line">            Divider(height: <span class="number">1</span>),</span><br><span class="line">            _buildEmailSubscribe(),</span><br><span class="line">          ],</span><br><span class="line">        ),</span><br><span class="line">      );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-3-实现业务"><a href="#4-3-实现业务" class="headerlink" title="4.3 实现业务"></a>4.3 实现业务</h3><ul><li>创建 widget 单独文件</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-04-01-11-00-53.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>分类导航</li></ul><p>lib/pages/main/categories_widget.dart</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">Widget newsCategoriesWidget(&#123;</span><br><span class="line">  <span class="built_in">List</span>&lt;CategoryResponseEntity&gt; categories,</span><br><span class="line">  <span class="built_in">String</span> selCategoryCode,</span><br><span class="line">  <span class="built_in">Function</span>(CategoryResponseEntity) onTap,</span><br><span class="line">&#125;) &#123;</span><br><span class="line">  <span class="keyword">return</span> SingleChildScrollView(</span><br><span class="line">    scrollDirection: Axis.horizontal,</span><br><span class="line">    child: Row(</span><br><span class="line">      children: categories.map&lt;Widget&gt;((item) &#123;</span><br><span class="line">        <span class="keyword">return</span> Container(</span><br><span class="line">          alignment: Alignment.center,</span><br><span class="line">          height: duSetHeight(<span class="number">52</span>),</span><br><span class="line">          padding: EdgeInsets.symmetric(horizontal: <span class="number">8</span>),</span><br><span class="line">          child: GestureDetector(</span><br><span class="line">            child: Text(</span><br><span class="line">              item.title,</span><br><span class="line">              style: TextStyle(</span><br><span class="line">                color: selCategoryCode == item.code</span><br><span class="line">                    ? AppColors.secondaryElementText</span><br><span class="line">                    : AppColors.primaryText,</span><br><span class="line">                fontSize: duSetFontSize(<span class="number">18</span>),</span><br><span class="line">                fontFamily: <span class="string">'Montserrat'</span>,</span><br><span class="line">                fontWeight: FontWeight.w600,</span><br><span class="line">              ),</span><br><span class="line">            ),</span><br><span class="line">            onTap: () =&gt; onTap(item),</span><br><span class="line">          ),</span><br><span class="line">        );</span><br><span class="line">      &#125;).toList(),</span><br><span class="line">    ),</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>频道导航</li></ul><p>lib/pages/main/channels_widget.dart</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">Widget newsChannelsWidget(&#123;</span><br><span class="line">  <span class="built_in">List</span>&lt;ChannelResponseEntity&gt; channels,</span><br><span class="line">  <span class="built_in">Function</span>(ChannelResponseEntity) onTap,</span><br><span class="line">&#125;) &#123;</span><br><span class="line">  <span class="keyword">return</span> Container(</span><br><span class="line">    height: duSetHeight(<span class="number">137</span>),</span><br><span class="line">    child: SingleChildScrollView(</span><br><span class="line">      scrollDirection: Axis.horizontal,</span><br><span class="line">      child: Row(</span><br><span class="line">        children: channels.map&lt;Widget&gt;((item) &#123;</span><br><span class="line">          <span class="keyword">return</span> Container(</span><br><span class="line">            width: duSetWidth(<span class="number">70</span>),</span><br><span class="line">            height: duSetHeight(<span class="number">97</span>),</span><br><span class="line">            margin: EdgeInsets.symmetric(horizontal: duSetWidth(<span class="number">10</span>)),</span><br><span class="line">            child: InkWell(</span><br><span class="line">              child: Column(</span><br><span class="line">                crossAxisAlignment: CrossAxisAlignment.stretch,</span><br><span class="line">                mainAxisAlignment: MainAxisAlignment.spaceBetween,</span><br><span class="line">                children: [</span><br><span class="line">                  <span class="comment">// 图标</span></span><br><span class="line">                  Container(</span><br><span class="line">                    height: duSetWidth(<span class="number">64</span>),</span><br><span class="line">                    margin: EdgeInsets.symmetric(horizontal: duSetWidth(<span class="number">3</span>)),</span><br><span class="line">                    child: Stack(</span><br><span class="line">                      alignment: Alignment.center,</span><br><span class="line">                      children: [</span><br><span class="line">                        Positioned(</span><br><span class="line">                          left: <span class="number">0</span>,</span><br><span class="line">                          top: <span class="number">0</span>,</span><br><span class="line">                          right: <span class="number">0</span>,</span><br><span class="line">                          child: Container(</span><br><span class="line">                            height: duSetWidth(<span class="number">64</span>),</span><br><span class="line">                            decoration: BoxDecoration(</span><br><span class="line">                              color: AppColors.primaryBackground,</span><br><span class="line">                              boxShadow: [</span><br><span class="line">                                Shadows.primaryShadow,</span><br><span class="line">                              ],</span><br><span class="line">                              borderRadius:</span><br><span class="line">                                  BorderRadius.all(Radius.circular(<span class="number">32</span>)),</span><br><span class="line">                            ),</span><br><span class="line">                            child: Container(),</span><br><span class="line">                          ),</span><br><span class="line">                        ),</span><br><span class="line">                        Positioned(</span><br><span class="line">                          left: duSetWidth(<span class="number">10</span>),</span><br><span class="line">                          top: duSetWidth(<span class="number">10</span>),</span><br><span class="line">                          right: duSetWidth(<span class="number">10</span>),</span><br><span class="line">                          child: Image.asset(</span><br><span class="line">                            <span class="string">"assets/images/channel-<span class="subst">$&#123;item.code&#125;</span>.png"</span>,</span><br><span class="line">                            fit: BoxFit.none,</span><br><span class="line">                          ),</span><br><span class="line">                        ),</span><br><span class="line">                      ],</span><br><span class="line">                    ),</span><br><span class="line">                  ),</span><br><span class="line">                  <span class="comment">// 标题</span></span><br><span class="line">                  Text(</span><br><span class="line">                    item.title,</span><br><span class="line">                    textAlign: TextAlign.center,</span><br><span class="line">                    overflow: TextOverflow.clip,</span><br><span class="line">                    maxLines: <span class="number">1</span>,</span><br><span class="line">                    style: TextStyle(</span><br><span class="line">                      color: AppColors.thirdElementText,</span><br><span class="line">                      fontFamily: <span class="string">"Avenir"</span>,</span><br><span class="line">                      fontWeight: FontWeight.w400,</span><br><span class="line">                      fontSize: duSetFontSize(<span class="number">14</span>),</span><br><span class="line">                      height: <span class="number">1</span>,</span><br><span class="line">                    ),</span><br><span class="line">                  ),</span><br><span class="line">                ],</span><br><span class="line">              ),</span><br><span class="line">              onTap: () =&gt; onTap(item),</span><br><span class="line">            ),</span><br><span class="line">          );</span><br><span class="line">        &#125;).toList(),</span><br><span class="line">      ),</span><br><span class="line">    ),</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>新闻行 Item</li></ul><p>lib/pages/main/news_item_widget.dart</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line">Widget newsItem(NewsItem item) &#123;</span><br><span class="line">  <span class="keyword">return</span> Container(</span><br><span class="line">    height: duSetHeight(<span class="number">161</span>),</span><br><span class="line">    padding: EdgeInsets.all(duSetWidth(<span class="number">20</span>)),</span><br><span class="line">    child: Row(</span><br><span class="line">      mainAxisAlignment: MainAxisAlignment.spaceBetween,</span><br><span class="line">      crossAxisAlignment: CrossAxisAlignment.start,</span><br><span class="line">      children: &lt;Widget&gt;[</span><br><span class="line">        <span class="comment">// 图</span></span><br><span class="line">        imageCached(</span><br><span class="line">          item.thumbnail,</span><br><span class="line">          width: duSetWidth(<span class="number">121</span>),</span><br><span class="line">          height: duSetWidth(<span class="number">121</span>),</span><br><span class="line">        ),</span><br><span class="line">        <span class="comment">// 右侧</span></span><br><span class="line">        SizedBox(</span><br><span class="line">          width: duSetWidth(<span class="number">194</span>),</span><br><span class="line">          child: Column(</span><br><span class="line">            crossAxisAlignment: CrossAxisAlignment.start,</span><br><span class="line">            children: &lt;Widget&gt;[</span><br><span class="line">              <span class="comment">// 作者</span></span><br><span class="line">              Container(</span><br><span class="line">                margin: EdgeInsets.all(<span class="number">0</span>),</span><br><span class="line">                child: Text(</span><br><span class="line">                  item.author,</span><br><span class="line">                  style: TextStyle(</span><br><span class="line">                    fontFamily: <span class="string">'Avenir'</span>,</span><br><span class="line">                    fontWeight: FontWeight.normal,</span><br><span class="line">                    color: AppColors.thirdElementText,</span><br><span class="line">                    fontSize: duSetFontSize(<span class="number">14</span>),</span><br><span class="line">                    height: <span class="number">1</span>,</span><br><span class="line">                  ),</span><br><span class="line">                ),</span><br><span class="line">              ),</span><br><span class="line">              <span class="comment">// 标题</span></span><br><span class="line">              Container(</span><br><span class="line">                margin: EdgeInsets.only(top: duSetHeight(<span class="number">10</span>)),</span><br><span class="line">                child: Text(</span><br><span class="line">                  item.title,</span><br><span class="line">                  style: TextStyle(</span><br><span class="line">                    fontFamily: <span class="string">'Montserrat'</span>,</span><br><span class="line">                    fontWeight: FontWeight.w500,</span><br><span class="line">                    color: AppColors.primaryText,</span><br><span class="line">                    fontSize: duSetFontSize(<span class="number">16</span>),</span><br><span class="line">                    height: <span class="number">1</span>,</span><br><span class="line">                  ),</span><br><span class="line">                  overflow: TextOverflow.clip,</span><br><span class="line">                  maxLines: <span class="number">3</span>,</span><br><span class="line">                ),</span><br><span class="line">              ),</span><br><span class="line">              <span class="comment">// Spacer</span></span><br><span class="line">              Spacer(),</span><br><span class="line">              <span class="comment">// 一行 3 列</span></span><br><span class="line">              Container(</span><br><span class="line">                child: Row(</span><br><span class="line">                  crossAxisAlignment: CrossAxisAlignment.center,</span><br><span class="line">                  children: &lt;Widget&gt;[</span><br><span class="line">                    <span class="comment">// 分类</span></span><br><span class="line">                    ConstrainedBox(</span><br><span class="line">                      constraints: BoxConstraints(</span><br><span class="line">                        maxWidth: duSetWidth(<span class="number">60</span>),</span><br><span class="line">                      ),</span><br><span class="line">                      child: Text(</span><br><span class="line">                        item.category,</span><br><span class="line">                        style: TextStyle(</span><br><span class="line">                          fontFamily: <span class="string">'Avenir'</span>,</span><br><span class="line">                          fontWeight: FontWeight.normal,</span><br><span class="line">                          color: AppColors.secondaryElementText,</span><br><span class="line">                          fontSize: duSetFontSize(<span class="number">14</span>),</span><br><span class="line">                          height: <span class="number">1</span>,</span><br><span class="line">                        ),</span><br><span class="line">                        overflow: TextOverflow.clip,</span><br><span class="line">                        maxLines: <span class="number">1</span>,</span><br><span class="line">                      ),</span><br><span class="line">                    ),</span><br><span class="line">                    <span class="comment">// 添加时间</span></span><br><span class="line">                    Container(</span><br><span class="line">                      width: duSetWidth(<span class="number">15</span>),</span><br><span class="line">                    ),</span><br><span class="line">                    ConstrainedBox(</span><br><span class="line">                      constraints: BoxConstraints(</span><br><span class="line">                        maxWidth: duSetWidth(<span class="number">100</span>),</span><br><span class="line">                      ),</span><br><span class="line">                      child: Text(</span><br><span class="line">                        <span class="string">'• <span class="subst">$&#123;duTimeLineFormat(item.addtime)&#125;</span>'</span>,</span><br><span class="line">                        style: TextStyle(</span><br><span class="line">                          fontFamily: <span class="string">'Avenir'</span>,</span><br><span class="line">                          fontWeight: FontWeight.normal,</span><br><span class="line">                          color: AppColors.thirdElementText,</span><br><span class="line">                          fontSize: duSetFontSize(<span class="number">14</span>),</span><br><span class="line">                          height: <span class="number">1</span>,</span><br><span class="line">                        ),</span><br><span class="line">                        overflow: TextOverflow.clip,</span><br><span class="line">                        maxLines: <span class="number">1</span>,</span><br><span class="line">                      ),</span><br><span class="line">                    ),</span><br><span class="line">                    <span class="comment">// 更多</span></span><br><span class="line">                    Spacer(),</span><br><span class="line">                    InkWell(</span><br><span class="line">                      child: Icon(</span><br><span class="line">                        Icons.more_horiz,</span><br><span class="line">                        color: AppColors.primaryText,</span><br><span class="line">                        size: <span class="number">24</span>,</span><br><span class="line">                      ),</span><br><span class="line">                      onTap: () &#123;&#125;,</span><br><span class="line">                    ),</span><br><span class="line">                  ],</span><br><span class="line">                ),</span><br><span class="line">              ),</span><br><span class="line">            ],</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">      ],</span><br><span class="line">    ),</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>邮件订阅</li></ul><p>lib/pages/main/newsletter_widget.dart</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">Widget newsletterWidget() &#123;</span><br><span class="line">  <span class="keyword">return</span> Container(</span><br><span class="line">    margin: EdgeInsets.all(duSetWidth(<span class="number">20</span>)),</span><br><span class="line">    child: Column(</span><br><span class="line">      children: &lt;Widget&gt;[</span><br><span class="line">        <span class="comment">// newsletter</span></span><br><span class="line">        Row(</span><br><span class="line">          children: &lt;Widget&gt;[</span><br><span class="line">            Text(</span><br><span class="line">              <span class="string">'Newsletter'</span>,</span><br><span class="line">              style: TextStyle(</span><br><span class="line">                fontFamily: <span class="string">'Montserrat'</span>,</span><br><span class="line">                fontSize: duSetFontSize(<span class="number">18</span>),</span><br><span class="line">                fontWeight: FontWeight.w600,</span><br><span class="line">                color: AppColors.thirdElement,</span><br><span class="line">              ),</span><br><span class="line">            ),</span><br><span class="line">            Spacer(),</span><br><span class="line">            IconButton(</span><br><span class="line">              icon: Icon(</span><br><span class="line">                Icons.close,</span><br><span class="line">                color: AppColors.thirdElementText,</span><br><span class="line">                size: duSetFontSize(<span class="number">17</span>),</span><br><span class="line">              ),</span><br><span class="line">              onPressed: () &#123;&#125;,</span><br><span class="line">            ),</span><br><span class="line">          ],</span><br><span class="line">        ),</span><br><span class="line"></span><br><span class="line">        <span class="comment">// email</span></span><br><span class="line">        inputEmailEdit(</span><br><span class="line">          marginTop: <span class="number">19</span>,</span><br><span class="line">          keyboardType: TextInputType.emailAddress,</span><br><span class="line">          hintText: <span class="string">"Email"</span>,</span><br><span class="line">          isPassword: <span class="keyword">false</span>,</span><br><span class="line">          controller: <span class="keyword">null</span>,</span><br><span class="line">        ),</span><br><span class="line"></span><br><span class="line">        <span class="comment">// btn subcrible</span></span><br><span class="line">        Padding(</span><br><span class="line">          padding: EdgeInsets.only(top: <span class="number">15</span>),</span><br><span class="line">          child: btnFlatButtonWidget(</span><br><span class="line">            onPressed: () &#123;&#125;,</span><br><span class="line">            width: duSetWidth(<span class="number">335</span>),</span><br><span class="line">            height: duSetHeight(<span class="number">44</span>),</span><br><span class="line">            fontWeight: FontWeight.w600,</span><br><span class="line">            title: <span class="string">"Subscribe"</span>,</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line"></span><br><span class="line">        <span class="comment">// disc</span></span><br><span class="line">        Container(</span><br><span class="line">          margin: EdgeInsets.only(top: duSetHeight(<span class="number">29</span>)),</span><br><span class="line">          width: duSetWidth(<span class="number">261</span>),</span><br><span class="line">          child: Text.rich(TextSpan(children: &lt;TextSpan&gt;[</span><br><span class="line">            TextSpan(</span><br><span class="line">              text: <span class="string">'By clicking on Subscribe button you agree to accept'</span>,</span><br><span class="line">              style: <span class="keyword">new</span> TextStyle(</span><br><span class="line">                color: AppColors.thirdElementText,</span><br><span class="line">                fontFamily: <span class="string">"Avenir"</span>,</span><br><span class="line">                fontWeight: FontWeight.w400,</span><br><span class="line">                fontSize: duSetFontSize(<span class="number">14</span>),</span><br><span class="line">              ),</span><br><span class="line">            ),</span><br><span class="line">            TextSpan(</span><br><span class="line">              text: <span class="string">' Privacy Policy'</span>,</span><br><span class="line">              style: <span class="keyword">new</span> TextStyle(</span><br><span class="line">                color: AppColors.secondaryElementText,</span><br><span class="line">                fontFamily: <span class="string">"Avenir"</span>,</span><br><span class="line">                fontWeight: FontWeight.w400,</span><br><span class="line">                fontSize: duSetFontSize(<span class="number">14</span>),</span><br><span class="line">              ),</span><br><span class="line">              recognizer: TapGestureRecognizer()</span><br><span class="line">                ..onTap = () &#123;</span><br><span class="line">                  toastInfo(msg: <span class="string">'Privacy Policy'</span>);</span><br><span class="line">                &#125;,</span><br><span class="line">            ),</span><br><span class="line">          ])),</span><br><span class="line">        ),</span><br><span class="line">      ],</span><br><span class="line">    ),</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>推荐阅读</li></ul><p>lib/pages/main/recommend_widget.dart</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line">Widget recommendWidget(NewsRecommendResponseEntity newsRecommend) &#123;</span><br><span class="line">  <span class="keyword">return</span> Container(</span><br><span class="line">    margin: EdgeInsets.all(duSetWidth(<span class="number">20</span>)),</span><br><span class="line">    child: Column(</span><br><span class="line">      crossAxisAlignment: CrossAxisAlignment.start,</span><br><span class="line">      children: &lt;Widget&gt;[</span><br><span class="line">        <span class="comment">// 图</span></span><br><span class="line">        imageCached(</span><br><span class="line">          newsRecommend.thumbnail,</span><br><span class="line">          width: duSetWidth(<span class="number">335</span>),</span><br><span class="line">          height: duSetHeight(<span class="number">290</span>),</span><br><span class="line">        ),</span><br><span class="line">        <span class="comment">// 作者</span></span><br><span class="line">        Container(</span><br><span class="line">          margin: EdgeInsets.only(top: duSetHeight(<span class="number">14</span>)),</span><br><span class="line">          child: Text(</span><br><span class="line">            newsRecommend.author,</span><br><span class="line">            style: TextStyle(</span><br><span class="line">              fontFamily: <span class="string">'Avenir'</span>,</span><br><span class="line">              fontWeight: FontWeight.normal,</span><br><span class="line">              color: AppColors.thirdElementText,</span><br><span class="line">              fontSize: duSetFontSize(<span class="number">14</span>),</span><br><span class="line">            ),</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">        <span class="comment">// 标题</span></span><br><span class="line">        Container(</span><br><span class="line">          margin: EdgeInsets.only(top: duSetHeight(<span class="number">10</span>)),</span><br><span class="line">          child: Text(</span><br><span class="line">            newsRecommend.title,</span><br><span class="line">            style: TextStyle(</span><br><span class="line">              fontFamily: <span class="string">'Montserrat'</span>,</span><br><span class="line">              fontWeight: FontWeight.w600,</span><br><span class="line">              color: AppColors.primaryText,</span><br><span class="line">              fontSize: duSetFontSize(<span class="number">24</span>),</span><br><span class="line">              height: <span class="number">1</span>,</span><br><span class="line">            ),</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">        <span class="comment">// 一行 3 列</span></span><br><span class="line">        Container(</span><br><span class="line">          margin: EdgeInsets.only(top: duSetHeight(<span class="number">10</span>)),</span><br><span class="line">          child: Row(</span><br><span class="line">            crossAxisAlignment: CrossAxisAlignment.center,</span><br><span class="line">            children: &lt;Widget&gt;[</span><br><span class="line">              <span class="comment">// 分类</span></span><br><span class="line">              ConstrainedBox(</span><br><span class="line">                constraints: <span class="keyword">const</span> BoxConstraints(</span><br><span class="line">                  maxWidth: <span class="number">120</span>,</span><br><span class="line">                ),</span><br><span class="line">                child: Text(</span><br><span class="line">                  newsRecommend.category,</span><br><span class="line">                  style: TextStyle(</span><br><span class="line">                    fontFamily: <span class="string">'Avenir'</span>,</span><br><span class="line">                    fontWeight: FontWeight.normal,</span><br><span class="line">                    color: AppColors.secondaryElementText,</span><br><span class="line">                    fontSize: duSetFontSize(<span class="number">14</span>),</span><br><span class="line">                    height: <span class="number">1</span>,</span><br><span class="line">                  ),</span><br><span class="line">                  overflow: TextOverflow.clip,</span><br><span class="line">                  maxLines: <span class="number">1</span>,</span><br><span class="line">                ),</span><br><span class="line">              ),</span><br><span class="line">              <span class="comment">// 添加时间</span></span><br><span class="line">              Container(</span><br><span class="line">                width: duSetWidth(<span class="number">15</span>),</span><br><span class="line">              ),</span><br><span class="line">              ConstrainedBox(</span><br><span class="line">                constraints: <span class="keyword">const</span> BoxConstraints(</span><br><span class="line">                  maxWidth: <span class="number">120</span>,</span><br><span class="line">                ),</span><br><span class="line">                child: Text(</span><br><span class="line">                  <span class="string">'• <span class="subst">$&#123;duTimeLineFormat(newsRecommend.addtime)&#125;</span>'</span>,</span><br><span class="line">                  style: TextStyle(</span><br><span class="line">                    fontFamily: <span class="string">'Avenir'</span>,</span><br><span class="line">                    fontWeight: FontWeight.normal,</span><br><span class="line">                    color: AppColors.thirdElementText,</span><br><span class="line">                    fontSize: duSetFontSize(<span class="number">14</span>),</span><br><span class="line">                    height: <span class="number">1</span>,</span><br><span class="line">                  ),</span><br><span class="line">                  overflow: TextOverflow.clip,</span><br><span class="line">                  maxLines: <span class="number">1</span>,</span><br><span class="line">                ),</span><br><span class="line">              ),</span><br><span class="line">              <span class="comment">// 更多</span></span><br><span class="line">              Spacer(),</span><br><span class="line">              InkWell(</span><br><span class="line">                child: Icon(</span><br><span class="line">                  Icons.more_horiz,</span><br><span class="line">                  color: AppColors.primaryText,</span><br><span class="line">                  size: <span class="number">24</span>,</span><br><span class="line">                ),</span><br><span class="line">                onTap: () &#123;&#125;,</span><br><span class="line">              ),</span><br><span class="line">            ],</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">      ],</span><br><span class="line">    ),</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="蓝湖设计稿"><a href="#蓝湖设计稿" class="headerlink" title="蓝湖设计稿"></a>蓝湖设计稿</h2><p><a href="https://lanhuapp.com/url/lYuz1" target="_blank" rel="noopener">https://lanhuapp.com/url/lYuz1</a><br>密码: gSKl</p><blockquote><p>蓝湖现在收费了，所以查看标记还请自己上传 xd 设计稿<br>商业设计稿文件不好直接分享, 可以加微信联系 ducafecat</p></blockquote><h2 id="YAPI-接口管理"><a href="#YAPI-接口管理" class="headerlink" title="YAPI 接口管理"></a>YAPI 接口管理</h2><p><a href="http://yapi.demo.qunar.com/" target="_blank" rel="noopener">http://yapi.demo.qunar.com/</a></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://github.com/alibaba/flutter-go#the-flutter-go-roadmap%E8%B7%AF%E7%BA%BF%E5%9B%BE-for-2019" target="_blank" rel="noopener">Flutter Go 代码开发规范 0.1.0 版</a></li><li><a href="https://dart.dev/guides/language/effective-dart" target="_blank" rel="noopener">effective-dart</a></li><li><a href="https://bloclibrary.dev/#/" target="_blank" rel="noopener">bloc</a></li></ul><h2 id="VSCode-插件"><a href="#VSCode-插件" class="headerlink" title="VSCode 插件"></a>VSCode 插件</h2><ul><li>Flutter、Dart</li><li><a href="https://marketplace.visualstudio.com/items?itemName=alexisvt.flutter-snippets" target="_blank" rel="noopener">Flutter Widget Snippets</a></li><li><a href="https://marketplace.visualstudio.com/items?itemName=Nash.awesome-flutter-snippets" target="_blank" rel="noopener">Awesome Flutter Snippets</a></li><li><a href="https://marketplace.visualstudio.com/items?itemName=quicktype.quicktype" target="_blank" rel="noopener">Paste JSON as Code</a></li><li><a href="https://marketplace.visualstudio.com/items?itemName=FelixAngelov.bloc" target="_blank" rel="noopener">bloc</a></li></ul><h2 id="视频-1"><a href="#视频-1" class="headerlink" title="视频"></a>视频</h2><ul><li><a href="https://space.bilibili.com/404904528/channel/detail?cid=106755" target="_blank" rel="noopener">b 站</a></li><li><a href="https://www.youtube.com/watch?v=Uucg6GGGBsY&amp;list=PL274L1n86T80VZR30KaLOKV6jqwTq5E8D" target="_blank" rel="noopener">油管镜像</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                   
      
    
    </summary>
    
      <category term="Flutter 实战从零开始" scheme="https://ducafecat.tech/categories/Flutter-%E5%AE%9E%E6%88%98%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B/"/>
    
    
      <category term="flutter" scheme="https://ducafecat.tech/tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>Flutter 实战从零开始 新闻客户端 - 05 AppData、Cache、Fiddle、iconfont、主界面搭建</title>
    <link href="https://ducafecat.tech/2020/03/25/flutter-project/flutter-project-news-05-cache-iconfont/"/>
    <id>https://ducafecat.tech/2020/03/25/flutter-project/flutter-project-news-05-cache-iconfont/</id>
    <published>2020-03-24T16:00:00.000Z</published>
    <updated>2020-07-04T06:33:27.729Z</updated>
    
    <content type="html"><![CDATA[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="bg.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h2><ul><li>全局数据、响应数据、持久化</li><li>http get 缓存</li><li>http proxy 代理</li><li>fiddle 抓包工具</li><li>iconfont 字体库</li><li>主界面搭建</li><li>BottomNavigationBar 导航控件</li><li>编写 api 接口代码</li></ul><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><iframe src="//player.bilibili.com/player.html?bvid=BV1A54y1d7Pa&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="100%" height="400px"> </iframe><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><a href="https://github.com/ducafecat/flutter_learn_news/releases/tag/v1.0.5" target="_blank" rel="noopener">https://github.com/ducafecat/flutter_learn_news/releases/tag/v1.0.5</a></p><h2 id="客户端数据管理"><a href="#客户端数据管理" class="headerlink" title="客户端数据管理"></a>客户端数据管理</h2><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><ul><li>全局数据</li></ul><p>存储在内存</p><p>用户数据、语言包</p><ul><li>响应数据</li></ul><p>存储在内存</p><p>用户登录状态、多语言、皮肤样式</p><p>Redux、Bloc、provider</p><ul><li>持久化</li></ul><p>APP 保持磁盘上</p><p>浏览器 cookie localStorage</p><h3 id="编写全局管理"><a href="#编写全局管理" class="headerlink" title="编写全局管理"></a>编写全局管理</h3><ul><li>lib/global.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// <span class="markdown">全局配置</span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Global</span> </span>&#123;</span><br><span class="line">  <span class="comment">/// <span class="markdown">用户配置</span></span></span><br><span class="line">  <span class="keyword">static</span> UserLoginResponseEntity profile = UserLoginResponseEntity(</span><br><span class="line">    accessToken: <span class="keyword">null</span>,</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">是否 release</span></span></span><br><span class="line">  <span class="keyword">static</span> <span class="built_in">bool</span> <span class="keyword">get</span> isRelease =&gt; <span class="built_in">bool</span>.fromEnvironment(<span class="string">"dart.vm.product"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">init</span></span></span><br><span class="line">  <span class="keyword">static</span> Future init() <span class="keyword">async</span> &#123;</span><br><span class="line">    <span class="comment">// 运行初始</span></span><br><span class="line">    WidgetsFlutterBinding.ensureInitialized();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 工具初始</span></span><br><span class="line">    <span class="keyword">await</span> StorageUtil.init();</span><br><span class="line">    HttpUtil();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 读取离线用户信息</span></span><br><span class="line">    <span class="keyword">var</span> _profileJSON = StorageUtil().getJSON(STORAGE_USER_PROFILE_KEY);</span><br><span class="line">    <span class="keyword">if</span> (_profileJSON != <span class="keyword">null</span>) &#123;</span><br><span class="line">      profile = UserLoginResponseEntity.fromJson(_profileJSON);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// http 缓存</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// android 状态栏为透明的沉浸</span></span><br><span class="line">    <span class="keyword">if</span> (Platform.isAndroid) &#123;</span><br><span class="line">      SystemUiOverlayStyle systemUiOverlayStyle =</span><br><span class="line">          SystemUiOverlayStyle(statusBarColor: Colors.transparent);</span><br><span class="line">      SystemChrome.setSystemUIOverlayStyle(systemUiOverlayStyle);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 持久化 用户信息</span></span><br><span class="line">  <span class="keyword">static</span> Future&lt;<span class="built_in">bool</span>&gt; saveProfile(UserLoginResponseEntity userResponse) &#123;</span><br><span class="line">    profile = userResponse;</span><br><span class="line">    <span class="keyword">return</span> StorageUtil()</span><br><span class="line">        .setJSON(STORAGE_USER_PROFILE_KEY, userResponse.toJson());</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="调用运行"><a href="#调用运行" class="headerlink" title="调用运行"></a>调用运行</h3><ul><li>lib/main.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> main() =&gt; Global.init().then((e) =&gt; runApp(MyApp()));</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> Container();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Http-内存缓存"><a href="#Http-内存缓存" class="headerlink" title="Http 内存缓存"></a>Http 内存缓存</h2><h3 id="缓存策略"><a href="#缓存策略" class="headerlink" title="缓存策略"></a>缓存策略</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-03-25-14-46-53.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><ul><li>缓存工具类 lib/common/utils/net_cache.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'dart:collection'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:dio/dio.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/common/values/values.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CacheObject</span> </span>&#123;</span><br><span class="line">  CacheObject(<span class="keyword">this</span>.response)</span><br><span class="line">      : timeStamp = <span class="built_in">DateTime</span>.now().millisecondsSinceEpoch;</span><br><span class="line">  Response response;</span><br><span class="line">  <span class="built_in">int</span> timeStamp;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="built_in">bool</span> <span class="keyword">operator</span> ==(other) &#123;</span><br><span class="line">    <span class="keyword">return</span> response.hashCode == other.hashCode;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="built_in">int</span> <span class="keyword">get</span> hashCode =&gt; response.realUri.hashCode;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NetCache</span> <span class="keyword">extends</span> <span class="title">Interceptor</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 为确保迭代器顺序和对象插入时间一致顺序一致，我们使用LinkedHashMap</span></span><br><span class="line">  <span class="keyword">var</span> cache = LinkedHashMap&lt;<span class="built_in">String</span>, CacheObject&gt;();</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  onRequest(RequestOptions options) <span class="keyword">async</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!CACHE_ENABLE) <span class="keyword">return</span> options;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// refresh标记是否是"下拉刷新"</span></span><br><span class="line">    <span class="built_in">bool</span> refresh = options.extra[<span class="string">"refresh"</span>] == <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果是下拉刷新，先删除相关缓存</span></span><br><span class="line">    <span class="keyword">if</span> (refresh) &#123;</span><br><span class="line">      <span class="keyword">if</span> (options.extra[<span class="string">"list"</span>] == <span class="keyword">true</span>) &#123;</span><br><span class="line">        <span class="comment">//若是列表，则只要url中包含当前path的缓存全部删除（简单实现，并不精准）</span></span><br><span class="line">        cache.removeWhere((key, v) =&gt; key.contains(options.path));</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 如果不是列表，则只删除uri相同的缓存</span></span><br><span class="line">        delete(options.uri.toString());</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> options;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// get 请求，开启缓存</span></span><br><span class="line">    <span class="keyword">if</span> (options.extra[<span class="string">"noCache"</span>] != <span class="keyword">true</span> &amp;&amp;</span><br><span class="line">        options.method.toLowerCase() == <span class="string">'get'</span>) &#123;</span><br><span class="line">      <span class="built_in">String</span> key = options.extra[<span class="string">"cacheKey"</span>] ?? options.uri.toString();</span><br><span class="line">      <span class="keyword">var</span> ob = cache[key];</span><br><span class="line">      <span class="keyword">if</span> (ob != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="comment">//若缓存未过期，则返回缓存内容</span></span><br><span class="line">        <span class="keyword">if</span> ((<span class="built_in">DateTime</span>.now().millisecondsSinceEpoch - ob.timeStamp) / <span class="number">1000</span> &lt;</span><br><span class="line">            CACHE_MAXAGE) &#123;</span><br><span class="line">          <span class="keyword">return</span> cache[key].response;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="comment">//若已过期则删除缓存，继续向服务器请求</span></span><br><span class="line">          cache.remove(key);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  onError(DioError err) <span class="keyword">async</span> &#123;</span><br><span class="line">    <span class="comment">// 错误状态不缓存</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  onResponse(Response response) <span class="keyword">async</span> &#123;</span><br><span class="line">    <span class="comment">// 如果启用缓存，将返回结果保存到缓存</span></span><br><span class="line">    <span class="keyword">if</span> (CACHE_ENABLE) &#123;</span><br><span class="line">      _saveCache(response);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  _saveCache(Response object) &#123;</span><br><span class="line">    RequestOptions options = object.request;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 只缓存 get 的请求</span></span><br><span class="line">    <span class="keyword">if</span> (options.extra[<span class="string">"noCache"</span>] != <span class="keyword">true</span> &amp;&amp;</span><br><span class="line">        options.method.toLowerCase() == <span class="string">"get"</span>) &#123;</span><br><span class="line">      <span class="comment">// 如果缓存数量超过最大数量限制，则先移除最早的一条记录</span></span><br><span class="line">      <span class="keyword">if</span> (cache.length == CACHE_MAXCOUNT) &#123;</span><br><span class="line">        cache.remove(cache[cache.keys.first]);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="built_in">String</span> key = options.extra[<span class="string">"cacheKey"</span>] ?? options.uri.toString();</span><br><span class="line">      cache[key] = CacheObject(object);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">void</span> delete(<span class="built_in">String</span> key) &#123;</span><br><span class="line">    cache.remove(key);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>dio 封装 lib/common/utils/http.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加内存缓存</span></span><br><span class="line">HttpUtil._internal() &#123;</span><br><span class="line">  ...</span><br><span class="line">  dio.interceptors.add(NetCache());</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改 get 请求</span></span><br><span class="line"><span class="comment">/// <span class="markdown">restful get 操作</span></span></span><br><span class="line"><span class="comment">/// <span class="markdown">refresh 是否下拉刷新 默认 false</span></span></span><br><span class="line"><span class="comment">/// <span class="markdown">noCache 是否不缓存 默认 true</span></span></span><br><span class="line"><span class="comment">/// <span class="markdown">list 是否列表 默认 false</span></span></span><br><span class="line"><span class="comment">/// <span class="markdown">cacheKey 缓存key</span></span></span><br><span class="line">Future <span class="keyword">get</span>(</span><br><span class="line">  <span class="built_in">String</span> path, &#123;</span><br><span class="line">  <span class="built_in">dynamic</span> params,</span><br><span class="line">  Options options,</span><br><span class="line">  <span class="built_in">bool</span> refresh = <span class="keyword">false</span>,</span><br><span class="line">  <span class="built_in">bool</span> noCache = !CACHE_ENABLE,</span><br><span class="line">  <span class="built_in">bool</span> list = <span class="keyword">false</span>,</span><br><span class="line">  <span class="built_in">String</span> cacheKey,</span><br><span class="line">&#125;) <span class="keyword">async</span> &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    Options requestOptions = options ?? Options();</span><br><span class="line">    requestOptions = requestOptions.merge(extra: &#123;</span><br><span class="line">      <span class="string">"refresh"</span>: refresh,</span><br><span class="line">      <span class="string">"noCache"</span>: noCache,</span><br><span class="line">      <span class="string">"list"</span>: list,</span><br><span class="line">      <span class="string">"cacheKey"</span>: cacheKey,</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">dynamic</span>&gt; _authorization = getAuthorizationHeader();</span><br><span class="line">    <span class="keyword">if</span> (_authorization != <span class="keyword">null</span>) &#123;</span><br><span class="line">      requestOptions = requestOptions.merge(headers: _authorization);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> response = <span class="keyword">await</span> dio.<span class="keyword">get</span>(path,</span><br><span class="line">        queryParameters: params,</span><br><span class="line">        options: requestOptions,</span><br><span class="line">        cancelToken: cancelToken);</span><br><span class="line">    <span class="keyword">return</span> response.data;</span><br><span class="line">  &#125; <span class="keyword">on</span> DioError <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">    <span class="keyword">throw</span> createErrorEntity(e);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Http-Proxy-代理-Fiddle-抓包"><a href="#Http-Proxy-代理-Fiddle-抓包" class="headerlink" title="Http Proxy 代理 + Fiddle 抓包"></a>Http Proxy 代理 + Fiddle 抓包</h2><h3 id="安装-Fiddle"><a href="#安装-Fiddle" class="headerlink" title="安装 Fiddle"></a>安装 Fiddle</h3><p><a href="https://www.telerik.com/download/fiddler-everywhere" target="_blank" rel="noopener">https://www.telerik.com/download/fiddler-everywhere</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-03-26-14-03-16.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="dio-加入-proxy"><a href="#dio-加入-proxy" class="headerlink" title="dio 加入 proxy"></a>dio 加入 proxy</h3><ul><li>lib/common/utils/http.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!Global.isRelease &amp;&amp; PROXY_ENABLE) &#123;</span><br><span class="line">  (dio.httpClientAdapter <span class="keyword">as</span> DefaultHttpClientAdapter).onHttpClientCreate =</span><br><span class="line">      (client) &#123;</span><br><span class="line">    client.findProxy = (uri) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">"PROXY <span class="subst">$PROXY_IP</span>:<span class="subst">$PROXY_PORT</span>"</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">//代理工具会提供一个抓包的自签名证书，会通不过证书校验，所以我们禁用证书校验</span></span><br><span class="line">    client.badCertificateCallback =</span><br><span class="line">        (X509Certificate cert, <span class="built_in">String</span> host, <span class="built_in">int</span> port) =&gt; <span class="keyword">true</span>;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Iconfont-字体库"><a href="#Iconfont-字体库" class="headerlink" title="Iconfont 字体库"></a>Iconfont 字体库</h2><h3 id="引入流程"><a href="#引入流程" class="headerlink" title="引入流程"></a>引入流程</h3><ul><li>登录</li></ul><p><a href="https://www.iconfont.cn" target="_blank" rel="noopener">https://www.iconfont.cn</a></p><ul><li>创建字体项目</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-03-25-14-56-48.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>字体文件放入</li></ul><p>assets/fonts/iconfont.ttf</p><ul><li>pubspec.yaml</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">fonts:</span></span><br><span class="line">  <span class="string">...</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">family:</span> <span class="string">Iconfont</span></span><br><span class="line">    <span class="attr">fonts:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">asset:</span> <span class="string">assets/fonts/iconfont.ttf</span></span><br></pre></td></tr></table></figure><ul><li>lib/common/utils/iconfont.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Iconfont</span> </span>&#123;</span><br><span class="line">    <span class="comment">// iconName: share</span></span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">const</span> share = IconData(</span><br><span class="line">    <span class="number">0xe60d</span>,</span><br><span class="line">    fontFamily: <span class="string">'Iconfont'</span>,</span><br><span class="line">    matchTextDirection: <span class="keyword">true</span>,</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="自动生成字体库代码"><a href="#自动生成字体库代码" class="headerlink" title="自动生成字体库代码"></a>自动生成字体库代码</h3><p><a href="https://github.com/ymzuiku/iconfont_builder" target="_blank" rel="noopener">https://github.com/ymzuiku/iconfont_builder</a></p><ul><li>拉取项目、编译</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 拉取项目</span></span><br><span class="line">&gt; git <span class="built_in">clone</span> https://github.com/ymzuiku/iconfont_builder</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新包</span></span><br><span class="line">&gt; pub get</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装工具</span></span><br><span class="line">&gt; pub global activate iconfont_builder</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查环境配置</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$&#123;PATH&#125;</span>:~/.pub-cache/bin</span><br></pre></td></tr></table></figure><ul><li>参考我的配置</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># flutter sdk</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$&#123;PATH&#125;</span>:~/Documents/sdk/flutter/bin</span><br><span class="line"></span><br><span class="line"><span class="comment"># dart sdk</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$&#123;PATH&#125;</span>:~/Documents/sdk/flutter/bin/cache/dart-sdk/bin</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$&#123;PATH&#125;</span>:~/.pub-cache/bin</span><br><span class="line"></span><br><span class="line"><span class="comment"># flutter-io 国内镜像</span></span><br><span class="line"><span class="built_in">export</span> PUB_HOSTED_URL=https://pub.flutter-io.cn</span><br><span class="line"><span class="built_in">export</span> FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cn</span><br><span class="line"></span><br><span class="line"><span class="comment"># android</span></span><br><span class="line"><span class="built_in">export</span> ANDROID_HOME=~/Library/Android/sdk</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$&#123;PATH&#125;</span>:<span class="variable">$&#123;ANDROID_HOME&#125;</span>/platform-tools</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$&#123;PATH&#125;</span>:<span class="variable">$&#123;ANDROID_HOME&#125;</span>/tools</span><br></pre></td></tr></table></figure><ul><li>生成字体类</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> 你的项目根目录</span><br><span class="line">iconfont_builder --from ./assets/fonts --to ./lib/common/utils/iconfont.dart</span><br></pre></td></tr></table></figure><h2 id="编写-api-业务代码"><a href="#编写-api-业务代码" class="headerlink" title="编写 api 业务代码"></a>编写 api 业务代码</h2><ul><li>yapi 配置</li></ul><p>导入 doc/api.json</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-03-25-15-09-38.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>代码</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-03-25-15-06-42.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="搭建主界面框架"><a href="#搭建主界面框架" class="headerlink" title="搭建主界面框架"></a>搭建主界面框架</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-03-26-16-24-46.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>框架页面 lib/pages/application/application.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_ApplicationPageState</span> <span class="keyword">extends</span> <span class="title">State</span>&lt;<span class="title">ApplicationPage</span>&gt;</span></span><br><span class="line"><span class="class">    <span class="title">with</span> <span class="title">SingleTickerProviderStateMixin</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 当前 tab 页码</span></span><br><span class="line">  <span class="built_in">int</span> _page = <span class="number">0</span>;</span><br><span class="line">  <span class="comment">// tab 页标题</span></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; _tabTitles = [</span><br><span class="line">    <span class="string">'Welcome'</span>,</span><br><span class="line">    <span class="string">'Cagegory'</span>,</span><br><span class="line">    <span class="string">'Bookmarks'</span>,</span><br><span class="line">    <span class="string">'Account'</span></span><br><span class="line">  ];</span><br><span class="line">  <span class="comment">// 页控制器</span></span><br><span class="line">  PageController _pageController;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 底部导航项目</span></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">List</span>&lt;BottomNavigationBarItem&gt; _bottomTabs = &lt;BottomNavigationBarItem&gt;[...];</span><br><span class="line"></span><br><span class="line">  <span class="comment">// tab栏动画</span></span><br><span class="line">  <span class="keyword">void</span> _handleNavBarTap(<span class="built_in">int</span> index) &#123;</span><br><span class="line">    ...</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// tab栏页码切换</span></span><br><span class="line">  <span class="keyword">void</span> _handlePageChanged(<span class="built_in">int</span> page) &#123;</span><br><span class="line">    ...</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 顶部导航</span></span><br><span class="line">  Widget _buildAppBar() &#123;</span><br><span class="line">    <span class="keyword">return</span> Container();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 内容页</span></span><br><span class="line">  Widget _buildPageView() &#123;</span><br><span class="line">    <span class="keyword">return</span> Container();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 底部导航</span></span><br><span class="line">  Widget _buildBottomNavigationBar() &#123;</span><br><span class="line">    <span class="keyword">return</span> Container();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> Scaffold(</span><br><span class="line">      appBar: _buildAppBar(),</span><br><span class="line">      body: _buildPageView(),</span><br><span class="line">      bottomNavigationBar: _buildBottomNavigationBar(),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="编写首页代码"><a href="#编写首页代码" class="headerlink" title="编写首页代码"></a>编写首页代码</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-03-26-16-25-42.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>首页代码 lib/pages/main/main.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_MainPageState</span> <span class="keyword">extends</span> <span class="title">State</span>&lt;<span class="title">MainPage</span>&gt; </span>&#123;</span><br><span class="line">  NewsPageListResponseEntity _newsPageList; <span class="comment">// 新闻翻页</span></span><br><span class="line">  NewsRecommendResponseEntity _newsRecommend; <span class="comment">// 新闻推荐</span></span><br><span class="line">  <span class="built_in">List</span>&lt;CategoryResponseEntity&gt; _categories; <span class="comment">// 分类</span></span><br><span class="line">  <span class="built_in">List</span>&lt;ChannelResponseEntity&gt; _channels; <span class="comment">// 频道</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">String</span> _selCategoryCode; <span class="comment">// 选中的分类Code</span></span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="keyword">void</span> initState() &#123;</span><br><span class="line">    <span class="keyword">super</span>.initState();</span><br><span class="line">    _loadAllData();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 读取所有数据</span></span><br><span class="line">  _loadAllData() <span class="keyword">async</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 分类菜单</span></span><br><span class="line">  Widget _buildCategories() &#123;</span><br><span class="line">    <span class="keyword">return</span> Container();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 抽取前先实现业务</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 推荐阅读</span></span><br><span class="line">  Widget _buildRecommend() &#123;</span><br><span class="line">    <span class="keyword">return</span> Container();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 频道</span></span><br><span class="line">  Widget _buildChannels() &#123;</span><br><span class="line">    <span class="keyword">return</span> Container();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 新闻列表</span></span><br><span class="line">  Widget _buildNewsList() &#123;</span><br><span class="line">    <span class="keyword">return</span> Container();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// ad 广告条</span></span><br><span class="line">  <span class="comment">// 邮件订阅</span></span><br><span class="line">  Widget _buildEmailSubscribe() &#123;</span><br><span class="line">    <span class="keyword">return</span> Container();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> SingleChildScrollView(</span><br><span class="line">      child: Column(</span><br><span class="line">        children: &lt;Widget&gt;[</span><br><span class="line">          _buildCategories(),</span><br><span class="line">          _buildRecommend(),</span><br><span class="line">          _buildChannels(),</span><br><span class="line">          _buildNewsList(),</span><br><span class="line">          _buildEmailSubscribe(),</span><br><span class="line">        ],</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>抽取新闻分类 lib/pages/main/categories_widget.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">Widget newsCategoriesWidget(</span><br><span class="line">    &#123;<span class="built_in">List</span>&lt;CategoryResponseEntity&gt; categories,</span><br><span class="line">    <span class="built_in">String</span> selCategoryCode,</span><br><span class="line">    <span class="built_in">Function</span>(CategoryResponseEntity) onTap&#125;) &#123;</span><br><span class="line">  <span class="keyword">return</span> categories == <span class="keyword">null</span></span><br><span class="line">      ? Container()</span><br><span class="line">      : SingleChildScrollView(</span><br><span class="line">          scrollDirection: Axis.horizontal,</span><br><span class="line">          child: Row(</span><br><span class="line">            children: categories.map&lt;Widget&gt;((item) &#123;</span><br><span class="line">              <span class="keyword">return</span> Container(</span><br><span class="line">                alignment: Alignment.center,</span><br><span class="line">                height: duSetHeight(<span class="number">52</span>),</span><br><span class="line">                padding: EdgeInsets.symmetric(horizontal: <span class="number">8</span>),</span><br><span class="line">                child: GestureDetector(</span><br><span class="line">                  child: Text(</span><br><span class="line">                    item.title,</span><br><span class="line">                    style: TextStyle(</span><br><span class="line">                      color: selCategoryCode == item.code</span><br><span class="line">                          ? AppColors.secondaryElementText</span><br><span class="line">                          : AppColors.primaryText,</span><br><span class="line">                      fontSize: duSetFontSize(<span class="number">18</span>),</span><br><span class="line">                      fontFamily: <span class="string">'Montserrat'</span>,</span><br><span class="line">                      fontWeight: FontWeight.w600,</span><br><span class="line">                    ),</span><br><span class="line">                  ),</span><br><span class="line">                  onTap: () =&gt; onTap(item),</span><br><span class="line">                ),</span><br><span class="line">              );</span><br><span class="line">            &#125;).toList(),</span><br><span class="line">          ),</span><br><span class="line">        );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="蓝湖设计稿"><a href="#蓝湖设计稿" class="headerlink" title="蓝湖设计稿"></a>蓝湖设计稿</h2><p><a href="https://lanhuapp.com/url/lYuz1" target="_blank" rel="noopener">https://lanhuapp.com/url/lYuz1</a><br>密码: gSKl</p><blockquote><p>蓝湖现在收费了，所以查看标记还请自己上传 xd 设计稿<br>商业设计稿文件不好直接分享, 可以加微信联系 ducafecat</p></blockquote><h2 id="YAPI-接口管理"><a href="#YAPI-接口管理" class="headerlink" title="YAPI 接口管理"></a>YAPI 接口管理</h2><p><a href="http://yapi.demo.qunar.com/" target="_blank" rel="noopener">http://yapi.demo.qunar.com/</a></p><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><ul><li><a href="https://app.quicktype.io" target="_blank" rel="noopener">json to object quicktype</a></li><li><a href="https://www.telerik.com/download/fiddler-everywhere" target="_blank" rel="noopener">Fiddler 抓包</a></li><li><a href="https://www.iconfont.cn" target="_blank" rel="noopener">iconfont 阿里图标库</a></li><li><a href="https://github.com/ymzuiku/iconfont_builder" target="_blank" rel="noopener">Iconfont 生成工具</a></li></ul><h2 id="VSCode-插件"><a href="#VSCode-插件" class="headerlink" title="VSCode 插件"></a>VSCode 插件</h2><ul><li>Flutter、Dart</li><li><a href="https://marketplace.visualstudio.com/items?itemName=alexisvt.flutter-snippets" target="_blank" rel="noopener">Flutter Widget Snippets</a></li><li><a href="https://marketplace.visualstudio.com/items?itemName=Nash.awesome-flutter-snippets" target="_blank" rel="noopener">Awesome Flutter Snippets</a></li><li><a href="https://marketplace.visualstudio.com/items?itemName=quicktype.quicktype" target="_blank" rel="noopener">Paste JSON as Code</a></li><li><a href="https://marketplace.visualstudio.com/items?itemName=FelixAngelov.bloc" target="_blank" rel="noopener">bloc</a></li></ul><h2 id="视频-1"><a href="#视频-1" class="headerlink" title="视频"></a>视频</h2><ul><li><a href="https://space.bilibili.com/404904528/channel/detail?cid=106755" target="_blank" rel="noopener">b 站</a></li><li><a href="https://www.youtube.com/watch?v=Uucg6GGGBsY&amp;list=PL274L1n86T80VZR30KaLOKV6jqwTq5E8D" target="_blank" rel="noopener">油管镜像</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                   
      
    
    </summary>
    
      <category term="Flutter 实战从零开始" scheme="https://ducafecat.tech/categories/Flutter-%E5%AE%9E%E6%88%98%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B/"/>
    
    
      <category term="flutter" scheme="https://ducafecat.tech/tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>Flutter 实战从零开始 新闻客户端 - 04 YAPI接口管理、RESTful、生成代码、dio封装</title>
    <link href="https://ducafecat.tech/2020/03/16/flutter-project/flutter-project-news-04-entity-http/"/>
    <id>https://ducafecat.tech/2020/03/16/flutter-project/flutter-project-news-04-entity-http/</id>
    <published>2020-03-15T16:00:00.000Z</published>
    <updated>2020-07-04T06:29:29.891Z</updated>
    
    <content type="html"><![CDATA[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="bg.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h2><ul><li>前后端分离、契约开发模式</li><li>API 接口管理、工具</li><li>RESTful 接口规范</li><li>TOKEN 安全通讯</li><li>自动生成 entity 接口实体类</li><li>dio 封装</li><li>localstorage 本地存储</li><li>密码加密</li></ul><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><iframe src="//player.bilibili.com/player.html?bvid=BV1t7411R7tN&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="100%" height="400px"> </iframe><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><a href="https://github.com/ducafecat/flutter_learn_news/releases/tag/v1.0.4" target="_blank" rel="noopener">https://github.com/ducafecat/flutter_learn_news/releases/tag/v1.0.4</a></p><h2 id="1-接口管理"><a href="#1-接口管理" class="headerlink" title="1. 接口管理"></a>1. 接口管理</h2><h3 id="1-1-前后端分离、契约模式"><a href="#1-1-前后端分离、契约模式" class="headerlink" title="1.1 前后端分离、契约模式"></a>1.1 前后端分离、契约模式</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-03-17-14-01-41.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="1-2-常见接口管理工具"><a href="#1-2-常见接口管理工具" class="headerlink" title="1.2 常见接口管理工具"></a>1.2 常见接口管理工具</h3><ul><li>yapi<br><a href="https://github.com/YMFE/yapi" target="_blank" rel="noopener">https://github.com/YMFE/yapi</a></li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-03-17-14-55-25.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>easymock<br><a href="https://github.com/easy-mock/easy-mock" target="_blank" rel="noopener">https://github.com/easy-mock/easy-mock</a></li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-03-17-14-56-43.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>RAP2<br><a href="https://github.com/thx/RAP" target="_blank" rel="noopener">https://github.com/thx/RAP</a></li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-03-17-14-54-52.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>swagger<br><a href="https://swagger.io/" target="_blank" rel="noopener">https://swagger.io/</a></li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-03-17-14-54-02.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="1-3-yapi-接口管理工具（猫哥推荐）"><a href="#1-3-yapi-接口管理工具（猫哥推荐）" class="headerlink" title="1.3 yapi 接口管理工具（猫哥推荐）"></a>1.3 yapi 接口管理工具（猫哥推荐）</h3><p><a href="http://yapi.demo.qunar.com/" target="_blank" rel="noopener">http://yapi.demo.qunar.com/</a></p><ul><li>输入</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-03-17-14-58-00.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>输出</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-03-17-14-58-20.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="1-4-mock-模拟数据"><a href="#1-4-mock-模拟数据" class="headerlink" title="1.4 mock 模拟数据"></a>1.4 mock 模拟数据</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-03-17-14-59-40.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="1-5-单元测试"><a href="#1-5-单元测试" class="headerlink" title="1.5 单元测试"></a>1.5 单元测试</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-03-17-15-00-25.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="1-6-swagger-导入"><a href="#1-6-swagger-导入" class="headerlink" title="1.6 swagger 导入"></a>1.6 swagger 导入</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-03-17-15-00-49.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="2-restful-接口风格"><a href="#2-restful-接口风格" class="headerlink" title="2. restful 接口风格"></a>2. restful 接口风格</h2><ul><li><a href="https://en.wikipedia.org/wiki/Representational_state_transfer" target="_blank" rel="noopener">REST wiki</a></li><li><a href="http://www.ruanyifeng.com/blog/2011/09/restful.html" target="_blank" rel="noopener">理解 RESTful 架构 阮一峰</a></li><li><a href="http://www.ruanyifeng.com/blog/2014/05/restful_api.html" target="_blank" rel="noopener">RESTful API 设计指南 阮一峰</a></li><li><a href="http://www.ruanyifeng.com/blog/2018/10/restful-api-best-practices.html" target="_blank" rel="noopener">RESTful API 最佳实践 阮一峰</a></li><li><a href="https://www.runoob.com/w3cnote/restful-architecture.html" target="_blank" rel="noopener">RESTful 架构详解</a></li></ul><h3 id="2-1-http-操作方式"><a href="#2-1-http-操作方式" class="headerlink" title="2.1 http 操作方式"></a>2.1 http 操作方式</h3><ul><li>GET 取数据</li><li>POST 新建数据</li><li>PUT 更新全部数据</li><li>PATCH 更新部分数据</li><li>DELETE 删除数据</li></ul><h4 id="例子"><a href="#例子" class="headerlink" title="例子:"></a>例子:</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET /zoos：列出所有动物园</span><br><span class="line">POST /zoos：新建一个动物园</span><br><span class="line">GET /zoos/ID：获取某个指定动物园的信息</span><br><span class="line">PUT /zoos/ID：更新某个指定动物园的信息（提供该动物园的全部信息）</span><br><span class="line">PATCH /zoos/ID：更新某个指定动物园的信息（提供该动物园的部分信息）</span><br><span class="line">DELETE /zoos/ID：删除某个动物园</span><br><span class="line">GET /zoos/ID/animals：列出某个指定动物园的所有动物</span><br><span class="line">DELETE /zoos/ID/animals/ID：删除某个指定动物园的指定动物</span><br></pre></td></tr></table></figure><h3 id="2-2-state-状态控制"><a href="#2-2-state-状态控制" class="headerlink" title="2.2 state 状态控制"></a>2.2 state 状态控制</h3><ul><li>200 OK</li><li>400 错误的请求，比如数据结构不对</li><li>401 需要登录认证</li><li>403 已登录，但是当前资源没有授权</li><li>404 找不到，地址错误</li><li>500 服务程序错误</li><li>502 服务网关错误</li><li>503 服务挂了</li><li>504 服务网关超时</li></ul><h3 id="2-3-优秀实践"><a href="#2-3-优秀实践" class="headerlink" title="2.3 优秀实践"></a>2.3 优秀实践</h3><ul><li><a href="https://developer.github.com/v3/" target="_blank" rel="noopener">Github REST API v3</a></li></ul><h2 id="3-token-安全通讯"><a href="#3-token-安全通讯" class="headerlink" title="3. token 安全通讯"></a>3. token 安全通讯</h2><h3 id="3-1-基于令牌的安全机制"><a href="#3-1-基于令牌的安全机制" class="headerlink" title="3.1 基于令牌的安全机制"></a>3.1 基于令牌的安全机制</h3><ul><li>流程</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-03-17-15-58-06.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>思路</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-03-17-16-29-41.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="3-2-Bearer-Type-Access-Token"><a href="#3-2-Bearer-Type-Access-Token" class="headerlink" title="3.2 Bearer Type Access Token"></a>3.2 Bearer Type Access Token</h3><p>在通讯 HTTP HEADER 头中加入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">GET /resource HTTP/1.1</span><br><span class="line">Host: server.example.com</span><br><span class="line">Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c</span><br></pre></td></tr></table></figure><h3 id="3-3-JWT"><a href="#3-3-JWT" class="headerlink" title="3.3 JWT"></a>3.3 JWT</h3><ul><li><a href="https://jwt.io/" target="_blank" rel="noopener">https://jwt.io/</a></li><li><a href="http://www.ruanyifeng.com/blog/2018/07/json_web_token-tutorial.html" target="_blank" rel="noopener">JSON Web Token 入门教程</a></li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-03-17-16-03-17.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="4-自动生成-entity"><a href="#4-自动生成-entity" class="headerlink" title="4. 自动生成 entity"></a>4. 自动生成 entity</h2><h3 id="4-1-json-serializable-（官方）"><a href="#4-1-json-serializable-（官方）" class="headerlink" title="4.1 json_serializable （官方）"></a>4.1 json_serializable （官方）</h3><ul><li><a href="https://pub.dev/packages/json_serializable" target="_blank" rel="noopener">https://pub.dev/packages/json_serializable</a></li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-03-17-16-37-25.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="4-2-json-to-code-（猫哥推荐）"><a href="#4-2-json-to-code-（猫哥推荐）" class="headerlink" title="4.2 json to code （猫哥推荐）"></a>4.2 json to code （猫哥推荐）</h3><ul><li><a href="https://app.quicktype.io/" target="_blank" rel="noopener">https://app.quicktype.io/</a></li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-03-17-16-35-57.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>vscode 插件</li></ul><p><a href="https://marketplace.visualstudio.com/items?itemName=quicktype.quicktype" target="_blank" rel="noopener">https://marketplace.visualstudio.com/items?itemName=quicktype.quicktype</a></p><h2 id="5-dio-封装"><a href="#5-dio-封装" class="headerlink" title="5. dio 封装"></a>5. dio 封装</h2><h3 id="5-1-单例模式"><a href="#5-1-单例模式" class="headerlink" title="5.1 单例模式"></a>5.1 单例模式</h3><ul><li>dio</li></ul><p><a href="https://pub.dev/packages/dio" target="_blank" rel="noopener">https://pub.dev/packages/dio</a></p><ul><li>lib/common/utils/http.dart</li></ul><p>单例常见封装方式</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HttpUtil</span> </span>&#123;</span><br><span class="line">  <span class="keyword">static</span> HttpUtil _instance = HttpUtil._internal();</span><br><span class="line">  <span class="keyword">factory</span> HttpUtil() =&gt; _instance;</span><br><span class="line"></span><br><span class="line">  Dio dio;</span><br><span class="line">  CancelToken cancelToken = <span class="keyword">new</span> CancelToken();</span><br><span class="line"></span><br><span class="line">  HttpUtil._internal() &#123;</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure><h3 id="5-2-维护-token"><a href="#5-2-维护-token" class="headerlink" title="5.2 维护 token"></a>5.2 维护 token</h3><p>从本地 storage 中读取</p><ul><li>localstorage</li></ul><p><a href="https://pub.flutter-io.cn/packages/localstorage" target="_blank" rel="noopener">https://pub.flutter-io.cn/packages/localstorage</a></p><ul><li>getLocalOptions()</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Options getLocalOptions() &#123;</span><br><span class="line">  Options options;</span><br><span class="line">  <span class="built_in">String</span> token = StorageUtil().getItem(STORAGE_USER_TOKEN_KEY);</span><br><span class="line">  <span class="keyword">if</span> (token != <span class="keyword">null</span>) &#123;</span><br><span class="line">    options = Options(headers: &#123;</span><br><span class="line">      <span class="string">'Authorization'</span>: <span class="string">'Bearer <span class="subst">$token</span>'</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> options;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-3-处理异常"><a href="#5-3-处理异常" class="headerlink" title="5.3 处理异常"></a>5.3 处理异常</h3><p>格式化，错误信息，进行差别对待</p><ul><li>createErrorEntity()</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line">ErrorEntity createErrorEntity(DioError error) &#123;</span><br><span class="line">  <span class="keyword">switch</span> (error.type) &#123;</span><br><span class="line">    <span class="keyword">case</span> DioErrorType.CANCEL:</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">return</span> ErrorEntity(code: <span class="number">-1</span>, message: <span class="string">"请求取消"</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> DioErrorType.CONNECT_TIMEOUT:</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">return</span> ErrorEntity(code: <span class="number">-1</span>, message: <span class="string">"连接超时"</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> DioErrorType.SEND_TIMEOUT:</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">return</span> ErrorEntity(code: <span class="number">-1</span>, message: <span class="string">"请求超时"</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> DioErrorType.RECEIVE_TIMEOUT:</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">return</span> ErrorEntity(code: <span class="number">-1</span>, message: <span class="string">"响应超时"</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> DioErrorType.RESPONSE:</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">          <span class="built_in">int</span> errCode = error.response.statusCode;</span><br><span class="line">          <span class="comment">// String errMsg = error.response.statusMessage;</span></span><br><span class="line">          <span class="comment">// return ErrorEntity(code: errCode, message: errMsg);</span></span><br><span class="line">          <span class="keyword">switch</span> (errCode) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">400</span>:</span><br><span class="line">              &#123;</span><br><span class="line">                <span class="keyword">return</span> ErrorEntity(code: errCode, message: <span class="string">"请求语法错误"</span>);</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">401</span>:</span><br><span class="line">              &#123;</span><br><span class="line">                <span class="keyword">return</span> ErrorEntity(code: errCode, message: <span class="string">"没有权限"</span>);</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">403</span>:</span><br><span class="line">              &#123;</span><br><span class="line">                <span class="keyword">return</span> ErrorEntity(code: errCode, message: <span class="string">"服务器拒绝执行"</span>);</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">404</span>:</span><br><span class="line">              &#123;</span><br><span class="line">                <span class="keyword">return</span> ErrorEntity(code: errCode, message: <span class="string">"无法连接服务器"</span>);</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">405</span>:</span><br><span class="line">              &#123;</span><br><span class="line">                <span class="keyword">return</span> ErrorEntity(code: errCode, message: <span class="string">"请求方法被禁止"</span>);</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">500</span>:</span><br><span class="line">              &#123;</span><br><span class="line">                <span class="keyword">return</span> ErrorEntity(code: errCode, message: <span class="string">"服务器内部错误"</span>);</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">502</span>:</span><br><span class="line">              &#123;</span><br><span class="line">                <span class="keyword">return</span> ErrorEntity(code: errCode, message: <span class="string">"无效的请求"</span>);</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">503</span>:</span><br><span class="line">              &#123;</span><br><span class="line">                <span class="keyword">return</span> ErrorEntity(code: errCode, message: <span class="string">"服务器挂了"</span>);</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">505</span>:</span><br><span class="line">              &#123;</span><br><span class="line">                <span class="keyword">return</span> ErrorEntity(code: errCode, message: <span class="string">"不支持HTTP协议请求"</span>);</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">              &#123;</span><br><span class="line">                <span class="comment">// return ErrorEntity(code: errCode, message: "未知错误");</span></span><br><span class="line">                <span class="keyword">return</span> ErrorEntity(</span><br><span class="line">                    code: errCode, message: error.response.statusMessage);</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125; <span class="keyword">on</span> Exception <span class="keyword">catch</span> (_) &#123;</span><br><span class="line">          <span class="keyword">return</span> ErrorEntity(code: <span class="number">-1</span>, message: <span class="string">"未知错误"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">return</span> ErrorEntity(code: <span class="number">-1</span>, message: error.message);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-登录调用"><a href="#6-登录调用" class="headerlink" title="6. 登录调用"></a>6. 登录调用</h2><h3 id="6-1-编写-api-接口"><a href="#6-1-编写-api-接口" class="headerlink" title="6.1 编写 api 接口"></a>6.1 编写 api 接口</h3><ul><li>lib/common/apis/user.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/common/entitys/entitys.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/common/utils/utils.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// <span class="markdown">用户</span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserAPI</span> </span>&#123;</span><br><span class="line">  <span class="comment">/// <span class="markdown">登录</span></span></span><br><span class="line">  <span class="keyword">static</span> Future&lt;UserResponseEntity&gt; login(&#123;UserRequestEntity params&#125;) <span class="keyword">async</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> response = <span class="keyword">await</span> HttpUtil().post(<span class="string">'/user/login'</span>, params: params);</span><br><span class="line">    <span class="keyword">return</span> UserResponseEntity.fromJson(response);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-2-密码加密"><a href="#6-2-密码加密" class="headerlink" title="6.2 密码加密"></a>6.2 密码加密</h3><ul><li>crypto</li></ul><p><a href="https://pub.dev/packages/crypto" target="_blank" rel="noopener">https://pub.dev/packages/crypto</a></p><ul><li>lib/common/utils/security.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'dart:convert'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:crypto/crypto.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// <span class="markdown">SHA256</span></span></span><br><span class="line"><span class="built_in">String</span> duSHA256(<span class="built_in">String</span> input) &#123;</span><br><span class="line">  <span class="built_in">String</span> salt = <span class="string">'EIpWsyfiy@R@X#qn17!StJNdZK1fFF8iV6ffN!goZkqt#JxO'</span>; <span class="comment">// 加盐</span></span><br><span class="line">  <span class="keyword">var</span> bytes = utf8.encode(input + salt);</span><br><span class="line">  <span class="keyword">var</span> digest = sha256.convert(bytes);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> digest.toString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-3-调用接口"><a href="#6-3-调用接口" class="headerlink" title="6.3 调用接口"></a>6.3 调用接口</h3><ul><li>lib/pages/sign_in/sign_in.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 执行登录操作</span></span><br><span class="line">_handleSignIn() <span class="keyword">async</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (!duIsEmail(_emailController.value.text)) &#123;</span><br><span class="line">    toastInfo(msg: <span class="string">'请正确输入邮件'</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (!duCheckStringLength(_passController.value.text, <span class="number">6</span>)) &#123;</span><br><span class="line">    toastInfo(msg: <span class="string">'密码不能小于6位'</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  UserRequestEntity params = UserRequestEntity(</span><br><span class="line">    email: _emailController.value.text,</span><br><span class="line">    password: duSHA256(_passController.value.text),</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">  UserResponseEntity res = <span class="keyword">await</span> UserAPI.login(params: params);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 写本地 access_token , 不写全局，业务：离线登录</span></span><br><span class="line">  <span class="comment">// 全局数据 gUser</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="YAPI-接口管理"><a href="#YAPI-接口管理" class="headerlink" title="YAPI 接口管理"></a>YAPI 接口管理</h2><p><a href="http://yapi.demo.qunar.com/" target="_blank" rel="noopener">http://yapi.demo.qunar.com/</a></p><h2 id="蓝湖设计稿"><a href="#蓝湖设计稿" class="headerlink" title="蓝湖设计稿"></a>蓝湖设计稿</h2><p><a href="https://lanhuapp.com/url/lYuz1" target="_blank" rel="noopener">https://lanhuapp.com/url/lYuz1</a><br>密码: gSKl</p><blockquote><p>蓝湖现在收费了，所以查看标记还请自己上传 xd 设计稿<br>商业设计稿文件不好直接分享, 可以加微信联系 ducafecat</p></blockquote><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><p>RESTful</p><ul><li><a href="https://en.wikipedia.org/wiki/Representational_state_transfer" target="_blank" rel="noopener">REST wiki</a></li><li><a href="http://www.ruanyifeng.com/blog/2011/09/restful.html" target="_blank" rel="noopener">理解 RESTful 架构 阮一峰</a></li><li><a href="http://www.ruanyifeng.com/blog/2014/05/restful_api.html" target="_blank" rel="noopener">RESTful API 设计指南 阮一峰</a></li><li><a href="http://www.ruanyifeng.com/blog/2018/10/restful-api-best-practices.html" target="_blank" rel="noopener">RESTful API 最佳实践 阮一峰</a></li><li><a href="https://www.runoob.com/w3cnote/restful-architecture.html" target="_blank" rel="noopener">RESTful 架构详解</a></li></ul></li><li><p>Flutter packages</p><ul><li><a href="https://pub.flutter-io.cn/packages/localstorage" target="_blank" rel="noopener">localstorage</a></li><li><a href="https://pub.dev/packages/json_serializable" target="_blank" rel="noopener">json_serializable</a></li><li><a href="https://pub.dev/packages/dio" target="_blank" rel="noopener">dio</a></li><li><a href="https://pub.dev/packages/crypto" target="_blank" rel="noopener">crypto</a></li></ul></li><li><p>VSCode 插件</p><ul><li><a href="https://marketplace.visualstudio.com/items?itemName=Nash.awesome-flutter-snippets" target="_blank" rel="noopener">Awesome Flutter Snippets</a></li><li><a href="https://marketplace.visualstudio.com/items?itemName=quicktype.quicktype" target="_blank" rel="noopener">Paste JSON as Code</a></li></ul></li></ul><h2 id="视频-1"><a href="#视频-1" class="headerlink" title="视频"></a>视频</h2><ul><li><a href="https://space.bilibili.com/404904528/channel/detail?cid=106755" target="_blank" rel="noopener">b 站</a></li><li><a href="https://www.youtube.com/watch?v=Uucg6GGGBsY&amp;list=PL274L1n86T80VZR30KaLOKV6jqwTq5E8D" target="_blank" rel="noopener">油管镜像</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                   
      
    
    </summary>
    
      <category term="Flutter 实战从零开始" scheme="https://ducafecat.tech/categories/Flutter-%E5%AE%9E%E6%88%98%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B/"/>
    
    
      <category term="flutter" scheme="https://ducafecat.tech/tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>Flutter 实战从零开始 新闻客户端 - 03 静态路由、组件抽取、登录注册界面</title>
    <link href="https://ducafecat.tech/2020/03/12/flutter-project/flutter-project-news-03-sign-in-up/"/>
    <id>https://ducafecat.tech/2020/03/12/flutter-project/flutter-project-news-03-sign-in-up/</id>
    <published>2020-03-11T16:00:00.000Z</published>
    <updated>2020-07-04T06:26:49.275Z</updated>
    
    <content type="html"><![CDATA[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="bg.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h2><ul><li>静态路由</li><li>带阴影的椭圆图标</li><li>输入有效性校验</li><li>组件抽取方法</li><li>通用组件、业务组件</li><li>程序目录组织</li><li>抽取透明导航栏</li><li>toast 提示组件</li></ul><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><iframe src="//player.bilibili.com/player.html?bvid=BV1rE411G7se&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="100%" height="400px"> </iframe><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><a href="https://github.com/ducafecat/flutter_learn_news/releases/tag/v1.0.3" target="_blank" rel="noopener">https://github.com/ducafecat/flutter_learn_news/releases/tag/v1.0.3</a></p><h2 id="1-静态路由"><a href="#1-静态路由" class="headerlink" title="1 静态路由"></a>1 静态路由</h2><h3 id="1-1-定义静态路由"><a href="#1-1-定义静态路由" class="headerlink" title="1.1 定义静态路由"></a>1.1 定义静态路由</h3><ul><li><p>登录页 lib/pages/sign_in/sign_in.dart</p></li><li><p>注册页 lib/pages/sign_up/sign_up.dart</p></li><li><p>静态路由 lib/routes.dart</p></li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/pages/sign_in/sign_in.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/pages/sign_up/sign_up.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// <span class="markdown">静态路由</span></span></span><br><span class="line"><span class="keyword">var</span> staticRoutes = &#123;</span><br><span class="line">  <span class="string">"/sign-in"</span>: (context) =&gt; SignInPage(), <span class="comment">// 登录</span></span><br><span class="line">  <span class="string">"/sign-up"</span>: (context) =&gt; SignUpPage(), <span class="comment">// 注册</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="1-2-注册静态路由"><a href="#1-2-注册静态路由" class="headerlink" title="1.2 注册静态路由"></a>1.2 注册静态路由</h3><ul><li>lib/main.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/pages/welcome/welcome.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/routes.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main() =&gt; runApp(MyApp());</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line">      title: <span class="string">'ducafecat.tech'</span>,</span><br><span class="line">      home: WelcomePage(),</span><br><span class="line">      routes: staticRoutes,</span><br><span class="line">      debugShowCheckedModeBanner: <span class="keyword">false</span>,</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-登录界面"><a href="#2-登录界面" class="headerlink" title="2 登录界面"></a>2 登录界面</h2><h3 id="2-1-维护色彩常量"><a href="#2-1-维护色彩常量" class="headerlink" title="2.1 维护色彩常量"></a>2.1 维护色彩常量</h3><ul><li>lib/common/values/colors.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'dart:ui'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AppColors</span> </span>&#123;</span><br><span class="line">  <span class="comment">/// <span class="markdown">主背景 白色</span></span></span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">const</span> Color primaryBackground = Color.fromARGB(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">主文本 灰色</span></span></span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">const</span> Color primaryText = Color.fromARGB(<span class="number">255</span>, <span class="number">45</span>, <span class="number">45</span>, <span class="number">47</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">主控件-背景 蓝色</span></span></span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">const</span> Color primaryElement = Color.fromARGB(<span class="number">255</span>, <span class="number">41</span>, <span class="number">103</span>, <span class="number">255</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">主控件-文本 白色</span></span></span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">const</span> Color primaryElementText = Color.fromARGB(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// *****************************************</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">第二种控件-背景色 淡灰色</span></span></span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">const</span> Color secondaryElement = Color.fromARGB(<span class="number">255</span>, <span class="number">246</span>, <span class="number">246</span>, <span class="number">246</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">第二种控件-文本 浅蓝色</span></span></span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">const</span> Color secondaryElementText = Color.fromARGB(<span class="number">255</span>, <span class="number">41</span>, <span class="number">103</span>, <span class="number">255</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// *****************************************</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">第三种控件-背景色 石墨色</span></span></span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">const</span> Color thirdElement = Color.fromARGB(<span class="number">255</span>, <span class="number">45</span>, <span class="number">45</span>, <span class="number">47</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-2-程序结构"><a href="#2-2-程序结构" class="headerlink" title="2.2 程序结构"></a>2.2 程序结构</h3><ul><li>lib/pages/sign_in/sign_in.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/common/utils/utils.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/common/values/values.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/common/widgets/widgets.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SignInPage</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span> </span>&#123;</span><br><span class="line">  SignInPage(&#123;Key key&#125;) : <span class="keyword">super</span>(key: key);</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  _SignInPageState createState() =&gt; _SignInPageState();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_SignInPageState</span> <span class="keyword">extends</span> <span class="title">State</span>&lt;<span class="title">SignInPage</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// logo</span></span><br><span class="line">  Widget _buildLogo() &#123;</span><br><span class="line">    <span class="keyword">return</span> Container();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 登录表单</span></span><br><span class="line">  Widget _buildInputForm() &#123;</span><br><span class="line">    <span class="keyword">return</span> Container();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 第三方登录</span></span><br><span class="line">  Widget _buildThirdPartyLogin() &#123;</span><br><span class="line">    <span class="keyword">return</span> Container();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 注册按钮</span></span><br><span class="line">  Widget _buildSignupButton() &#123;</span><br><span class="line">    <span class="keyword">return</span> Container();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> Scaffold(</span><br><span class="line">      resizeToAvoidBottomInset: <span class="keyword">false</span>,</span><br><span class="line">      body: Center(</span><br><span class="line">        child: Column(</span><br><span class="line">          children: &lt;Widget&gt;[</span><br><span class="line">            _buildLogo(),</span><br><span class="line">            _buildInputForm(),</span><br><span class="line">            Spacer(),</span><br><span class="line">            _buildThirdPartyLogin(),</span><br><span class="line">            _buildSignupButton(),</span><br><span class="line">          ],</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-3-画带阴影的椭圆图标"><a href="#2-3-画带阴影的椭圆图标" class="headerlink" title="2.3 画带阴影的椭圆图标"></a>2.3 画带阴影的椭圆图标</h3><ul><li>lib/pages/sign_in/sign_in.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// logo</span></span><br><span class="line">Widget _buildLogo() &#123;</span><br><span class="line">  <span class="keyword">return</span> Container(</span><br><span class="line">    width: duSetWidth(<span class="number">110</span>),</span><br><span class="line">    margin: EdgeInsets.only(top: duSetHeight(<span class="number">40</span> + <span class="number">44.0</span>)), <span class="comment">// 顶部系统栏 44px</span></span><br><span class="line">    child: Column(</span><br><span class="line">      crossAxisAlignment: CrossAxisAlignment.stretch,</span><br><span class="line">      children: [</span><br><span class="line">        Container(</span><br><span class="line">          height: duSetWidth(<span class="number">76</span>),</span><br><span class="line">          width: duSetWidth(<span class="number">76</span>),</span><br><span class="line">          margin: EdgeInsets.symmetric(horizontal: duSetWidth(<span class="number">15</span>)),</span><br><span class="line">          child: Stack(</span><br><span class="line">            alignment: Alignment.center,</span><br><span class="line">            children: [</span><br><span class="line">              Positioned(</span><br><span class="line">                left: <span class="number">0</span>,</span><br><span class="line">                top: <span class="number">0</span>,</span><br><span class="line">                right: <span class="number">0</span>,</span><br><span class="line">                child: Container(</span><br><span class="line">                  height: duSetWidth(<span class="number">76</span>),</span><br><span class="line">                  decoration: BoxDecoration(</span><br><span class="line">                    color: AppColors.primaryBackground,</span><br><span class="line">                    boxShadow: [</span><br><span class="line">                      Shadows.primaryShadow,</span><br><span class="line">                    ],</span><br><span class="line">                    borderRadius: BorderRadius.all(</span><br><span class="line">                        Radius.circular(duSetWidth(<span class="number">76</span> * <span class="number">0.5</span>))), <span class="comment">// 父容器的50%</span></span><br><span class="line">                  ),</span><br><span class="line">                  child: Container(),</span><br><span class="line">                ),</span><br><span class="line">              ),</span><br><span class="line">              Positioned(</span><br><span class="line">                top: duSetWidth(<span class="number">13</span>),</span><br><span class="line">                child: Image.asset(</span><br><span class="line">                  <span class="string">"assets/images/logo.png"</span>,</span><br><span class="line">                  fit: BoxFit.none,</span><br><span class="line">                ),</span><br><span class="line">              ),</span><br><span class="line">            ],</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">        Container(</span><br><span class="line">          margin: EdgeInsets.only(top: duSetHeight(<span class="number">15</span>)),</span><br><span class="line">          child: Text(</span><br><span class="line">            <span class="string">"SECTOR"</span>,</span><br><span class="line">            textAlign: TextAlign.center,</span><br><span class="line">            style: TextStyle(</span><br><span class="line">              color: AppColors.primaryText,</span><br><span class="line">              fontFamily: <span class="string">"Montserrat"</span>,</span><br><span class="line">              fontWeight: FontWeight.w600,</span><br><span class="line">              fontSize: duSetFontSize(<span class="number">24</span>),</span><br><span class="line">              height: <span class="number">1</span>,</span><br><span class="line">            ),</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">        Text(</span><br><span class="line">          <span class="string">"news"</span>,</span><br><span class="line">          textAlign: TextAlign.center,</span><br><span class="line">          style: TextStyle(</span><br><span class="line">            color: AppColors.primaryText,</span><br><span class="line">            fontFamily: <span class="string">"Avenir"</span>,</span><br><span class="line">            fontWeight: FontWeight.w400,</span><br><span class="line">            fontSize: duSetFontSize(<span class="number">16</span>),</span><br><span class="line">            height: <span class="number">1</span>,</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">      ],</span><br><span class="line">    ),</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-4-抽取输入框"><a href="#2-4-抽取输入框" class="headerlink" title="2.4 抽取输入框"></a>2.4 抽取输入框</h3><ul><li>lib/common/widgets/input.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// <span class="markdown">输入框</span></span></span><br><span class="line">Widget inputTextEdit(&#123;</span><br><span class="line">  <span class="meta">@required</span> TextEditingController controller,</span><br><span class="line">  TextInputType keyboardType = TextInputType.text,</span><br><span class="line">  <span class="built_in">String</span> hintText,</span><br><span class="line">  <span class="built_in">bool</span> isPassword = <span class="keyword">false</span>,</span><br><span class="line">  <span class="built_in">double</span> marginTop = <span class="number">15</span>,</span><br><span class="line">&#125;) &#123;</span><br><span class="line">  <span class="keyword">return</span> Container(</span><br><span class="line">    height: duSetHeight(<span class="number">44</span>),</span><br><span class="line">    margin: EdgeInsets.only(top: duSetHeight(marginTop)),</span><br><span class="line">    decoration: BoxDecoration(</span><br><span class="line">      color: AppColors.secondaryElement,</span><br><span class="line">      borderRadius: Radii.k6pxRadius,</span><br><span class="line">    ),</span><br><span class="line">    child: TextField(</span><br><span class="line">      controller: controller,</span><br><span class="line">      keyboardType: keyboardType,</span><br><span class="line">      decoration: InputDecoration(</span><br><span class="line">        hintText: hintText,</span><br><span class="line">        contentPadding: EdgeInsets.fromLTRB(<span class="number">20</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">9</span>),</span><br><span class="line">        border: InputBorder.none,</span><br><span class="line">      ),</span><br><span class="line">      style: TextStyle(</span><br><span class="line">        color: AppColors.primaryText,</span><br><span class="line">        fontFamily: <span class="string">"Avenir"</span>,</span><br><span class="line">        fontWeight: FontWeight.w400,</span><br><span class="line">        fontSize: duSetFontSize(<span class="number">18</span>),</span><br><span class="line">      ),</span><br><span class="line">      maxLines: <span class="number">1</span>,</span><br><span class="line">      autocorrect: <span class="keyword">false</span>, <span class="comment">// 自动纠正</span></span><br><span class="line">      obscureText: isPassword, <span class="comment">// 隐藏输入内容, 密码框</span></span><br><span class="line">    ),</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-5-抽取扁平按钮"><a href="#2-5-抽取扁平按钮" class="headerlink" title="2.5 抽取扁平按钮"></a>2.5 抽取扁平按钮</h3><ul><li>lib/common/widgets/button.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// <span class="markdown">扁平圆角按钮</span></span></span><br><span class="line">Widget btnFlatButtonWidget(&#123;</span><br><span class="line">  <span class="meta">@required</span> VoidCallback onPressed,</span><br><span class="line">  <span class="built_in">double</span> width = <span class="number">140</span>,</span><br><span class="line">  <span class="built_in">double</span> height = <span class="number">44</span>,</span><br><span class="line">  Color gbColor = AppColors.primaryElement,</span><br><span class="line">  <span class="built_in">String</span> title = <span class="string">"button"</span>,</span><br><span class="line">  Color fontColor = AppColors.primaryElementText,</span><br><span class="line">  <span class="built_in">double</span> fontSize = <span class="number">18</span>,</span><br><span class="line">  <span class="built_in">String</span> fontName = <span class="string">"Montserrat"</span>,</span><br><span class="line">  FontWeight fontWeight = FontWeight.w400,</span><br><span class="line">&#125;) &#123;</span><br><span class="line">  <span class="keyword">return</span> Container(</span><br><span class="line">    width: duSetWidth(width),</span><br><span class="line">    height: duSetHeight(height),</span><br><span class="line">    child: FlatButton(</span><br><span class="line">      onPressed: onPressed,</span><br><span class="line">      color: gbColor,</span><br><span class="line">      shape: RoundedRectangleBorder(</span><br><span class="line">        borderRadius: Radii.k6pxRadius,</span><br><span class="line">      ),</span><br><span class="line">      child: Text(</span><br><span class="line">        title,</span><br><span class="line">        textAlign: TextAlign.center,</span><br><span class="line">        style: TextStyle(</span><br><span class="line">          color: fontColor,</span><br><span class="line">          fontFamily: fontName,</span><br><span class="line">          fontWeight: fontWeight,</span><br><span class="line">          fontSize: duSetFontSize(fontSize),</span><br><span class="line">          height: <span class="number">1</span>,</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    ),</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-6-抽取社交登录按钮"><a href="#2-6-抽取社交登录按钮" class="headerlink" title="2.6 抽取社交登录按钮"></a>2.6 抽取社交登录按钮</h3><ul><li>lib/common/widgets/button.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// <span class="markdown">第三方按钮</span></span></span><br><span class="line">Widget btnFlatButtonBorderOnlyWidget(&#123;</span><br><span class="line">  <span class="meta">@required</span> VoidCallback onPressed,</span><br><span class="line">  <span class="built_in">double</span> width = <span class="number">88</span>,</span><br><span class="line">  <span class="built_in">double</span> height = <span class="number">44</span>,</span><br><span class="line">  <span class="built_in">String</span> iconFileName,</span><br><span class="line">&#125;) &#123;</span><br><span class="line">  <span class="keyword">return</span> Container(</span><br><span class="line">    width: duSetWidth(width),</span><br><span class="line">    height: duSetHeight(height),</span><br><span class="line">    child: FlatButton(</span><br><span class="line">      onPressed: onPressed,</span><br><span class="line">      shape: RoundedRectangleBorder(</span><br><span class="line">        side: Borders.primaryBorder,</span><br><span class="line">        borderRadius: Radii.k6pxRadius,</span><br><span class="line">      ),</span><br><span class="line">      child: Image.asset(</span><br><span class="line">        <span class="string">"assets/images/icons-<span class="subst">$iconFileName</span>.png"</span>,</span><br><span class="line">      ),</span><br><span class="line">    ),</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-7-封装-toast-提示框"><a href="#2-7-封装-toast-提示框" class="headerlink" title="2.7 封装 toast 提示框"></a>2.7 封装 toast 提示框</h3><ul><li>lib/common/widgets/toast.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Future&lt;<span class="built_in">bool</span>&gt; toastInfo(&#123;</span><br><span class="line">  <span class="meta">@required</span> <span class="built_in">String</span> msg,</span><br><span class="line">  Color backgroundColor = Colors.black,</span><br><span class="line">  Color textColor = Colors.white,</span><br><span class="line">&#125;) <span class="keyword">async</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">await</span> Fluttertoast.showToast(</span><br><span class="line">    msg: msg,</span><br><span class="line">    toastLength: Toast.LENGTH_SHORT,</span><br><span class="line">    gravity: ToastGravity.TOP,</span><br><span class="line">    timeInSecForIos: <span class="number">1</span>,</span><br><span class="line">    backgroundColor: backgroundColor,</span><br><span class="line">    textColor: textColor,</span><br><span class="line">    fontSize: duSetFontSize(<span class="number">16</span>),</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-8-数据有效性检验"><a href="#2-8-数据有效性检验" class="headerlink" title="2.8 数据有效性检验"></a>2.8 数据有效性检验</h3><ul><li>lib/pages/sign_in/sign_in.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_SignInPageState</span> <span class="keyword">extends</span> <span class="title">State</span>&lt;<span class="title">SignInPage</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//email的控制器</span></span><br><span class="line">  <span class="keyword">final</span> TextEditingController _emailController = TextEditingController();</span><br><span class="line">  <span class="comment">//密码的控制器</span></span><br><span class="line">  <span class="keyword">final</span> TextEditingController _passController = TextEditingController();</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 执行登录操作</span></span><br><span class="line">  _handleSignIn() &#123;</span><br><span class="line">    <span class="keyword">if</span> (!duIsEmail(_emailController.value.text)) &#123;</span><br><span class="line">      toastInfo(msg: <span class="string">'请正确输入邮件'</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!duCheckStringLength(_passController.value.text, <span class="number">6</span>)) &#123;</span><br><span class="line">      toastInfo(msg: <span class="string">'密码不能小于6位'</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 登录表单</span></span><br><span class="line">  Widget _buildInputForm() &#123;</span><br><span class="line">    <span class="keyword">return</span> Container(</span><br><span class="line">      width: duSetWidth(<span class="number">295</span>),</span><br><span class="line">      <span class="comment">// height: 204,</span></span><br><span class="line">      margin: EdgeInsets.only(top: duSetHeight(<span class="number">49</span>)),</span><br><span class="line">      child: Column(</span><br><span class="line">        children: [</span><br><span class="line">          <span class="comment">// email input</span></span><br><span class="line">          inputTextEdit(</span><br><span class="line">            controller: _emailController,</span><br><span class="line">            keyboardType: TextInputType.emailAddress,</span><br><span class="line">            hintText: <span class="string">"Email"</span>,</span><br><span class="line">            marginTop: <span class="number">0</span>,</span><br><span class="line">          ),</span><br><span class="line">          <span class="comment">// password input</span></span><br><span class="line">          inputTextEdit(</span><br><span class="line">            controller: _passController,</span><br><span class="line">            keyboardType: TextInputType.visiblePassword,</span><br><span class="line">            hintText: <span class="string">"Password"</span>,</span><br><span class="line">            isPassword: <span class="keyword">true</span>,</span><br><span class="line">          ),</span><br><span class="line"></span><br><span class="line">          <span class="comment">// 注册、登录 横向布局</span></span><br><span class="line">          Container(</span><br><span class="line">            height: duSetHeight(<span class="number">44</span>),</span><br><span class="line">            margin: EdgeInsets.only(top: duSetHeight(<span class="number">15</span>)),</span><br><span class="line">            child: Row(</span><br><span class="line">              children: [</span><br><span class="line">                <span class="comment">// 注册</span></span><br><span class="line">                btnFlatButtonWidget(</span><br><span class="line">                  onPressed: _handleNavSignUp,</span><br><span class="line">                  gbColor: AppColors.thirdElement,</span><br><span class="line">                  title: <span class="string">"Sign up"</span>,</span><br><span class="line">                ),</span><br><span class="line">                Spacer(),</span><br><span class="line">                <span class="comment">// 登录</span></span><br><span class="line">                btnFlatButtonWidget(</span><br><span class="line">                  onPressed: _handleSignIn,</span><br><span class="line">                  gbColor: AppColors.primaryElement,</span><br><span class="line">                  title: <span class="string">"Sign in"</span>,</span><br><span class="line">                ),</span><br><span class="line">              ],</span><br><span class="line">            ),</span><br><span class="line">          ),</span><br><span class="line">          <span class="comment">// Spacer(),</span></span><br><span class="line"></span><br><span class="line">          <span class="comment">// Fogot password</span></span><br><span class="line">          Container(</span><br><span class="line">            height: duSetHeight(<span class="number">22</span>),</span><br><span class="line">            margin: EdgeInsets.only(top: duSetHeight(<span class="number">20</span>)),</span><br><span class="line">            child: FlatButton(</span><br><span class="line">              onPressed: () =&gt; &#123;&#125;,</span><br><span class="line">              child: Text(</span><br><span class="line">                <span class="string">"Fogot password?"</span>,</span><br><span class="line">                textAlign: TextAlign.center,</span><br><span class="line">                style: TextStyle(</span><br><span class="line">                  color: AppColors.secondaryElementText,</span><br><span class="line">                  fontFamily: <span class="string">"Avenir"</span>,</span><br><span class="line">                  fontWeight: FontWeight.w400,</span><br><span class="line">                  fontSize: duSetFontSize(<span class="number">16</span>),</span><br><span class="line">                  height: <span class="number">1</span>, <span class="comment">// 设置下行高，否则字体下沉</span></span><br><span class="line">                ),</span><br><span class="line">              ),</span><br><span class="line">            ),</span><br><span class="line">          ),</span><br><span class="line">        ],</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="3-注册界面"><a href="#3-注册界面" class="headerlink" title="3 注册界面"></a>3 注册界面</h2><h3 id="3-1-程序结构"><a href="#3-1-程序结构" class="headerlink" title="3.1 程序结构"></a>3.1 程序结构</h3><ul><li>lib/pages/sign_up/sign_up.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/common/utils/utils.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/common/values/values.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_ducafecat_news/common/widgets/widgets.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SignUpPage</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span> </span>&#123;</span><br><span class="line">  SignUpPage(&#123;Key key&#125;) : <span class="keyword">super</span>(key: key);</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  _SignUpPageState createState() =&gt; _SignUpPageState();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_SignUpPageState</span> <span class="keyword">extends</span> <span class="title">State</span>&lt;<span class="title">SignUpPage</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// logo</span></span><br><span class="line">  Widget _buildLogo() &#123;</span><br><span class="line">    <span class="keyword">return</span> Container();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 注册表单</span></span><br><span class="line">  Widget _buildInputForm() &#123;</span><br><span class="line">    <span class="keyword">return</span> Container();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 第三方</span></span><br><span class="line">  Widget _buildThirdPartyLogin() &#123;</span><br><span class="line">    <span class="keyword">return</span> Container();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 有账号</span></span><br><span class="line">  Widget _buildHaveAccountButton() &#123;</span><br><span class="line">    <span class="keyword">return</span> Container();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> Scaffold(</span><br><span class="line">      resizeToAvoidBottomInset: <span class="keyword">false</span>,</span><br><span class="line">      ...,</span><br><span class="line">      body: Center(</span><br><span class="line">        child: Column(</span><br><span class="line">          children: &lt;Widget&gt;[</span><br><span class="line">            Divider(height: <span class="number">1</span>),</span><br><span class="line">            _buildLogo(),</span><br><span class="line">            _buildInputForm(),</span><br><span class="line">            Spacer(),</span><br><span class="line">            _buildThirdPartyLogin(),</span><br><span class="line">            _buildHaveAccountButton(),</span><br><span class="line">          ],</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-2-透明导航栏"><a href="#3-2-透明导航栏" class="headerlink" title="3.2 透明导航栏"></a>3.2 透明导航栏</h3><ul><li>lib/common/widgets/app.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// <span class="markdown">透明背景 AppBar</span></span></span><br><span class="line">Widget transparentAppBar(&#123;</span><br><span class="line">  <span class="meta">@required</span> BuildContext context,</span><br><span class="line">  <span class="built_in">List</span>&lt;Widget&gt; actions,</span><br><span class="line">&#125;) &#123;</span><br><span class="line">  <span class="keyword">return</span> AppBar(</span><br><span class="line">    backgroundColor: Colors.transparent,</span><br><span class="line">    elevation: <span class="number">0</span>,</span><br><span class="line">    title: Text(<span class="string">''</span>),</span><br><span class="line">    leading: IconButton(</span><br><span class="line">      icon: Icon(</span><br><span class="line">        Icons.arrow_back,</span><br><span class="line">        color: AppColors.primaryText,</span><br><span class="line">      ),</span><br><span class="line">      onPressed: () &#123;</span><br><span class="line">        Navigator.pop(context);</span><br><span class="line">      &#125;,</span><br><span class="line">    ),</span><br><span class="line">    actions: actions,</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>lib/pages/sign_up/sign_up.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@override</span></span><br><span class="line">Widget build(BuildContext context) &#123;</span><br><span class="line">  <span class="keyword">return</span> Scaffold(</span><br><span class="line">    resizeToAvoidBottomInset: <span class="keyword">false</span>,</span><br><span class="line">    appBar: transparentAppBar(</span><br><span class="line">      context: context,</span><br><span class="line">      actions: &lt;Widget&gt;[</span><br><span class="line">        IconButton(</span><br><span class="line">          icon: Icon(</span><br><span class="line">            Icons.info_outline,</span><br><span class="line">            color: AppColors.primaryText,</span><br><span class="line">          ),</span><br><span class="line">          onPressed: () &#123;</span><br><span class="line">            toastInfo(msg: <span class="string">'这是注册界面'</span>);</span><br><span class="line">          &#125;,</span><br><span class="line">        )</span><br><span class="line">      ],</span><br><span class="line">    ),</span><br></pre></td></tr></table></figure><h3 id="3-2-注册表单"><a href="#3-2-注册表单" class="headerlink" title="3.2 注册表单"></a>3.2 注册表单</h3><ul><li>lib/pages/sign_up/sign_up.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 注册表单</span></span><br><span class="line">Widget _buildInputForm() &#123;</span><br><span class="line">  <span class="keyword">return</span> Container(</span><br><span class="line">    width: duSetWidth(<span class="number">295</span>),</span><br><span class="line">    <span class="comment">// height: 204,</span></span><br><span class="line">    margin: EdgeInsets.only(top: duSetHeight(<span class="number">49</span>)),</span><br><span class="line">    child: Column(</span><br><span class="line">      children: [</span><br><span class="line">        <span class="comment">// fullName input</span></span><br><span class="line">        inputTextEdit(</span><br><span class="line">          controller: _fullnameController,</span><br><span class="line">          keyboardType: TextInputType.text,</span><br><span class="line">          hintText: <span class="string">"Full name"</span>,</span><br><span class="line">          marginTop: <span class="number">0</span>,</span><br><span class="line">        ),</span><br><span class="line">        <span class="comment">// email input</span></span><br><span class="line">        inputTextEdit(</span><br><span class="line">          controller: _emailController,</span><br><span class="line">          keyboardType: TextInputType.emailAddress,</span><br><span class="line">          hintText: <span class="string">"Email"</span>,</span><br><span class="line">        ),</span><br><span class="line">        <span class="comment">// password input</span></span><br><span class="line">        inputTextEdit(</span><br><span class="line">          controller: _passController,</span><br><span class="line">          keyboardType: TextInputType.visiblePassword,</span><br><span class="line">          hintText: <span class="string">"Password"</span>,</span><br><span class="line">          isPassword: <span class="keyword">true</span>,</span><br><span class="line">        ),</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建</span></span><br><span class="line">        Container(</span><br><span class="line">          height: duSetHeight(<span class="number">44</span>),</span><br><span class="line">          margin: EdgeInsets.only(top: duSetHeight(<span class="number">15</span>)),</span><br><span class="line">          child: btnFlatButtonWidget(</span><br><span class="line">            onPressed: () &#123;</span><br><span class="line">              <span class="keyword">if</span> (!duCheckStringLength(_fullnameController.value.text, <span class="number">5</span>)) &#123;</span><br><span class="line">                toastInfo(msg: <span class="string">'用户名不能小于5位'</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">if</span> (!duIsEmail(_emailController.value.text)) &#123;</span><br><span class="line">                toastInfo(msg: <span class="string">'请正确输入邮件'</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">if</span> (!duCheckStringLength(_passController.value.text, <span class="number">6</span>)) &#123;</span><br><span class="line">                toastInfo(msg: <span class="string">'密码不能小于6位'</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">              &#125;</span><br><span class="line">              Navigator.pop(context);</span><br><span class="line">            &#125;,</span><br><span class="line">            width: <span class="number">295</span>,</span><br><span class="line">            fontWeight: FontWeight.w600,</span><br><span class="line">            title: <span class="string">"Create an account"</span>,</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">        <span class="comment">// Spacer(),</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// Fogot password</span></span><br><span class="line">        Container(</span><br><span class="line">          height: duSetHeight(<span class="number">22</span>),</span><br><span class="line">          margin: EdgeInsets.only(top: duSetHeight(<span class="number">20</span>)),</span><br><span class="line">          child: FlatButton(</span><br><span class="line">            onPressed: _handleSignUp,</span><br><span class="line">            child: Text(</span><br><span class="line">              <span class="string">"Fogot password?"</span>,</span><br><span class="line">              textAlign: TextAlign.center,</span><br><span class="line">              style: TextStyle(</span><br><span class="line">                color: AppColors.secondaryElementText,</span><br><span class="line">                fontFamily: <span class="string">"Avenir"</span>,</span><br><span class="line">                fontWeight: FontWeight.w400,</span><br><span class="line">                fontSize: duSetFontSize(<span class="number">16</span>),</span><br><span class="line">                height: <span class="number">1</span>, <span class="comment">// 设置下行高，否则字体下沉</span></span><br><span class="line">              ),</span><br><span class="line">            ),</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">      ],</span><br><span class="line">    ),</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-3-检验有效性"><a href="#3-3-检验有效性" class="headerlink" title="3.3 检验有效性"></a>3.3 检验有效性</h3><ul><li>lib/pages/sign_up/sign_up.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 执行注册操作</span></span><br><span class="line">_handleSignUp() &#123;</span><br><span class="line">  <span class="keyword">if</span> (!duCheckStringLength(_fullnameController.value.text, <span class="number">5</span>)) &#123;</span><br><span class="line">    toastInfo(msg: <span class="string">'用户名不能小于5位'</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (!duIsEmail(_emailController.value.text)) &#123;</span><br><span class="line">    toastInfo(msg: <span class="string">'请正确输入邮件'</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (!duCheckStringLength(_passController.value.text, <span class="number">6</span>)) &#123;</span><br><span class="line">    toastInfo(msg: <span class="string">'密码不能小于6位'</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  Navigator.pop(context);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-4-社交按钮"><a href="#3-4-社交按钮" class="headerlink" title="3.4 社交按钮"></a>3.4 社交按钮</h3><ul><li>lib/pages/sign_up/sign_up.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 第三方</span></span><br><span class="line">Widget _buildThirdPartyLogin() &#123;</span><br><span class="line">  <span class="keyword">return</span> Container(</span><br><span class="line">    width: duSetWidth(<span class="number">295</span>),</span><br><span class="line">    margin: EdgeInsets.only(bottom: duSetHeight(<span class="number">40</span>)),</span><br><span class="line">    child: Column(</span><br><span class="line">      children: &lt;Widget&gt;[</span><br><span class="line">        <span class="comment">// title</span></span><br><span class="line">        Text(</span><br><span class="line">          <span class="string">"Or sign in with social networks"</span>,</span><br><span class="line">          textAlign: TextAlign.center,</span><br><span class="line">          style: TextStyle(</span><br><span class="line">            color: AppColors.primaryText,</span><br><span class="line">            fontFamily: <span class="string">"Avenir"</span>,</span><br><span class="line">            fontWeight: FontWeight.w400,</span><br><span class="line">            fontSize: duSetFontSize(<span class="number">16</span>),</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">        <span class="comment">// 按钮</span></span><br><span class="line">        Padding(</span><br><span class="line">          padding: EdgeInsets.only(top: duSetHeight(<span class="number">20</span>)),</span><br><span class="line">          child: Row(</span><br><span class="line">            children: &lt;Widget&gt;[</span><br><span class="line">              btnFlatButtonBorderOnlyWidget(</span><br><span class="line">                onPressed: () &#123;&#125;,</span><br><span class="line">                width: <span class="number">88</span>,</span><br><span class="line">                iconFileName: <span class="string">"twitter"</span>,</span><br><span class="line">              ),</span><br><span class="line">              Spacer(),</span><br><span class="line">              btnFlatButtonBorderOnlyWidget(</span><br><span class="line">                onPressed: () &#123;&#125;,</span><br><span class="line">                width: <span class="number">88</span>,</span><br><span class="line">                iconFileName: <span class="string">"google"</span>,</span><br><span class="line">              ),</span><br><span class="line">              Spacer(),</span><br><span class="line">              btnFlatButtonBorderOnlyWidget(</span><br><span class="line">                onPressed: () &#123;&#125;,</span><br><span class="line">                width: <span class="number">88</span>,</span><br><span class="line">                iconFileName: <span class="string">"facebook"</span>,</span><br><span class="line">              ),</span><br><span class="line">            ],</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">      ],</span><br><span class="line">    ),</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-5-返回按钮"><a href="#3-5-返回按钮" class="headerlink" title="3.5 返回按钮"></a>3.5 返回按钮</h3><ul><li>lib/pages/sign_up/sign_up.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 返回上一页</span></span><br><span class="line">_handleNavPop() &#123;</span><br><span class="line">  Navigator.pop(context);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Widget _buildHaveAccountButton() &#123;</span><br><span class="line">  <span class="keyword">return</span> Container(</span><br><span class="line">    margin: EdgeInsets.only(bottom: duSetHeight(<span class="number">20</span>)),</span><br><span class="line">    child: btnFlatButtonWidget(</span><br><span class="line">      onPressed: _handleNavPop,</span><br><span class="line">      width: <span class="number">294</span>,</span><br><span class="line">      gbColor: AppColors.secondaryElement,</span><br><span class="line">      fontColor: AppColors.primaryText,</span><br><span class="line">      title: <span class="string">"I have an account"</span>,</span><br><span class="line">      fontWeight: FontWeight.w500,</span><br><span class="line">      fontSize: <span class="number">16</span>,</span><br><span class="line">    ),</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="蓝湖设计稿"><a href="#蓝湖设计稿" class="headerlink" title="蓝湖设计稿"></a>蓝湖设计稿</h2><p><a href="https://lanhuapp.com/url/lYuz1" target="_blank" rel="noopener">https://lanhuapp.com/url/lYuz1</a><br>密码: gSKl</p><blockquote><p>蓝湖现在收费了，所以查看标记还请自己上传 xd 设计稿<br>商业设计稿文件不好直接分享, 可以加微信联系 ducafecat</p></blockquote><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://flutter.dev/docs/development/ui/widgets" target="_blank" rel="noopener">widgets</a></li><li><a href="https://pub.flutter-io.cn/packages/fluttertoast" target="_blank" rel="noopener">fluttertoast</a></li></ul><h2 id="视频-1"><a href="#视频-1" class="headerlink" title="视频"></a>视频</h2><ul><li><a href="https://www.bilibili.com/video/av96034282/" target="_blank" rel="noopener">b 站</a></li><li><a href="https://www.youtube.com/watch?v=rF1KYE_QJWU" target="_blank" rel="noopener">油管镜像</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                   
      
    
    </summary>
    
      <category term="Flutter 实战从零开始" scheme="https://ducafecat.tech/categories/Flutter-%E5%AE%9E%E6%88%98%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B/"/>
    
    
      <category term="flutter" scheme="https://ducafecat.tech/tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>Flutter 实战从零开始 新闻客户端 - 02 设计稿适配、加入图片字体资源、欢迎界面</title>
    <link href="https://ducafecat.tech/2020/02/27/flutter-project/flutter-project-news-02-weclome/"/>
    <id>https://ducafecat.tech/2020/02/27/flutter-project/flutter-project-news-02-weclome/</id>
    <published>2020-02-26T16:00:00.000Z</published>
    <updated>2020-07-04T06:25:22.533Z</updated>
    
    <content type="html"><![CDATA[<h2 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h2><ul><li>加入图片资源</li><li>加入字体资源</li><li>设计稿适配</li><li>编写界面代码的逻辑和组织</li></ul><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><iframe src="//player.bilibili.com/player.html?bvid=BV19E411s7YM&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="100%" height="400px"> </iframe><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><a href="https://github.com/ducafecat/flutter_learn_news/releases/tag/v1.0.2" target="_blank" rel="noopener">https://github.com/ducafecat/flutter_learn_news/releases/tag/v1.0.2</a></p><h2 id="1-加入图片资源"><a href="#1-加入图片资源" class="headerlink" title="1 加入图片资源"></a>1 加入图片资源</h2><h3 id="1-1-flutter-图片资源规则"><a href="#1-1-flutter-图片资源规则" class="headerlink" title="1.1 flutter 图片资源规则"></a>1.1 flutter 图片资源规则</h3><ul><li>官方说明</li></ul><p><a href="https://flutter.dev/docs/development/ui/assets-and-images" target="_blank" rel="noopener">https://flutter.dev/docs/development/ui/assets-and-images</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-03-02-11-29-01.png" alt title>                </div>                <div class="image-caption"></div>            </figure><p>按这个规则编排，flutter 自动适配分辨率图片</p><ul><li>assets 目录</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-03-02-11-29-58.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>yaml 配置</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">assets:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">assets/images/</span></span><br></pre></td></tr></table></figure><ul><li>代码调用</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Image.asset(<span class="string">"assets/images/logo.png"</span>)</span><br></pre></td></tr></table></figure><h3 id="1-2-蓝湖切图"><a href="#1-2-蓝湖切图" class="headerlink" title="1.2 蓝湖切图"></a>1.2 蓝湖切图</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-03-02-11-32-56.png" alt title>                </div>                <div class="image-caption"></div>            </figure><p>注意选着下 ios 目标，这样会自动切图 1x 2x 3x 三种格式</p><h2 id="2-加入字体资源"><a href="#2-加入字体资源" class="headerlink" title="2 加入字体资源"></a>2 加入字体资源</h2><ul><li>官方说明</li></ul><p><a href="https://flutter.dev/docs/cookbook/design/fonts" target="_blank" rel="noopener">https://flutter.dev/docs/cookbook/design/fonts</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-03-02-11-36-13.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>assets 目录</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-03-02-11-36-48.png" alt title>                </div>                <div class="image-caption"></div>            </figure><p>只上传用到的 ttf 字体，这样能控制打包大小</p><ul><li>yaml 配置</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">fonts:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">family:</span> <span class="string">Avenir</span></span><br><span class="line">    <span class="attr">fonts:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">asset:</span> <span class="string">assets/fonts/Avenir-Book.ttf</span></span><br><span class="line">        <span class="attr">weight:</span> <span class="number">400</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">family:</span> <span class="string">Montserrat</span></span><br><span class="line">    <span class="attr">fonts:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">asset:</span> <span class="string">assets/fonts/Montserrat-SemiBold.ttf</span></span><br><span class="line">        <span class="attr">weight:</span> <span class="number">600</span></span><br></pre></td></tr></table></figure><ul><li>代码调用</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-03-02-11-37-48.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="3-编写欢迎界面"><a href="#3-编写欢迎界面" class="headerlink" title="3 编写欢迎界面"></a>3 编写欢迎界面</h2><h3 id="3-1-从上到下、从左到右、由大到小"><a href="#3-1-从上到下、从左到右、由大到小" class="headerlink" title="3.1 从上到下、从左到右、由大到小"></a>3.1 从上到下、从左到右、由大到小</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-03-02-13-38-19.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="3-2-设计稿适配"><a href="#3-2-设计稿适配" class="headerlink" title="3.2 设计稿适配"></a>3.2 设计稿适配</h3><p>插件 flutter_screenutil</p><p><a href="https://pub.flutter-io.cn/packages/flutter_screenutil" target="_blank" rel="noopener">https://pub.flutter-io.cn/packages/flutter_screenutil</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-03-02-13-41-31.png" alt title>                </div>                <div class="image-caption"></div>            </figure><p>按设计稿比例适配</p><h3 id="3-3-工具函数"><a href="#3-3-工具函数" class="headerlink" title="3.3 工具函数"></a>3.3 工具函数</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-03-03-14-11-29.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li><code>screen.dart</code> 设计稿适配函数</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_screenutil/flutter_screenutil.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// <span class="markdown">设置宽度</span></span></span><br><span class="line"><span class="built_in">double</span> duSetWidth(<span class="built_in">double</span> width) &#123;</span><br><span class="line">  <span class="keyword">return</span> ScreenUtil().setWidth(width);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// <span class="markdown">设置宽度</span></span></span><br><span class="line"><span class="built_in">double</span> duSetHeight(<span class="built_in">double</span> height) &#123;</span><br><span class="line">  <span class="keyword">return</span> ScreenUtil().setHeight(height);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// <span class="markdown">设置字体尺寸</span></span></span><br><span class="line"><span class="built_in">double</span> duSetFontSize(<span class="built_in">double</span> fontSize) &#123;</span><br><span class="line">  <span class="keyword">return</span> ScreenUtil().setSp(fontSize);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>utils.dart</code> 导出类库</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span> utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="string">'screen.dart'</span>;</span><br></pre></td></tr></table></figure><h3 id="3-4-常量配置"><a href="#3-4-常量配置" class="headerlink" title="3.4 常量配置"></a>3.4 常量配置</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-03-03-14-14-55.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li><code>colors.dart</code> 颜色</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'dart:ui'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AppColors</span> </span>&#123;</span><br><span class="line">  <span class="comment">/// <span class="markdown">主文本</span></span></span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">const</span> Color primaryText = Color.fromARGB(<span class="number">255</span>, <span class="number">45</span>, <span class="number">45</span>, <span class="number">47</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">主控件-背景</span></span></span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">const</span> Color primaryElement = Color.fromARGB(<span class="number">255</span>, <span class="number">41</span>, <span class="number">103</span>, <span class="number">255</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">主控件-文本</span></span></span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">const</span> Color primaryElementText = Color.fromARGB(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>values.dart</code> 导出类库</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span> values;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="string">'colors.dart'</span>;</span><br></pre></td></tr></table></figure><h3 id="3-5-代码拆分"><a href="#3-5-代码拆分" class="headerlink" title="3.5 代码拆分"></a>3.5 代码拆分</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-03-02-13-43-25.png" alt title>                </div>                <div class="image-caption"></div>            </figure><p>尽可能的拆分到不同的函数，方便维护</p><p>再复杂的业务，可以拆分到不同的组件文件，如 <code>welcome_header_widget.dart</code> <code>welcome_feature_widget.dart</code> <code>welcome_buttons_widget.dart</code></p><h2 id="git-代码"><a href="#git-代码" class="headerlink" title="git 代码"></a>git 代码</h2><p><a href="https://github.com/ducafecat/flutter_learn_news/releases/tag/v1.0.1" target="_blank" rel="noopener">https://github.com/ducafecat/flutter_learn_news/releases/tag/v1.0.1</a></p><h2 id="蓝湖设计稿"><a href="#蓝湖设计稿" class="headerlink" title="蓝湖设计稿"></a>蓝湖设计稿</h2><p><a href="https://lanhuapp.com/url/lYuz1" target="_blank" rel="noopener">https://lanhuapp.com/url/lYuz1</a><br>密码: gSKl</p><blockquote><p>蓝湖现在收费了，所以查看标记还请自己上传 xd 设计稿<br>商业设计稿文件不好直接分享, 可以加微信联系 ducafecat</p></blockquote><h2 id="视频-1"><a href="#视频-1" class="headerlink" title="视频"></a>视频</h2><ul><li><a href="https://www.bilibili.com/video/av93660835" target="_blank" rel="noopener">b 站</a></li><li><a href="https://www.youtube.com/watch?v=equsSqqwl9E" target="_blank" rel="noopener">油管镜像</a></li></ul><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://pub.flutter-io.cn/packages/flutter_screenutil" target="_blank" rel="noopener">flutter_screenutil</a></li><li><a href="https://flutter.dev/docs/development/ui/assets-and-images" target="_blank" rel="noopener">Adding assets and images</a></li><li><a href="https://flutter.dev/docs/cookbook/design/fonts" target="_blank" rel="noopener">Use a custom font</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;加入图片资源&lt;/li&gt;
&lt;li&gt;加入字体资源&lt;/li&gt;
&lt;li&gt;设计稿适配&lt;/li&gt;
&lt;li&gt;编写界面代码的逻辑
      
    
    </summary>
    
      <category term="Flutter 实战从零开始" scheme="https://ducafecat.tech/categories/Flutter-%E5%AE%9E%E6%88%98%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B/"/>
    
    
      <category term="flutter" scheme="https://ducafecat.tech/tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>Flutter 实战从零开始 新闻客户端 - 01 需求分析、使用蓝湖标注工具、项目目录构建</title>
    <link href="https://ducafecat.tech/2020/02/26/flutter-project/flutter-project-news-01-setup/"/>
    <id>https://ducafecat.tech/2020/02/26/flutter-project/flutter-project-news-01-setup/</id>
    <published>2020-02-25T16:00:00.000Z</published>
    <updated>2020-07-04T06:23:27.021Z</updated>
    
    <content type="html"><![CDATA[<h2 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h2><ul><li>需求分析</li><li>使用蓝湖平台作为标注工具</li><li>构建 Flutter 项目</li></ul><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><iframe src="//player.bilibili.com/player.html?bvid=BV1J7411N7KF&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="100%" height="400px"> </iframe><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><a href="https://github.com/ducafecat/flutter_learn_news/releases/tag/v1.0.1" target="_blank" rel="noopener">https://github.com/ducafecat/flutter_learn_news/releases/tag/v1.0.1</a></p><h2 id="1-需求说明"><a href="#1-需求说明" class="headerlink" title="1 需求说明"></a>1 需求说明</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-02-27-10-31-41.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="1-1-样式表"><a href="#1-1-样式表" class="headerlink" title="1.1 样式表"></a>1.1 样式表</h3><ul><li>颜色</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-02-26-17-52-10.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>组件</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-02-26-17-59-36.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>图标</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-02-27-10-03-03.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="1-2-整理页面-组件列表"><a href="#1-2-整理页面-组件列表" class="headerlink" title="1.2 整理页面+组件列表"></a>1.2 整理页面+组件列表</h3><table><thead><tr><th>页面名称</th><th>组件数量</th></tr></thead><tbody><tr><td>欢迎页</td><td>3</td></tr><tr><td>登录页</td><td>3</td></tr><tr><td>首页</td><td>6</td></tr><tr><td>搜索页</td><td>4</td></tr><tr><td>新闻页</td><td>4</td></tr></tbody></table><h3 id="1-3-排查技术点"><a href="#1-3-排查技术点" class="headerlink" title="1.3 排查技术点"></a>1.3 排查技术点</h3><ul><li>数据拉取</li><li>图片懒加载</li><li>图片缓存</li><li>新闻、频道、搜索历史数据缓存</li></ul><h2 id="2-使用蓝湖平台作为标注工具"><a href="#2-使用蓝湖平台作为标注工具" class="headerlink" title="2 使用蓝湖平台作为标注工具"></a>2 使用蓝湖平台作为标注工具</h2><h3 id="2-1-上传蓝湖"><a href="#2-1-上传蓝湖" class="headerlink" title="2.1 上传蓝湖"></a>2.1 上传蓝湖</h3><p>支持 Sketch、Adobe Photoshop、Adobe XD、设计图片 PNG</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-02-27-10-05-23.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="2-2-标注"><a href="#2-2-标注" class="headerlink" title="2.2 标注"></a>2.2 标注</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-02-27-10-32-17.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="2-3-代码提示"><a href="#2-3-代码提示" class="headerlink" title="2.3 代码提示"></a>2.3 代码提示</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-02-27-10-33-19.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="2-4-原型展示"><a href="#2-4-原型展示" class="headerlink" title="2.4 原型展示"></a>2.4 原型展示</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-02-27-11-03-37.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="3-构建-Flutter-项目"><a href="#3-构建-Flutter-项目" class="headerlink" title="3 构建 Flutter 项目"></a>3 构建 Flutter 项目</h2><h1 id="3-1-可复用小型项目结构"><a href="#3-1-可复用小型项目结构" class="headerlink" title="3.1 可复用小型项目结构"></a>3.1 可复用小型项目结构</h1><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2020-02-27-10-59-10.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="蓝湖设计稿"><a href="#蓝湖设计稿" class="headerlink" title="蓝湖设计稿"></a>蓝湖设计稿</h2><p><a href="https://lanhuapp.com/url/lYuz1" target="_blank" rel="noopener">https://lanhuapp.com/url/lYuz1</a><br>密码: gSKl</p><blockquote><p>蓝湖现在收费了，所以查看标记还请自己上传 xd 设计稿<br>商业设计稿文件不好直接分享, 可以加微信联系 ducafecat</p></blockquote><h2 id="git-代码"><a href="#git-代码" class="headerlink" title="git 代码"></a>git 代码</h2><p><a href="https://github.com/ducafecat/flutter_learn_news/releases/tag/v1.0.1" target="_blank" rel="noopener">https://github.com/ducafecat/flutter_learn_news/releases/tag/v1.0.1</a></p><h2 id="视频-1"><a href="#视频-1" class="headerlink" title="视频"></a>视频</h2><ul><li><a href="https://www.bilibili.com/video/av92158011/" target="_blank" rel="noopener">b 站</a></li><li><a href="https://youtu.be/Uucg6GGGBsY" target="_blank" rel="noopener">油管镜像</a></li></ul><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://lanhuapp.com/cms/#/sos" target="_blank" rel="noopener">蓝湖-上传设计图</a></li></ul><hr><p>© 猫哥</p><p>微信: ducafecat</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;需求分析&lt;/li&gt;
&lt;li&gt;使用蓝湖平台作为标注工具&lt;/li&gt;
&lt;li&gt;构建 Flutter 项目&lt;/li&gt;
&lt;
      
    
    </summary>
    
      <category term="Flutter 实战从零开始" scheme="https://ducafecat.tech/categories/Flutter-%E5%AE%9E%E6%88%98%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B/"/>
    
    
      <category term="flutter" scheme="https://ducafecat.tech/tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>Flutter 零基础入门中文教学 - 18 基础组件 Stack IndexedStack Positioned</title>
    <link href="https://ducafecat.tech/2019/10/12/flutter/flutter-18-stack-indexedstack/"/>
    <id>https://ducafecat.tech/2019/10/12/flutter/flutter-18-stack-indexedstack/</id>
    <published>2019-10-11T16:00:00.000Z</published>
    <updated>2019-10-21T03:50:51.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h2><ul><li>Stack</li><li>IndexedStack</li><li>Positioned</li></ul><p>Stack 和 IndexStack 都是层叠布局方式，类似于 Android 里的 FrameLayout 帧布局，内部子元素是有层级堆起来的。</p><p>Stack 继承自 MultiChildRenderObjectWidget，Stack 也是多子元素的一个组件之一（内部可以包含多个子元素）。</p><p>而 IndexedStack 继承自 Stack，扩展了 Stack 的一些特性。它的作用是显示第 index 个子元素，其他子元素都是不可见的。所以 IndexedStack 的尺寸永远是跟最大的子元素尺寸一致。</p><p>Stack 的布局行为，是根据子元素是 positioned 还是 non-positioned 来区分的：</p><p>对于 positioned 的子元素，它们的位置会根据所设置的 top、bottom、right 或 left 属性来确定，这几个值都是相对于 Stack 的左上角；<br>对于 non-positioned 的子元素，它们会根据 Stack 的 aligment 来设置位置。<br>Stack 布局的子元素层级堆叠顺序：最先布局绘制的子元素在最底层，越后绘制的越在顶层。类似于 Web 中的 z-index。</p><h2 id="Stack"><a href="#Stack" class="headerlink" title="Stack"></a>Stack</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Stack(&#123;</span><br><span class="line">    Key key,</span><br><span class="line">    <span class="comment">// 对齐方式，默认是左上角（topStart）</span></span><br><span class="line">    <span class="keyword">this</span>.alignment = AlignmentDirectional.topStart,</span><br><span class="line">    <span class="comment">// 对齐方向</span></span><br><span class="line">    <span class="keyword">this</span>.textDirection,</span><br><span class="line">    <span class="comment">// 定义如何设置无定位子元素尺寸，默认为loose</span></span><br><span class="line">    <span class="keyword">this</span>.fit = StackFit.loose,</span><br><span class="line">    <span class="comment">// 超过的部分子元素处理方式</span></span><br><span class="line">    <span class="keyword">this</span>.overflow = Overflow.clip,</span><br><span class="line">    <span class="comment">// 子元素</span></span><br><span class="line">    <span class="built_in">List</span>&lt;Widget&gt; children = <span class="keyword">const</span> &lt;Widget&gt;[],</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><ul><li>alignment</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 左上角</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> Alignment topLeft = Alignment(<span class="number">-1.0</span>, <span class="number">-1.0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 主轴顶部对齐，交叉轴居中</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> Alignment topCenter = Alignment(<span class="number">0.0</span>, <span class="number">-1.0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 主轴顶部对齐，交叉轴偏右</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> Alignment topRight = Alignment(<span class="number">1.0</span>, <span class="number">-1.0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 主轴居中，交叉轴偏左</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> Alignment centerLeft = Alignment(<span class="number">-1.0</span>, <span class="number">0.0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 居中</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> Alignment center = Alignment(<span class="number">0.0</span>, <span class="number">0.0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 主轴居中，交叉轴偏右</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> Alignment centerRight = Alignment(<span class="number">1.0</span>, <span class="number">0.0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 主轴底部对齐，交叉轴偏左</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> Alignment bottomLeft = Alignment(<span class="number">-1.0</span>, <span class="number">1.0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 主轴底部对齐，交叉轴居中</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> Alignment bottomCenter = Alignment(<span class="number">0.0</span>, <span class="number">1.0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 主轴底部对齐，交叉轴偏右</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> Alignment bottomRight = Alignment(<span class="number">1.0</span>, <span class="number">1.0</span>);</span><br></pre></td></tr></table></figure><ul><li>fit</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> StackFit &#123;</span><br><span class="line">  <span class="comment">// 子元素宽松的取值，可以从min到max的尺寸</span></span><br><span class="line">  loose,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 子元素尽可能的占用剩余空间，取max尺寸</span></span><br><span class="line">  expand,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 不改变子元素的约束条件</span></span><br><span class="line">  passthrough,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>overflow</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> Overflow &#123;</span><br><span class="line">  <span class="comment">// 超出部分不会被裁剪，正常显示</span></span><br><span class="line">  visible,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 超出部分会被裁剪</span></span><br><span class="line">  clip,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="IndexedStack"><a href="#IndexedStack" class="headerlink" title="IndexedStack"></a>IndexedStack</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">IndexedStack(&#123;</span><br><span class="line">    Key key,</span><br><span class="line">    AlignmentGeometry alignment = AlignmentDirectional.topStart,</span><br><span class="line">    TextDirection textDirection,</span><br><span class="line">    StackFit sizing = StackFit.loose,</span><br><span class="line">    <span class="comment">// 多了一个索引，索引的这个元素显示，其他元素隐藏</span></span><br><span class="line">    <span class="keyword">this</span>.index = <span class="number">0</span>,</span><br><span class="line">    <span class="comment">// 子元素</span></span><br><span class="line">    <span class="built_in">List</span>&lt;Widget&gt; children = <span class="keyword">const</span> &lt;Widget&gt;[],</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><h2 id="Positioned"><a href="#Positioned" class="headerlink" title="Positioned"></a>Positioned</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> Positioned(&#123;</span><br><span class="line">  Key key,</span><br><span class="line">  <span class="keyword">this</span>.left, <span class="comment">// 上下左右位置</span></span><br><span class="line">  <span class="keyword">this</span>.top,</span><br><span class="line">  <span class="keyword">this</span>.right,</span><br><span class="line">  <span class="keyword">this</span>.bottom,</span><br><span class="line">  <span class="keyword">this</span>.width, <span class="comment">// 宽高</span></span><br><span class="line">  <span class="keyword">this</span>.height,</span><br><span class="line">  <span class="meta">@required</span> Widget child,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><a href="https://github.com/ducafecat/flutter-learn/tree/master/state_less_ful_app" target="_blank" rel="noopener">https://github.com/ducafecat/flutter-learn/tree/master/state_less_ful_app</a></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://flutter.dev/docs/development/ui/widgets" target="_blank" rel="noopener">widgets</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Stack&lt;/li&gt;
&lt;li&gt;IndexedStack&lt;/li&gt;
&lt;li&gt;Positioned&lt;/li&gt;
&lt;/u
      
    
    </summary>
    
      <category term="Flutter零基础入门中文教学" scheme="https://ducafecat.tech/categories/Flutter%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%E4%B8%AD%E6%96%87%E6%95%99%E5%AD%A6/"/>
    
    
      <category term="flutter" scheme="https://ducafecat.tech/tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>Flutter 零基础入门中文教学 - 17 基础组件 Fex Expanded</title>
    <link href="https://ducafecat.tech/2019/10/11/flutter/flutter-17-flex-expanded/"/>
    <id>https://ducafecat.tech/2019/10/11/flutter/flutter-17-flex-expanded/</id>
    <published>2019-10-10T16:00:00.000Z</published>
    <updated>2019-10-21T03:00:26.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h2><ul><li>expanded</li><li>flex</li></ul><p>Flex 组件是 Row 和 Column 的父类，主要用于弹性布局，类似于 HTML 中的 Flex 弹性盒子布局，可以按照一定比例进行分类布局空间。</p><p>Flex 继承自 MultiChildRenderObjectWidget，Flex 也是多子元素的一个组件之一（内部可以包含多个子元素）。</p><p>Flex 一般和 Expanded 搭配使用，Expanded 组件从名字就可以看出它的特点，就是让子元素扩展占用 Flex 的剩余空间。</p><h2 id="Expanded-Flex"><a href="#Expanded-Flex" class="headerlink" title="Expanded Flex"></a>Expanded Flex</h2><ul><li>构造函数</li></ul><p>单独看 Flex 组件没有意义，因为一般直接用它的子类 Row 和 Column 来使用。而 Flex 主要是和 Expanded 搭配使用。我们再看下 Expanded 组件构造方法：</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Flex(&#123;</span><br><span class="line">    Key key,</span><br><span class="line">    <span class="comment">// 子元素排列方向：横向还是纵向</span></span><br><span class="line">    <span class="meta">@required</span> <span class="keyword">this</span>.direction,</span><br><span class="line">    <span class="keyword">this</span>.mainAxisAlignment = MainAxisAlignment.start,</span><br><span class="line">    <span class="keyword">this</span>.mainAxisSize = MainAxisSize.max,</span><br><span class="line">    <span class="keyword">this</span>.crossAxisAlignment = CrossAxisAlignment.center,</span><br><span class="line">    <span class="keyword">this</span>.textDirection,</span><br><span class="line">    <span class="keyword">this</span>.verticalDirection = VerticalDirection.down,</span><br><span class="line">    <span class="keyword">this</span>.textBaseline,</span><br><span class="line">    <span class="built_in">List</span>&lt;Widget&gt; children = <span class="keyword">const</span> &lt;Widget&gt;[],</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> Expanded(&#123;</span><br><span class="line">    Key key,</span><br><span class="line">    <span class="comment">// 占用空间比重、权重</span></span><br><span class="line">    <span class="built_in">int</span> flex = <span class="number">1</span>,</span><br><span class="line">    <span class="comment">// 子元素</span></span><br><span class="line">    <span class="meta">@required</span> Widget child,</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><h2 id="例子-Expanded"><a href="#例子-Expanded" class="headerlink" title="例子 Expanded"></a>例子 Expanded</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Row(</span><br><span class="line">  children: &lt;Widget&gt;[</span><br><span class="line">    Container(</span><br><span class="line">      width: <span class="number">50</span>,</span><br><span class="line">      color: Colors.cyan,</span><br><span class="line">    ),</span><br><span class="line">    Expanded(</span><br><span class="line">      child: Container(</span><br><span class="line">        color: Colors.brown,</span><br><span class="line">      ),</span><br><span class="line">    ),</span><br><span class="line">  ],</span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-10-21-10-59-29.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="例子-Flex"><a href="#例子-Flex" class="headerlink" title="例子 Flex"></a>例子 Flex</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Column(</span><br><span class="line">  children: &lt;Widget&gt;[</span><br><span class="line">    Expanded(</span><br><span class="line">      flex: <span class="number">1</span>,</span><br><span class="line">      child: Container(</span><br><span class="line">        color: Colors.cyan,</span><br><span class="line">      ),</span><br><span class="line">    ),</span><br><span class="line">    Expanded(</span><br><span class="line">      flex: <span class="number">4</span>,</span><br><span class="line">      child: Container(</span><br><span class="line">        color: Colors.brown,</span><br><span class="line">      ),</span><br><span class="line">    )</span><br><span class="line">  ],</span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-10-21-11-00-23.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><a href="https://github.com/ducafecat/flutter-learn/tree/master/flex_expanded_widget" target="_blank" rel="noopener">https://github.com/ducafecat/flutter-learn/tree/master/flex_expanded_widget</a></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://flutter.dev/docs/development/ui/widgets" target="_blank" rel="noopener">widgets</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;expanded&lt;/li&gt;
&lt;li&gt;flex&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Flex 组件是 Row 和 Colu
      
    
    </summary>
    
      <category term="Flutter零基础入门中文教学" scheme="https://ducafecat.tech/categories/Flutter%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%E4%B8%AD%E6%96%87%E6%95%99%E5%AD%A6/"/>
    
    
      <category term="flutter" scheme="https://ducafecat.tech/tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>Flutter 零基础入门中文教学 - 16 基础组件 Row Column</title>
    <link href="https://ducafecat.tech/2019/10/10/flutter/flutter-16-row-column/"/>
    <id>https://ducafecat.tech/2019/10/10/flutter/flutter-16-row-column/</id>
    <published>2019-10-09T16:00:00.000Z</published>
    <updated>2019-10-11T08:52:27.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h2><ul><li>Row 行组件</li><li>Column 列组件</li><li>mainAxisAlignment 主轴</li><li>crossAxisAlignment 交叉轴</li><li>textDirection 排列方向</li><li>verticalDirection 交叉轴起始位置</li></ul><h2 id="Row"><a href="#Row" class="headerlink" title="Row"></a>Row</h2><p>Row 布局组件类似于 Android 中的 LinearLayout 线性布局，它用来做水平横向布局使用，里面的 children 子元素按照水平方向进行排列。</p><ul><li>构造</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Row(&#123;</span><br><span class="line">    Key key,</span><br><span class="line">    <span class="comment">// 主轴方向上的对齐方式（Row的主轴是横向轴）</span></span><br><span class="line">    MainAxisAlignment mainAxisAlignment = MainAxisAlignment.start,</span><br><span class="line">    <span class="comment">// 在主轴方向（Row的主轴是横向轴）占有空间的值，默认是max</span></span><br><span class="line">    MainAxisSize mainAxisSize = MainAxisSize.max,</span><br><span class="line">    <span class="comment">// 在交叉轴方向(Row是纵向轴)的对齐方式，Row的高度等于子元素中最高的子元素高度</span></span><br><span class="line">    CrossAxisAlignment crossAxisAlignment = CrossAxisAlignment.center,</span><br><span class="line">    <span class="comment">// 水平方向子元素的排列方向：从左到右排列还是反向</span></span><br><span class="line">    TextDirection textDirection,</span><br><span class="line">    <span class="comment">// 表示纵轴（垂直）的对齐排列方向，默认是VerticalDirection.down，表示从上到下。这个参数一般用于Column组件里</span></span><br><span class="line">    VerticalDirection verticalDirection = VerticalDirection.down,</span><br><span class="line">    <span class="comment">// 字符对齐基线方式</span></span><br><span class="line">    TextBaseline textBaseline,</span><br><span class="line">    <span class="comment">// 子元素集合</span></span><br><span class="line">    <span class="built_in">List</span>&lt;Widget&gt; children = <span class="keyword">const</span> &lt;Widget&gt;[],</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><ul><li>MainAxisAlignment</li></ul><p>主轴属性：主轴方向上的对齐方式，Row 是横向轴为主轴</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> MainAxisAlignment &#123;</span><br><span class="line">  <span class="comment">// 按照主轴起点对齐，例如：按照靠近最左侧子元素对齐</span></span><br><span class="line">  start,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 将子元素放置在主轴的末尾，按照末尾对齐</span></span><br><span class="line">  end,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 子元素放置在主轴中心对齐</span></span><br><span class="line">  center,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 将主轴方向上的空白区域均分，使得子元素之间的空白区域相等，首尾子元素都靠近首尾，没有间隙。有点类似于两端对齐</span></span><br><span class="line">  spaceBetween,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 将主轴方向上的空白区域均分，使得子元素之间的空白区域相等，但是首尾子元素的空白区域为1/2</span></span><br><span class="line">  spaceAround,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 将主轴方向上的空白区域均分，使得子元素之间的空白区域相等，包括首尾子元素</span></span><br><span class="line">  spaceEvenly,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>CrossAxisAlignment</li></ul><p>交叉属性：在交叉轴方向的对齐方式，Row 是纵向轴。Row 的高度等于子元素中最高的子元素高度</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> CrossAxisAlignment &#123;</span><br><span class="line">  <span class="comment">// 子元素在交叉轴上起点处展示</span></span><br><span class="line">  start,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 子元素在交叉轴上末尾处展示</span></span><br><span class="line">  end,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 子元素在交叉轴上居中展示</span></span><br><span class="line">  center,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 让子元素填满交叉轴方向</span></span><br><span class="line">  stretch,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 在交叉轴方向，使得子元素按照baseline对齐</span></span><br><span class="line">  baseline,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>MainAxisSize</li></ul><p>在主轴方向子元素占有空间的方式，Row 的主轴是横向轴。默认是 max</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> MainAxisSize &#123;</span><br><span class="line">  <span class="comment">// 根据传入的布局约束条件，最大化主轴方向占用可用空间，也就是尽可能充满可用宽度</span></span><br><span class="line">  max,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 与max相反，是最小化占用主轴方向的可用空间</span></span><br><span class="line">  min,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Column"><a href="#Column" class="headerlink" title="Column"></a>Column</h2><p>Column 是纵向排列子元素</p><p>参数用法同上</p><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Row 行组件</span></span><br><span class="line">Widget _buildRow() &#123;</span><br><span class="line">  <span class="keyword">return</span> Row(</span><br><span class="line">    mainAxisAlignment: MainAxisAlignment.center,</span><br><span class="line">    verticalDirection: VerticalDirection.up,</span><br><span class="line">    textBaseline: TextBaseline.ideographic,</span><br><span class="line">    children: &lt;Widget&gt;[</span><br><span class="line">      RaisedButton(</span><br><span class="line">        color: Colors.blue,</span><br><span class="line">        child: Text(<span class="string">'按钮1'</span>),</span><br><span class="line">        onPressed: () &#123;&#125;,</span><br><span class="line">      ),</span><br><span class="line">      RaisedButton(</span><br><span class="line">        color: Colors.grey,</span><br><span class="line">        child: Text(<span class="string">'按钮2'</span>),</span><br><span class="line">        onPressed: () &#123;&#125;,</span><br><span class="line">      ),</span><br><span class="line">      RaisedButton(</span><br><span class="line">        color: Colors.orange,</span><br><span class="line">        child: Text(<span class="string">'按钮3'</span>),</span><br><span class="line">        onPressed: () &#123;&#125;,</span><br><span class="line">      ),</span><br><span class="line">    ],</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Column 列组件</span></span><br><span class="line">Widget _buildColumn() &#123;</span><br><span class="line">  <span class="keyword">return</span> Column(</span><br><span class="line">    mainAxisAlignment: MainAxisAlignment.center,</span><br><span class="line">    children: &lt;Widget&gt;[</span><br><span class="line">      RaisedButton(</span><br><span class="line">        color: Colors.blue,</span><br><span class="line">        child: Text(<span class="string">'按钮1'</span>),</span><br><span class="line">        onPressed: () &#123;&#125;,</span><br><span class="line">      ),</span><br><span class="line">      RaisedButton(</span><br><span class="line">        color: Colors.grey,</span><br><span class="line">        child: Text(<span class="string">'按钮2'</span>),</span><br><span class="line">        onPressed: () &#123;&#125;,</span><br><span class="line">      ),</span><br><span class="line">      RaisedButton(</span><br><span class="line">        color: Colors.orange,</span><br><span class="line">        child: Text(<span class="string">'按钮3'</span>),</span><br><span class="line">        onPressed: () &#123;&#125;,</span><br><span class="line">      ),</span><br><span class="line">    ],</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Row Column 组件嵌套</span></span><br><span class="line">Widget _buildRowColumn() &#123;</span><br><span class="line">  <span class="keyword">return</span> Column(</span><br><span class="line">    mainAxisAlignment: MainAxisAlignment.center,</span><br><span class="line">    <span class="comment">// crossAxisAlignment: CrossAxisAlignment.center,</span></span><br><span class="line">    children: &lt;Widget&gt;[</span><br><span class="line">      Row(</span><br><span class="line">        <span class="comment">// 元素排列顺序</span></span><br><span class="line">        textDirection: TextDirection.rtl,</span><br><span class="line">        <span class="comment">// 主轴方向</span></span><br><span class="line">        mainAxisAlignment: MainAxisAlignment.center,</span><br><span class="line">        <span class="comment">// 交叉轴的起始位置</span></span><br><span class="line">        verticalDirection: VerticalDirection.up,</span><br><span class="line">        <span class="comment">// 交叉轴对齐方式</span></span><br><span class="line">        crossAxisAlignment: CrossAxisAlignment.end,</span><br><span class="line">        children: &lt;Widget&gt;[</span><br><span class="line">          RaisedButton(</span><br><span class="line">            color: Colors.blue,</span><br><span class="line">            child: Text(<span class="string">'按钮1'</span>),</span><br><span class="line">            onPressed: () &#123;&#125;,</span><br><span class="line">          ),</span><br><span class="line">          RaisedButton(</span><br><span class="line">            color: Colors.blue,</span><br><span class="line">            child: Text(<span class="string">'按钮2222222'</span>),</span><br><span class="line">            onPressed: () &#123;&#125;,</span><br><span class="line">          ),</span><br><span class="line">          Container(</span><br><span class="line">            width: <span class="number">100</span>,</span><br><span class="line">            height: <span class="number">100</span>,</span><br><span class="line">            color: Colors.yellow,</span><br><span class="line">          )</span><br><span class="line">        ],</span><br><span class="line">      )</span><br><span class="line">    ],</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> MaterialApp(</span><br><span class="line">  title: <span class="string">'Material App'</span>,</span><br><span class="line">  home: Scaffold(</span><br><span class="line">    appBar: AppBar(</span><br><span class="line">      title: Text(<span class="string">'Material App Bar'</span>),</span><br><span class="line">    ),</span><br><span class="line">    body:</span><br><span class="line">        <span class="comment">//_buildRow(),</span></span><br><span class="line">        <span class="comment">// _buildColumn(),</span></span><br><span class="line">        _buildRowColumn(),</span><br><span class="line">  ),</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><a href="https://github.com/ducafecat/flutter-learn/blob/master/row_column_widget" target="_blank" rel="noopener">https://github.com/ducafecat/flutter-learn/blob/master/row_column_widget</a></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://api.flutter.dev/flutter/widgets/Row-class.html" target="_blank" rel="noopener">Row class</a></li><li><a href="https://api.flutter.dev/flutter/widgets/Column-class.html" target="_blank" rel="noopener">Column class</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Row 行组件&lt;/li&gt;
&lt;li&gt;Column 列组件&lt;/li&gt;
&lt;li&gt;mainAxisAlignment 主
      
    
    </summary>
    
      <category term="Flutter零基础入门中文教学" scheme="https://ducafecat.tech/categories/Flutter%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%E4%B8%AD%E6%96%87%E6%95%99%E5%AD%A6/"/>
    
    
      <category term="flutter" scheme="https://ducafecat.tech/tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>Flutter 零基础入门中文教学 - 15 基础组件 MaterialApp Scaffold</title>
    <link href="https://ducafecat.tech/2019/10/09/flutter/flutter-15-scaffold/"/>
    <id>https://ducafecat.tech/2019/10/09/flutter/flutter-15-scaffold/</id>
    <published>2019-10-08T16:00:00.000Z</published>
    <updated>2019-10-11T07:40:16.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h2><ul><li>MaterialApp</li><li>Scafford</li><li>Scaffold.of</li></ul><h2 id="MaterialApp"><a href="#MaterialApp" class="headerlink" title="MaterialApp"></a>MaterialApp</h2><p>Material 风格的程序的构建，如 Key 导航 路由 首页 样式 多语言 调试</p><ul><li>构造</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> MaterialApp(&#123;</span><br><span class="line">  Key key,</span><br><span class="line">  <span class="comment">// 导航键 , key的作用提高复用性能</span></span><br><span class="line">  <span class="keyword">this</span>.navigatorKey,</span><br><span class="line">  <span class="comment">// 主页</span></span><br><span class="line">  <span class="keyword">this</span>.home,</span><br><span class="line">  <span class="comment">// 路由</span></span><br><span class="line">  <span class="keyword">this</span>.routes = <span class="keyword">const</span> &lt;<span class="built_in">String</span>, WidgetBuilder&gt;&#123;&#125;,</span><br><span class="line">  <span class="comment">// 初始命名路由</span></span><br><span class="line">  <span class="keyword">this</span>.initialRoute,</span><br><span class="line">  <span class="comment">// 路由构造</span></span><br><span class="line">  <span class="keyword">this</span>.onGenerateRoute,</span><br><span class="line">  <span class="comment">// 未知路由</span></span><br><span class="line">  <span class="keyword">this</span>.onUnknownRoute,</span><br><span class="line">  <span class="comment">// 导航观察器</span></span><br><span class="line">  <span class="keyword">this</span>.navigatorObservers = <span class="keyword">const</span> &lt;NavigatorObserver&gt;[],</span><br><span class="line">  <span class="comment">// 建造者</span></span><br><span class="line">  <span class="keyword">this</span>.builder,</span><br><span class="line">  <span class="comment">// APP 标题</span></span><br><span class="line">  <span class="keyword">this</span>.title = <span class="string">''</span>,</span><br><span class="line">  <span class="comment">// 生成标题</span></span><br><span class="line">  <span class="keyword">this</span>.onGenerateTitle,</span><br><span class="line">  <span class="comment">// APP 颜色</span></span><br><span class="line">  <span class="keyword">this</span>.color,</span><br><span class="line">  <span class="comment">// 样式定义</span></span><br><span class="line">  <span class="keyword">this</span>.theme,</span><br><span class="line">  <span class="comment">// 主机暗色模式</span></span><br><span class="line">  <span class="keyword">this</span>.darkTheme,</span><br><span class="line">  <span class="comment">// 样式模式</span></span><br><span class="line">  <span class="keyword">this</span>.themeMode = ThemeMode.system,</span><br><span class="line">  <span class="comment">// 多语言 本地化</span></span><br><span class="line">  <span class="keyword">this</span>.locale,</span><br><span class="line">  <span class="comment">// 多语言代理</span></span><br><span class="line">  <span class="keyword">this</span>.localizationsDelegates,</span><br><span class="line">  <span class="comment">// 多语言回调</span></span><br><span class="line">  <span class="keyword">this</span>.localeListResolutionCallback,</span><br><span class="line">  <span class="keyword">this</span>.localeResolutionCallback,</span><br><span class="line">  <span class="comment">// 支持的多国语言</span></span><br><span class="line">  <span class="keyword">this</span>.supportedLocales = <span class="keyword">const</span> &lt;Locale&gt;[Locale(<span class="string">'en'</span>, <span class="string">'US'</span>)],</span><br><span class="line">  <span class="comment">// 调试显示材质网格</span></span><br><span class="line">  <span class="keyword">this</span>.debugShowMaterialGrid = <span class="keyword">false</span>,</span><br><span class="line">  <span class="comment">// 显示性能叠加</span></span><br><span class="line">  <span class="keyword">this</span>.showPerformanceOverlay = <span class="keyword">false</span>,</span><br><span class="line">  <span class="comment">// 检查缓存图片的情况</span></span><br><span class="line">  <span class="keyword">this</span>.checkerboardRasterCacheImages = <span class="keyword">false</span>,</span><br><span class="line">  <span class="comment">// 检查不必要的setlayer</span></span><br><span class="line">  <span class="keyword">this</span>.checkerboardOffscreenLayers = <span class="keyword">false</span>,</span><br><span class="line">  <span class="comment">// 显示语义调试器</span></span><br><span class="line">  <span class="keyword">this</span>.showSemanticsDebugger = <span class="keyword">false</span>,</span><br><span class="line">  <span class="comment">// 显示debug标记 右上角</span></span><br><span class="line">  <span class="keyword">this</span>.debugShowCheckedModeBanner = <span class="keyword">true</span>,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="Scaffold"><a href="#Scaffold" class="headerlink" title="Scaffold"></a>Scaffold</h2><p>Scaffold 是一个页面布局脚手架，实现了基本的 Material 布局，继承自 StatefulWidget，是有状态组件。我们知道大部分的应用页面都是含有标题栏，主体内容，底部导航菜单或者侧滑抽屉菜单等等构成，那么每次都重复写这些内容会大大降低开发效率，所以 Flutter 提供了 Material 风格的 Scaffold 页面布局脚手架，可以很快地搭建出这些元素部分</p><ul><li>构造</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> Scaffold(&#123;</span><br><span class="line">    Key key,</span><br><span class="line">    <span class="comment">// 菜单栏</span></span><br><span class="line">    <span class="keyword">this</span>.appBar,</span><br><span class="line">    <span class="comment">// 中间主体内容部分</span></span><br><span class="line">    <span class="keyword">this</span>.body,</span><br><span class="line">    <span class="comment">// 悬浮按钮</span></span><br><span class="line">    <span class="keyword">this</span>.floatingActionButton,</span><br><span class="line">    <span class="comment">// 悬浮按钮位置</span></span><br><span class="line">    <span class="keyword">this</span>.floatingActionButtonLocation,</span><br><span class="line">    <span class="comment">// 悬浮按钮动画</span></span><br><span class="line">    <span class="keyword">this</span>.floatingActionButtonAnimator,</span><br><span class="line">    <span class="comment">// 固定在下方显示的按钮</span></span><br><span class="line">    <span class="keyword">this</span>.persistentFooterButtons,</span><br><span class="line">    <span class="comment">// 左侧 侧滑抽屉菜单</span></span><br><span class="line">    <span class="keyword">this</span>.drawer,</span><br><span class="line">    <span class="comment">// 右侧 侧滑抽屉菜单</span></span><br><span class="line">    <span class="keyword">this</span>.endDrawer,</span><br><span class="line">    <span class="comment">// 底部菜单</span></span><br><span class="line">    <span class="keyword">this</span>.bottomNavigationBar,</span><br><span class="line">    <span class="comment">// 底部拉出菜单</span></span><br><span class="line">    <span class="keyword">this</span>.bottomSheet,</span><br><span class="line">    <span class="comment">// 背景色</span></span><br><span class="line">    <span class="keyword">this</span>.backgroundColor,</span><br><span class="line">    <span class="comment">// 自动适应底部padding</span></span><br><span class="line">    <span class="keyword">this</span>.resizeToAvoidBottomPadding,</span><br><span class="line">    <span class="comment">// 重新计算body布局空间大小，避免被遮挡</span></span><br><span class="line">    <span class="keyword">this</span>.resizeToAvoidBottomInset,</span><br><span class="line">    <span class="comment">// 是否显示到底部，默认为true将显示到顶部状态栏</span></span><br><span class="line">    <span class="keyword">this</span>.primary = <span class="keyword">true</span>,</span><br><span class="line">    <span class="keyword">this</span>.drawerDragStartBehavior = DragStartBehavior.down,</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><h2 id="Scaffold-of"><a href="#Scaffold-of" class="headerlink" title="Scaffold.of"></a>Scaffold.of</h2><p>Scaffold.of 函数来获取 ScaffoldState 对象</p><p>contenxt 是动态获取的</p><p>所以需要用 Builder 套一个构造器</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> ScaffoldState of(BuildContext context, &#123; <span class="built_in">bool</span> nullOk = <span class="keyword">false</span> &#125;) &#123;</span><br><span class="line">  <span class="keyword">assert</span>(nullOk != <span class="keyword">null</span>);</span><br><span class="line">  <span class="keyword">assert</span>(context != <span class="keyword">null</span>);</span><br><span class="line">  <span class="keyword">final</span> ScaffoldState result = context.ancestorStateOfType(<span class="keyword">const</span> TypeMatcher&lt;ScaffoldState&gt;());</span><br><span class="line">  <span class="keyword">if</span> (nullOk || result != <span class="keyword">null</span>)</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">  <span class="keyword">throw</span> FlutterError(</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> MaterialApp(</span><br><span class="line">  <span class="comment">// APP 标题</span></span><br><span class="line">  title: <span class="string">'Material App'</span>,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// APP 颜色</span></span><br><span class="line">  color: Colors.yellow,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 样式</span></span><br><span class="line">  theme: ThemeData(primaryColor: Colors.green),</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 主机暗色模式 android 下无效 ios 可以</span></span><br><span class="line">  darkTheme: ThemeData(primaryColor: Colors.yellow),</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 调试显示材质网格</span></span><br><span class="line">  debugShowMaterialGrid: <span class="keyword">false</span>,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 显示性能叠加</span></span><br><span class="line">  showPerformanceOverlay: <span class="keyword">false</span>,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 检查缓存图片的情况</span></span><br><span class="line">  checkerboardRasterCacheImages: <span class="keyword">false</span>,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 检查不必要的setlayer</span></span><br><span class="line">  checkerboardOffscreenLayers: <span class="keyword">false</span>,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 显示语义调试器</span></span><br><span class="line">  showSemanticsDebugger: <span class="keyword">false</span>,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 显示debug标记 右上角</span></span><br><span class="line">  debugShowCheckedModeBanner: <span class="keyword">false</span>,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 主页</span></span><br><span class="line">  home: Scaffold(</span><br><span class="line">    <span class="comment">// 菜单栏</span></span><br><span class="line">    appBar: AppBar(</span><br><span class="line">      title: Text(<span class="string">'Material App Bar'</span>),</span><br><span class="line">    ),</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 悬浮按钮</span></span><br><span class="line">    floatingActionButton: FloatingActionButton(</span><br><span class="line">      onPressed: () &#123;&#125;,</span><br><span class="line">      child: Icon(Icons.add_photo_alternate),</span><br><span class="line">    ),</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 悬浮按钮位置</span></span><br><span class="line">    floatingActionButtonLocation: FloatingActionButtonLocation.centerFloat,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 固定在下方显示的按钮</span></span><br><span class="line">    persistentFooterButtons: [</span><br><span class="line">      Text(<span class="string">'persistentFooterButtons1'</span>),</span><br><span class="line">      Text(<span class="string">'persistentFooterButtons2'</span>),</span><br><span class="line">    ],</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 左侧 侧滑抽屉菜单</span></span><br><span class="line">    drawer: Drawer(</span><br><span class="line">      child: Text(<span class="string">'data'</span>),</span><br><span class="line">    ),</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 右侧 侧滑抽屉菜单</span></span><br><span class="line">    endDrawer: Drawer(</span><br><span class="line">      child: Text(<span class="string">'data'</span>),</span><br><span class="line">    ),</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 底部菜单</span></span><br><span class="line">    bottomNavigationBar: Text(<span class="string">'bottomNavigationBar'</span>),</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 底部拉出菜单</span></span><br><span class="line">    bottomSheet: Text(<span class="string">'bottomSheet'</span>),</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 背景色</span></span><br><span class="line">    backgroundColor: Colors.amberAccent,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 自动适应底部padding</span></span><br><span class="line">    resizeToAvoidBottomPadding: <span class="keyword">true</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 压缩顶部菜单空间</span></span><br><span class="line">    primary: <span class="keyword">false</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// drawerDragStartBehavior: DragStartBehavior.start,</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 正文</span></span><br><span class="line">    body: Builder(</span><br><span class="line">      builder: (BuildContext context) &#123;</span><br><span class="line">        <span class="keyword">return</span> Center(</span><br><span class="line">          child: Container(</span><br><span class="line">            child: RaisedButton(</span><br><span class="line">              onPressed: () &#123;</span><br><span class="line">                <span class="comment">// Scaffold.of(context).openDrawer();</span></span><br><span class="line">                Scaffold.of(context).showSnackBar(<span class="keyword">new</span> SnackBar(</span><br><span class="line">                  content: <span class="keyword">new</span> Text(<span class="string">'Hello!'</span>),</span><br><span class="line">                ));</span><br><span class="line">              &#125;,</span><br><span class="line">              child: Text(<span class="string">'data'</span>),</span><br><span class="line">            ),</span><br><span class="line">          ),</span><br><span class="line">        );</span><br><span class="line">      &#125;,</span><br><span class="line">    ),</span><br><span class="line">  ),</span><br><span class="line"></span><br><span class="line">  <span class="comment">//</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><a href="https://github.com/ducafecat/flutter-learn/blob/master/container_widget" target="_blank" rel="noopener">https://github.com/ducafecat/flutter-learn/blob/master/container_widget</a></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://api.flutter.dev/flutter/material/MaterialApp-class.html" target="_blank" rel="noopener">MaterialApp class</a></li><li><a href="https://api.flutter.dev/flutter/material/Scaffold-class.html" target="_blank" rel="noopener">Scaffold class</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;MaterialApp&lt;/li&gt;
&lt;li&gt;Scafford&lt;/li&gt;
&lt;li&gt;Scaffold.of&lt;/li&gt;

      
    
    </summary>
    
      <category term="Flutter零基础入门中文教学" scheme="https://ducafecat.tech/categories/Flutter%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%E4%B8%AD%E6%96%87%E6%95%99%E5%AD%A6/"/>
    
    
      <category term="flutter" scheme="https://ducafecat.tech/tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>Flutter 零基础入门中文教学 - 14 基础组件 Container</title>
    <link href="https://ducafecat.tech/2019/10/08/flutter/flutter-14-container/"/>
    <id>https://ducafecat.tech/2019/10/08/flutter/flutter-14-container/</id>
    <published>2019-10-07T16:00:00.000Z</published>
    <updated>2019-10-10T08:34:41.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h2><ul><li>基础用法</li><li>Padding 和 Margin</li><li>BoxDecoration 装饰</li><li>BoxShadow 阴影</li><li>RadialGradient 渐变</li></ul><h2 id="基础用法"><a href="#基础用法" class="headerlink" title="基础用法"></a>基础用法</h2><p>Container 是一个组合类容器，它本身不对应具体的 RenderObject，它是 DecoratedBox、ConstrainedBox、Transform、Padding、Align 等组件组合的一个多功能容器，所以我们只需通过一个 Container 组件可以实现同时需要装饰、变换、限制的场景。下面是 Container 的定义：</p><ul><li>构造函数</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">Container(&#123;</span><br><span class="line">    Key key,</span><br><span class="line">    <span class="comment">// 容器子Widget对齐方式</span></span><br><span class="line">    <span class="keyword">this</span>.alignment,</span><br><span class="line">    <span class="comment">// 容器内部padding</span></span><br><span class="line">    <span class="keyword">this</span>.padding,</span><br><span class="line">    <span class="comment">// 背景色</span></span><br><span class="line">    Color color,</span><br><span class="line">    <span class="comment">// 背景装饰</span></span><br><span class="line">    Decoration decoration,</span><br><span class="line">    <span class="comment">// 前景装饰</span></span><br><span class="line">    <span class="keyword">this</span>.foregroundDecoration,</span><br><span class="line">    <span class="comment">// 容器的宽度</span></span><br><span class="line">    <span class="built_in">double</span> width,</span><br><span class="line">    <span class="comment">// 容器的高度</span></span><br><span class="line">    <span class="built_in">double</span> height,</span><br><span class="line">    <span class="comment">// 容器大小的限制条件</span></span><br><span class="line">    BoxConstraints constraints,</span><br><span class="line">    <span class="comment">// 容器外部margin</span></span><br><span class="line">    <span class="keyword">this</span>.margin,</span><br><span class="line">    <span class="comment">// 变换，如旋转</span></span><br><span class="line">    <span class="keyword">this</span>.transform,</span><br><span class="line">    <span class="comment">// 容器内子Widget</span></span><br><span class="line">    <span class="keyword">this</span>.child,</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><h2 id="BoxDecoration-装饰"><a href="#BoxDecoration-装饰" class="headerlink" title="BoxDecoration 装饰"></a>BoxDecoration 装饰</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> BoxDecoration(&#123;</span><br><span class="line">  <span class="comment">// 背景色</span></span><br><span class="line">  <span class="keyword">this</span>.color,</span><br><span class="line">  <span class="comment">// 背景图片</span></span><br><span class="line">  <span class="keyword">this</span>.image,</span><br><span class="line">  <span class="comment">// 边框样式</span></span><br><span class="line">  <span class="keyword">this</span>.border,</span><br><span class="line">  <span class="comment">// 边框圆角</span></span><br><span class="line">  <span class="keyword">this</span>.borderRadius,</span><br><span class="line">  <span class="comment">// 阴影</span></span><br><span class="line">  <span class="keyword">this</span>.boxShadow,</span><br><span class="line">  <span class="comment">// 渐变</span></span><br><span class="line">  <span class="keyword">this</span>.gradient,</span><br><span class="line">  <span class="comment">// 背景混合模式</span></span><br><span class="line">  <span class="keyword">this</span>.backgroundBlendMode,</span><br><span class="line">  <span class="comment">// 形状</span></span><br><span class="line">  <span class="keyword">this</span>.shape = BoxShape.rectangle,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">Container(</span><br><span class="line">    constraints: BoxConstraints.expand(</span><br><span class="line">      height: <span class="number">200.0</span>,</span><br><span class="line">    ),</span><br><span class="line">    margin: <span class="keyword">const</span> EdgeInsets.all(<span class="number">20.0</span>),</span><br><span class="line">    padding: <span class="keyword">const</span> EdgeInsets.all(<span class="number">8.0</span>),</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 背景色</span></span><br><span class="line">    <span class="comment">// color: Colors.teal.shade700,</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 子Widget居中</span></span><br><span class="line">    alignment: Alignment.centerLeft,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 子Widget元素</span></span><br><span class="line">    child: Text(<span class="string">'Hello World'</span>,</span><br><span class="line">        style: Theme.of(context)</span><br><span class="line">            .textTheme</span><br><span class="line">            .display1</span><br><span class="line">            .copyWith(color: Colors.white)),</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 背景装饰</span></span><br><span class="line">    decoration: BoxDecoration(</span><br><span class="line">      <span class="comment">// 背景色</span></span><br><span class="line">      color: Colors.blueAccent,</span><br><span class="line">      <span class="comment">// 圆角</span></span><br><span class="line">      <span class="comment">// borderRadius: BorderRadius.all(</span></span><br><span class="line">      <span class="comment">//   Radius.circular(20.0),</span></span><br><span class="line">      <span class="comment">// ),</span></span><br><span class="line">      <span class="comment">// 渐变</span></span><br><span class="line">      gradient: RadialGradient(</span><br><span class="line">        colors: [Colors.red, Colors.orange],</span><br><span class="line">        center: Alignment.topLeft,</span><br><span class="line">        radius: <span class="number">.98</span>,</span><br><span class="line">      ),</span><br><span class="line">      <span class="comment">// 阴影</span></span><br><span class="line">      boxShadow: [</span><br><span class="line">        BoxShadow(</span><br><span class="line">          blurRadius: <span class="number">2</span>,</span><br><span class="line">          offset: Offset(<span class="number">0</span>, <span class="number">2</span>),</span><br><span class="line">          color: Colors.blue,</span><br><span class="line">        ),</span><br><span class="line">      ],</span><br><span class="line">      <span class="comment">// 背景图</span></span><br><span class="line">      <span class="comment">// image: DecorationImage(</span></span><br><span class="line">      <span class="comment">//   image: AssetImage('assets/flutter.png'),</span></span><br><span class="line">      <span class="comment">//   fit: BoxFit.cover,</span></span><br><span class="line">      <span class="comment">// ),</span></span><br><span class="line">      <span class="comment">// 背景混合模式</span></span><br><span class="line">      backgroundBlendMode: BlendMode.color,</span><br><span class="line">      <span class="comment">// 形状</span></span><br><span class="line">      shape: BoxShape.circle,</span><br><span class="line">    ),</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 前景装饰</span></span><br><span class="line">    <span class="comment">// foregroundDecoration: BoxDecoration(</span></span><br><span class="line">    <span class="comment">//   image: DecorationImage(</span></span><br><span class="line">    <span class="comment">//     image: AssetImage('assets/flutter.png'),</span></span><br><span class="line">    <span class="comment">//   ),</span></span><br><span class="line">    <span class="comment">// ),</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Container旋转</span></span><br><span class="line">    <span class="comment">// transform: Matrix4.rotationZ(0.1),</span></span><br><span class="line">  ),</span><br></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><a href="https://github.com/ducafecat/flutter-learn/blob/master/container_widget" target="_blank" rel="noopener">https://github.com/ducafecat/flutter-learn/blob/master/container_widget</a></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://api.flutter.dev/flutter/widgets/Container-class.html" target="_blank" rel="noopener">Container class</a></li><li><a href="https://api.flutter.dev/flutter/painting/BoxDecoration-class.html" target="_blank" rel="noopener">BoxDecoration class</a></li><li><a href="https://api.flutter.dev/flutter/painting/RadialGradient-class.html" target="_blank" rel="noopener">RadialGradient class</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;基础用法&lt;/li&gt;
&lt;li&gt;Padding 和 Margin&lt;/li&gt;
&lt;li&gt;BoxDecoration 装饰
      
    
    </summary>
    
      <category term="Flutter零基础入门中文教学" scheme="https://ducafecat.tech/categories/Flutter%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%E4%B8%AD%E6%96%87%E6%95%99%E5%AD%A6/"/>
    
    
      <category term="flutter" scheme="https://ducafecat.tech/tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>Flutter 零基础入门中文教学 - 12 基础组件 Image Asset NetworkImage</title>
    <link href="https://ducafecat.tech/2019/10/07/flutter/flutter-12-widget-image/"/>
    <id>https://ducafecat.tech/2019/10/07/flutter/flutter-12-widget-image/</id>
    <published>2019-10-06T16:00:00.000Z</published>
    <updated>2019-10-07T09:07:13.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-10-07-16-37-56.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h2><ul><li>image 构造函数的 5 种方式</li><li>加载图片 Asset、NetworkImage</li><li>占位图 FadeInImage</li><li>头像 CircleAvatar</li><li>圆角 ClipRRect</li><li>图片 fit 方式</li></ul><h2 id="1-Image"><a href="#1-Image" class="headerlink" title="1. Image"></a>1. Image</h2><p>图片显示组件</p><p>支持图像格式 JPEG，PNG，GIF，动画 GIF，WebP，动画 WebP，BMP 和 WBMP</p><ul><li>五种构造方式</li></ul><table><thead><tr><th>构造</th><th>说明</th></tr></thead><tbody><tr><td>Image()</td><td>ImageProvider 适配图片</td></tr><tr><td>Image.asset</td><td>加载资源图片</td></tr><tr><td>Image.file</td><td>加载本地图片</td></tr><tr><td>Image.network</td><td>加载网络图片</td></tr><tr><td>Image.memory</td><td>加载 Uint8List 资源图片</td></tr></tbody></table><ul><li>构造参数</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//通过ImageProvider来加载图片</span></span><br><span class="line"><span class="keyword">const</span> Image(&#123;</span><br><span class="line">    Key key,</span><br><span class="line">    <span class="comment">// ImageProvider，图像显示源</span></span><br><span class="line">    <span class="meta">@required</span> <span class="keyword">this</span>.image,</span><br><span class="line">    <span class="keyword">this</span>.semanticLabel,</span><br><span class="line">    <span class="keyword">this</span>.excludeFromSemantics = <span class="keyword">false</span>,</span><br><span class="line">    <span class="comment">//显示宽度</span></span><br><span class="line">    <span class="keyword">this</span>.width,</span><br><span class="line">    <span class="comment">//显示高度</span></span><br><span class="line">    <span class="keyword">this</span>.height,</span><br><span class="line">    <span class="comment">//图片的混合色值</span></span><br><span class="line">    <span class="keyword">this</span>.color,</span><br><span class="line">    <span class="comment">//混合模式</span></span><br><span class="line">    <span class="keyword">this</span>.colorBlendMode,</span><br><span class="line">    <span class="comment">//缩放显示模式</span></span><br><span class="line">    <span class="keyword">this</span>.fit,</span><br><span class="line">    <span class="comment">//对齐方式</span></span><br><span class="line">    <span class="keyword">this</span>.alignment = Alignment.center,</span><br><span class="line">    <span class="comment">//重复方式</span></span><br><span class="line">    <span class="keyword">this</span>.repeat = ImageRepeat.noRepeat,</span><br><span class="line">    <span class="comment">//当图片需要被拉伸显示的时候，centerSlice定义的矩形区域会被拉伸，类似.9图片</span></span><br><span class="line">    <span class="keyword">this</span>.centerSlice,</span><br><span class="line">    <span class="comment">//类似于文字的显示方向</span></span><br><span class="line">    <span class="keyword">this</span>.matchTextDirection = <span class="keyword">false</span>,</span><br><span class="line">    <span class="comment">//图片发生变化后，加载过程中原图片保留还是留白</span></span><br><span class="line">    <span class="keyword">this</span>.gaplessPlayback = <span class="keyword">false</span>,</span><br><span class="line">    <span class="comment">//图片显示质量</span></span><br><span class="line">    <span class="keyword">this</span>.filterQuality = FilterQuality.low,</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 加载网络图片，封装类：NetworkImage</span></span><br><span class="line">Image.network(</span><br><span class="line">    <span class="comment">//路径</span></span><br><span class="line">    <span class="built_in">String</span> src,</span><br><span class="line">   &#123;</span><br><span class="line">    Key key,</span><br><span class="line">    <span class="comment">//缩放</span></span><br><span class="line">    <span class="built_in">double</span> scale = <span class="number">1.0</span>,</span><br><span class="line">    <span class="keyword">this</span>.semanticLabel,</span><br><span class="line">    <span class="keyword">this</span>.excludeFromSemantics = <span class="keyword">false</span>,</span><br><span class="line">    <span class="keyword">this</span>.width,</span><br><span class="line">    <span class="keyword">this</span>.height,</span><br><span class="line">    <span class="keyword">this</span>.color,</span><br><span class="line">    <span class="keyword">this</span>.colorBlendMode,</span><br><span class="line">    <span class="keyword">this</span>.fit,</span><br><span class="line">    <span class="keyword">this</span>.alignment = Alignment.center,</span><br><span class="line">    <span class="keyword">this</span>.repeat = ImageRepeat.noRepeat,</span><br><span class="line">    <span class="keyword">this</span>.centerSlice,</span><br><span class="line">    <span class="keyword">this</span>.matchTextDirection = <span class="keyword">false</span>,</span><br><span class="line">    <span class="keyword">this</span>.gaplessPlayback = <span class="keyword">false</span>,</span><br><span class="line">    <span class="keyword">this</span>.filterQuality = FilterQuality.low,</span><br><span class="line">    <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">String</span>&gt; headers,</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 加载本地File文件图片，封装类：FileImage</span></span><br><span class="line">Image.file(</span><br><span class="line">    <span class="comment">//File对象</span></span><br><span class="line">    File file,</span><br><span class="line">  &#123;</span><br><span class="line">    Key key,</span><br><span class="line">    <span class="built_in">double</span> scale = <span class="number">1.0</span>,</span><br><span class="line">    <span class="keyword">this</span>.semanticLabel,</span><br><span class="line">    <span class="keyword">this</span>.excludeFromSemantics = <span class="keyword">false</span>,</span><br><span class="line">    <span class="keyword">this</span>.width,</span><br><span class="line">    <span class="keyword">this</span>.height,</span><br><span class="line">    <span class="keyword">this</span>.color,</span><br><span class="line">    <span class="keyword">this</span>.colorBlendMode,</span><br><span class="line">    <span class="keyword">this</span>.fit,</span><br><span class="line">    <span class="keyword">this</span>.alignment = Alignment.center,</span><br><span class="line">    <span class="keyword">this</span>.repeat = ImageRepeat.noRepeat,</span><br><span class="line">    <span class="keyword">this</span>.centerSlice,</span><br><span class="line">    <span class="keyword">this</span>.matchTextDirection = <span class="keyword">false</span>,</span><br><span class="line">    <span class="keyword">this</span>.gaplessPlayback = <span class="keyword">false</span>,</span><br><span class="line">    <span class="keyword">this</span>.filterQuality = FilterQuality.low,</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 加载本地资源图片,例如项目内资源图片</span></span><br><span class="line"><span class="comment">// 需要把图片路径在pubspec.yaml文件中声明一下，如：</span></span><br><span class="line"><span class="comment">// assets:</span></span><br><span class="line"><span class="comment">//      - packages/fancy_backgrounds/backgrounds/background1.png</span></span><br><span class="line"><span class="comment">// 封装类有：AssetImage、ExactAssetImage</span></span><br><span class="line">Image.asset(</span><br><span class="line">    <span class="comment">//文件名称，包含路径</span></span><br><span class="line">    <span class="built_in">String</span> name,</span><br><span class="line">  &#123;</span><br><span class="line">    Key key,</span><br><span class="line">    <span class="comment">// 用于访问资源对象</span></span><br><span class="line">    AssetBundle bundle,</span><br><span class="line">    <span class="keyword">this</span>.semanticLabel,</span><br><span class="line">    <span class="keyword">this</span>.excludeFromSemantics = <span class="keyword">false</span>,</span><br><span class="line">    <span class="built_in">double</span> scale,</span><br><span class="line">    <span class="keyword">this</span>.width,</span><br><span class="line">    <span class="keyword">this</span>.height,</span><br><span class="line">    <span class="keyword">this</span>.color,</span><br><span class="line">    <span class="keyword">this</span>.colorBlendMode,</span><br><span class="line">    <span class="keyword">this</span>.fit,</span><br><span class="line">    <span class="keyword">this</span>.alignment = Alignment.center,</span><br><span class="line">    <span class="keyword">this</span>.repeat = ImageRepeat.noRepeat,</span><br><span class="line">    <span class="keyword">this</span>.centerSlice,</span><br><span class="line">    <span class="keyword">this</span>.matchTextDirection = <span class="keyword">false</span>,</span><br><span class="line">    <span class="keyword">this</span>.gaplessPlayback = <span class="keyword">false</span>,</span><br><span class="line">    <span class="built_in">String</span> package,</span><br><span class="line">    <span class="keyword">this</span>.filterQuality = FilterQuality.low,</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 加载Uint8List资源图片/从内存中获取图片显示</span></span><br><span class="line"><span class="comment">// 封装类：MemoryImage</span></span><br><span class="line">Image.memory(</span><br><span class="line">    <span class="comment">// Uint8List资源图片</span></span><br><span class="line">    Uint8List bytes,</span><br><span class="line">  &#123;</span><br><span class="line">    Key key,</span><br><span class="line">    <span class="built_in">double</span> scale = <span class="number">1.0</span>,</span><br><span class="line">    <span class="keyword">this</span>.semanticLabel,</span><br><span class="line">    <span class="keyword">this</span>.excludeFromSemantics = <span class="keyword">false</span>,</span><br><span class="line">    <span class="keyword">this</span>.width,</span><br><span class="line">    <span class="keyword">this</span>.height,</span><br><span class="line">    <span class="keyword">this</span>.color,</span><br><span class="line">    <span class="keyword">this</span>.colorBlendMode,</span><br><span class="line">    <span class="keyword">this</span>.fit,</span><br><span class="line">    <span class="keyword">this</span>.alignment = Alignment.center,</span><br><span class="line">    <span class="keyword">this</span>.repeat = ImageRepeat.noRepeat,</span><br><span class="line">    <span class="keyword">this</span>.centerSlice,</span><br><span class="line">    <span class="keyword">this</span>.matchTextDirection = <span class="keyword">false</span>,</span><br><span class="line">    <span class="keyword">this</span>.gaplessPlayback = <span class="keyword">false</span>,</span><br><span class="line">    <span class="keyword">this</span>.filterQuality = FilterQuality.low,</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><p>29 种混合模式</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> BlendMode &#123;</span><br><span class="line">  clear,src,dst,srcOver,dstOver,srcIn,dstIn,srcOut,dstOut,srcATop,dstATop,xor,plus，modulate,screen,overlay,darken,lighten,colorDodge,colorBurn,hardLight,softLight,difference,exclusion,multiply,hue,saturation,color,luminosity,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>主要的混合模式效果如下</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20190523170707924.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>缩放</li></ul><p>enum BoxFit 枚举对象</p><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>fill</td><td>图片按照指定的大小在 Image 中显示，拉伸显示图片，不保持原比例，填满 Image。<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20190523170951568.png" alt title>                </div>                <div class="image-caption"></div>            </figure></td></tr><tr><td>contain</td><td>以原图正常显示为目的，如果原图大小大于 Image 的 size，就按照比例缩小原图的宽高，居中显示在 Image 中。如果原图 size 小于 Image 的 size，则按比例拉升原图的宽和高，填充 Image 一边并居中显示。<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20190523171033329.png" alt title>                </div>                <div class="image-caption"></div>            </figure></td></tr><tr><td>cover</td><td>以原图填满 Image 为目的，如果原图 size 大于 Image 的 size，按比例缩小，居中显示在 Image 上。如果原图 size 小于 Image 的 size，则按比例拉升原图的宽和高，填充 Image 居中显示。<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20190523172626391.png" alt title>                </div>                <div class="image-caption"></div>            </figure></td></tr><tr><td>fitWidth</td><td>以原图正常显示为目的，如果原图宽大小大于（小于）Image 的宽，就缩小（放大）原图的宽与 Image 一致，居中显示在 Image 中。<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20190523172716044.png" alt title>                </div>                <div class="image-caption"></div>            </figure></td></tr><tr><td>fitHeight</td><td>以原图正常显示为目的，如果原图高大小大于（小于）Image 的高，就缩小（放大）原图的高与 Image 一致，居中显示在 Image 中。<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20190523172757661.png" alt title>                </div>                <div class="image-caption"></div>            </figure></td></tr><tr><td>none</td><td>保持原图的大小，显示在 Image 的中心。当原图的 size 大于 Image 的 size 时，多出来的部分被截掉。<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20190523172853657.png" alt title>                </div>                <div class="image-caption"></div>            </figure></td></tr><tr><td>scaleDown</td><td>以原图正常显示为目的，如果原图大小大于 Image 的 size，就按照比例缩小原图的宽高，居中显示在 Image 中。如果原图 size 小于 Image 的 size，则不做处理居中显示图片。<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20190523172919652.png" alt title>                </div>                <div class="image-caption"></div>            </figure></td></tr></tbody></table><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><ul><li>pubspec.yaml</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">assets:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">assets/images/</span></span><br></pre></td></tr></table></figure><ul><li>main.dart</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// assets</span></span><br><span class="line">Text(<span class="string">'assets'</span>),</span><br><span class="line">Image.asset(_assetImg),</span><br><span class="line"></span><br><span class="line"><span class="comment">// 网络读取</span></span><br><span class="line">Text(<span class="string">'网络读取'</span>),</span><br><span class="line">Image.network(_imgUrl),</span><br><span class="line"></span><br><span class="line"><span class="comment">// NetworkImage</span></span><br><span class="line">Text(<span class="string">'NetworkImage'</span>),</span><br><span class="line">Image(image: NetworkImage(_imgUrl)),</span><br><span class="line"></span><br><span class="line"><span class="comment">// 占位图</span></span><br><span class="line">Text(<span class="string">'占位图'</span>),</span><br><span class="line">FadeInImage(</span><br><span class="line">    fadeInCurve: Curves.bounceIn,</span><br><span class="line">    placeholder: AssetImage(_assetImg),</span><br><span class="line">    image: NetworkImage(_imgUrl)),</span><br><span class="line"></span><br><span class="line"><span class="comment">// 原型头像</span></span><br><span class="line">Text(<span class="string">'原型头像'</span>),</span><br><span class="line">CircleAvatar(</span><br><span class="line">    backgroundColor: Colors.brown.shade800,</span><br><span class="line">    child: Text(<span class="string">'圆角图片'</span>),</span><br><span class="line">    backgroundImage: AssetImage(_assetHeaderImg),</span><br><span class="line">    radius: <span class="number">50.0</span>),</span><br><span class="line"></span><br><span class="line"><span class="comment">// 图标</span></span><br><span class="line">Text(<span class="string">'图标'</span>),</span><br><span class="line">ImageIcon(</span><br><span class="line">  NetworkImage(_imgUrl),</span><br><span class="line">  size: <span class="number">100</span>,</span><br><span class="line">),</span><br><span class="line"></span><br><span class="line"><span class="comment">// ClipRRect 圆角</span></span><br><span class="line">Text(<span class="string">'ClipRRect 圆角'</span>),</span><br><span class="line">ClipRRect(</span><br><span class="line">  child: Image.network(_imgUrl),</span><br><span class="line">  borderRadius: BorderRadius.all(Radius.circular(<span class="number">20</span>)),</span><br><span class="line">),</span><br><span class="line"></span><br><span class="line"><span class="comment">// 圆角矩形框</span></span><br><span class="line">Text(<span class="string">'圆角矩形框'</span>),</span><br><span class="line">Container(</span><br><span class="line">  width: <span class="number">200</span>,</span><br><span class="line">  height: <span class="number">80</span>,</span><br><span class="line">  decoration: BoxDecoration(</span><br><span class="line">    shape: BoxShape.rectangle,</span><br><span class="line">    borderRadius: BorderRadius.circular(<span class="number">10.0</span>),</span><br><span class="line">    image: DecorationImage(</span><br><span class="line">        image: NetworkImage(_imgUrl), fit: BoxFit.cover),</span><br><span class="line">  ),</span><br><span class="line">),</span><br><span class="line"></span><br><span class="line"><span class="comment">// 椭圆图</span></span><br><span class="line">Text(<span class="string">'椭圆图'</span>),</span><br><span class="line">ClipOval(</span><br><span class="line">  child: Image.network(</span><br><span class="line">    _imgUrl,</span><br><span class="line">    scale: <span class="number">8.5</span>,</span><br><span class="line">  ),</span><br><span class="line">),</span><br><span class="line"></span><br><span class="line"><span class="comment">// 混色</span></span><br><span class="line">Text(<span class="string">'混色'</span>),</span><br><span class="line">Image.asset(</span><br><span class="line">  _assetHeaderImg,</span><br><span class="line">  color: Colors.amber,</span><br><span class="line">  colorBlendMode: BlendMode.dstATop,</span><br><span class="line">),</span><br><span class="line"></span><br><span class="line"><span class="comment">// 裁剪</span></span><br><span class="line">Text(<span class="string">'裁剪'</span>),</span><br><span class="line">Image.asset(</span><br><span class="line">  _assetImg,</span><br><span class="line">  width: <span class="number">400</span>,</span><br><span class="line">  height: <span class="number">50</span>,</span><br><span class="line">  fit: BoxFit.cover,</span><br><span class="line">),</span><br></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><a href="https://github.com/ducafecat/flutter-learn/tree/master/image_widget" target="_blank" rel="noopener">https://github.com/ducafecat/flutter-learn/tree/master/image_widget</a></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://api.flutter.dev/flutter/dart-ui/Image-class.html" target="_blank" rel="noopener">Image class</a></li><li><a href="https://api.flutter.dev/flutter/painting/NetworkImage-class.html" target="_blank" rel="noopener">NetworkImage class</a></li><li><a href="https://api.flutter.dev/flutter/widgets/FadeInImage-class.html" target="_blank" rel="noopener">FadeInImage class</a></li><li><a href="https://api.flutter.dev/flutter/widgets/ClipRRect-class.html" target="_blank" rel="noopener">ClipRRect class</a></li><li><a href="https://api.flutter.dev/flutter/widgets/ClipOval-class.html" target="_blank" rel="noopener">ClipOval class</a></li><li><a href="https://api.flutter.dev/flutter/widgets/ImageIcon-class.html" target="_blank" rel="noopener">ImageIcon class</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                   
      
    
    </summary>
    
      <category term="Flutter零基础入门中文教学" scheme="https://ducafecat.tech/categories/Flutter%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%E4%B8%AD%E6%96%87%E6%95%99%E5%AD%A6/"/>
    
    
      <category term="flutter" scheme="https://ducafecat.tech/tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>Flutter 零基础入门中文教学 - 13 基础组件 Button FlatButton RaisedButton OutlineButton</title>
    <link href="https://ducafecat.tech/2019/10/07/flutter/flutter-13-widget-button/"/>
    <id>https://ducafecat.tech/2019/10/07/flutter/flutter-13-widget-button/</id>
    <published>2019-10-06T16:00:00.000Z</published>
    <updated>2019-10-07T09:10:03.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-10-07-17-06-41.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h2><p>常用按钮操作</p><ul><li>FlatButton（扁平化）</li><li>RaisedButton（有按下状态）</li><li>OutlineButton（有边框）</li><li>MaterialButton（Material 风格）</li><li>RawMaterialButton（没有应用 style 的 Material 风格按钮）</li><li>FloatingActionButton（悬浮按钮）</li></ul><h2 id="Button"><a href="#Button" class="headerlink" title="Button"></a>Button</h2><p>在 Flutter 中 Button 有很多封装好的 Widget 类：</p><ul><li>FlatButton（扁平化）</li><li>RaisedButton（有按下状态）</li><li>OutlineButton（有边框）</li><li>MaterialButton（Material 风格）</li><li>RawMaterialButton（没有应用 style 的 Material 风格按钮）</li><li>FloatingActionButton（悬浮按钮）</li><li>BackButton（返回按钮）</li><li>IconButton（Icon 图标）</li><li>CloseButton（关闭按钮）</li><li>ButtonBar（可以排列放置按钮元素的）</li></ul><p>其中大部分的 Button 都是基于 RawMaterialButton 进行的修改定制而成的。</p><ul><li>构造函数</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> FlatButton(&#123;</span><br><span class="line">    Key key,</span><br><span class="line">    <span class="comment">// 点击事件</span></span><br><span class="line">    <span class="meta">@required</span> VoidCallback onPressed,</span><br><span class="line">    <span class="comment">// 高亮改变，按下和抬起时都会调用的方法</span></span><br><span class="line">    ValueChanged&lt;<span class="built_in">bool</span>&gt; onHighlightChanged,</span><br><span class="line">    <span class="comment">// 定义按钮的基色，以及按钮的最小尺寸，内部填充和形状的默认值</span></span><br><span class="line">    ButtonTextTheme textTheme,</span><br><span class="line">    <span class="comment">// 按钮文字的颜色</span></span><br><span class="line">    Color textColor,</span><br><span class="line">    <span class="comment">// 按钮禁用时的文字颜色</span></span><br><span class="line">    Color disabledTextColor,</span><br><span class="line">    <span class="comment">// 按钮背景颜色</span></span><br><span class="line">    Color color,</span><br><span class="line">    <span class="comment">// 按钮禁用时的背景颜色</span></span><br><span class="line">    Color disabledColor,</span><br><span class="line">    <span class="comment">// 按钮按下时的背景颜色</span></span><br><span class="line">    Color highlightColor,</span><br><span class="line">    <span class="comment">// 点击时，水波动画中水波的颜色，不要水波纹效果设置透明颜色即可</span></span><br><span class="line">    Color splashColor,</span><br><span class="line">    <span class="comment">// 按钮主题，默认是浅色主题，分为深色和浅色</span></span><br><span class="line">    Brightness colorBrightness,</span><br><span class="line">    <span class="comment">// 按钮的填充间距</span></span><br><span class="line">    EdgeInsetsGeometry padding,</span><br><span class="line">    <span class="comment">// 外形</span></span><br><span class="line">    ShapeBorder shape,</span><br><span class="line">    Clip clipBehavior = Clip.none,</span><br><span class="line">    MaterialTapTargetSize materialTapTargetSize,</span><br><span class="line">    <span class="comment">// 按钮的内容，里面可以放子元素</span></span><br><span class="line">    <span class="meta">@required</span> Widget child,</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><ul><li>后退、关闭</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ButtonBar(</span><br><span class="line">  children: &lt;Widget&gt;[</span><br><span class="line">    BackButton(</span><br><span class="line">      color: Colors.orange,</span><br><span class="line">    ),</span><br><span class="line">    CloseButton(),</span><br><span class="line">  ],</span><br><span class="line">),</span><br></pre></td></tr></table></figure><ul><li>扁平按钮 FlatButton</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">ButtonBar(</span><br><span class="line">  children: &lt;Widget&gt;[</span><br><span class="line">    FlatButton(</span><br><span class="line">      child: Text(<span class="string">'扁平按钮'</span>),</span><br><span class="line">      onPressed: () &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">'我是扁平按钮'</span>);</span><br><span class="line">      &#125;,</span><br><span class="line">    ),</span><br><span class="line">    FlatButton(</span><br><span class="line">      child: Text(</span><br><span class="line">        <span class="string">'扁平按钮 禁用'</span>,</span><br><span class="line">      ),</span><br><span class="line">      onPressed: <span class="keyword">null</span>,</span><br><span class="line">    ),</span><br><span class="line">  ],</span><br><span class="line">),</span><br></pre></td></tr></table></figure><ul><li>扁平带图标按钮 FlatButton.icon</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">ButtonBar(</span><br><span class="line">  children: &lt;Widget&gt;[</span><br><span class="line">    FlatButton.icon(</span><br><span class="line">      label: Text(<span class="string">'带图标扁平按钮'</span>),</span><br><span class="line">      icon: Icon(Icons.add_call, size: <span class="number">18.0</span>),</span><br><span class="line">      onPressed: () &#123;&#125;,</span><br><span class="line">    ),</span><br><span class="line">    FlatButton.icon(</span><br><span class="line">      icon: <span class="keyword">const</span> Icon(Icons.add_call, size: <span class="number">18.0</span>),</span><br><span class="line">      label: <span class="keyword">const</span> Text(<span class="string">'带图标扁平按钮 禁用'</span>),</span><br><span class="line">      onPressed: <span class="keyword">null</span>,</span><br><span class="line">    ),</span><br><span class="line">  ],</span><br><span class="line">),</span><br></pre></td></tr></table></figure><ul><li>带框按钮 OutlineButton</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">ButtonBar(</span><br><span class="line">  children: &lt;Widget&gt;[</span><br><span class="line">    OutlineButton(</span><br><span class="line">      onPressed: () &#123;&#125;,</span><br><span class="line">      child: Text(<span class="string">'带框按钮'</span>),</span><br><span class="line">    ),</span><br><span class="line">    OutlineButton(</span><br><span class="line">      onPressed: <span class="keyword">null</span>,</span><br><span class="line">      child: Text(<span class="string">'带框按钮 禁用'</span>),</span><br><span class="line">    ),</span><br><span class="line">  ],</span><br><span class="line">),</span><br></pre></td></tr></table></figure><ul><li>带框图标按钮 OutlineButton.icon</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">ButtonBar(</span><br><span class="line">  children: &lt;Widget&gt;[</span><br><span class="line">    OutlineButton.icon(</span><br><span class="line">      label: Text(<span class="string">'带框图标按钮'</span>),</span><br><span class="line">      icon: Icon(Icons.add_to_photos, size: <span class="number">18.0</span>),</span><br><span class="line">      onPressed: () &#123;&#125;,</span><br><span class="line">    ),</span><br><span class="line">    OutlineButton.icon(</span><br><span class="line">      disabledTextColor: Colors.orange,</span><br><span class="line">      icon: Icon(Icons.add_to_photos, size: <span class="number">18.0</span>),</span><br><span class="line">      label: Text(<span class="string">'带框图标按钮 禁用'</span>),</span><br><span class="line">      onPressed: <span class="keyword">null</span>,</span><br><span class="line">    ),</span><br><span class="line">  ],</span><br><span class="line">),</span><br></pre></td></tr></table></figure><ul><li>立体按钮 RaisedButton</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">ButtonBar(</span><br><span class="line">  children: &lt;Widget&gt;[</span><br><span class="line">    RaisedButton(</span><br><span class="line">      child: Text(<span class="string">'立体按钮'</span>),</span><br><span class="line">      onPressed: () &#123;&#125;,</span><br><span class="line">    ),</span><br><span class="line">    RaisedButton(</span><br><span class="line">      child: Text(<span class="string">'立体按钮 禁用'</span>),</span><br><span class="line">      onPressed: <span class="keyword">null</span>,</span><br><span class="line">    ),</span><br><span class="line">  ],</span><br><span class="line">),</span><br></pre></td></tr></table></figure><ul><li>立体按钮带图标 RaisedButton.icon</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">ButtonBar(</span><br><span class="line">  children: &lt;Widget&gt;[</span><br><span class="line">    RaisedButton.icon(</span><br><span class="line">      icon: Icon(Icons.add, size: <span class="number">18.0</span>),</span><br><span class="line">      label: Text(<span class="string">'立体按钮带图标'</span>),</span><br><span class="line">      onPressed: () &#123;&#125;,</span><br><span class="line">    ),</span><br><span class="line">    RaisedButton.icon(</span><br><span class="line">      icon: Icon(Icons.add, size: <span class="number">18.0</span>),</span><br><span class="line">      label: Text(<span class="string">'立体按钮带图标 禁用'</span>),</span><br><span class="line">      onPressed: <span class="keyword">null</span>,</span><br><span class="line">    ),</span><br><span class="line">  ],</span><br><span class="line">),</span><br></pre></td></tr></table></figure><ul><li>Material 按钮 MaterialButton</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">ButtonBar(</span><br><span class="line">  children: &lt;Widget&gt;[</span><br><span class="line">    MaterialButton(</span><br><span class="line">      child: Text(<span class="string">'Material按钮'</span>),</span><br><span class="line">      onPressed: () &#123;</span><br><span class="line">        <span class="comment">// Perform some action</span></span><br><span class="line">      &#125;,</span><br><span class="line">    ),</span><br><span class="line">    MaterialButton(</span><br><span class="line">      child: Text(<span class="string">'Material按钮 禁用'</span>),</span><br><span class="line">      onPressed: <span class="keyword">null</span>,</span><br><span class="line">    ),</span><br><span class="line">  ],</span><br><span class="line">),</span><br></pre></td></tr></table></figure><ul><li>RawMaterial 按钮 RawMaterialButton</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">ButtonBar(</span><br><span class="line">  children: &lt;Widget&gt;[</span><br><span class="line">    RawMaterialButton(</span><br><span class="line">      child: Text(<span class="string">'RawMaterial按钮'</span>),</span><br><span class="line">      onPressed: () &#123;</span><br><span class="line">        <span class="comment">// Perform some action</span></span><br><span class="line">      &#125;,</span><br><span class="line">    ),</span><br><span class="line">    RawMaterialButton(</span><br><span class="line">      child: Text(<span class="string">'RawMaterial按钮 禁用'</span>),</span><br><span class="line">      onPressed: <span class="keyword">null</span>,</span><br><span class="line">    ),</span><br><span class="line">  ],</span><br><span class="line">),</span><br></pre></td></tr></table></figure><ul><li>浮动按钮 FloatingActionButton</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">ButtonBar(</span><br><span class="line">  children: &lt;Widget&gt;[</span><br><span class="line">    FloatingActionButton(</span><br><span class="line">      child: <span class="keyword">const</span> Icon(Icons.add),</span><br><span class="line">      heroTag: <span class="string">'浮动按钮'</span>,</span><br><span class="line">      onPressed: () &#123;</span><br><span class="line">        <span class="comment">// Perform some action</span></span><br><span class="line">      &#125;,</span><br><span class="line">      tooltip: <span class="string">'浮动按钮提示1'</span>,</span><br><span class="line">    ),</span><br><span class="line">    FloatingActionButton(</span><br><span class="line">      child: <span class="keyword">const</span> Icon(Icons.add),</span><br><span class="line">      onPressed: <span class="keyword">null</span>,</span><br><span class="line">      heroTag: <span class="string">'浮动按钮 禁用'</span>,</span><br><span class="line">      tooltip: <span class="string">'浮动按钮提示2'</span>,</span><br><span class="line">    ),</span><br><span class="line">  ],</span><br><span class="line">),</span><br></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><a href="https://github.com/ducafecat/flutter-learn/blob/master/button_widget" target="_blank" rel="noopener">https://github.com/ducafecat/flutter-learn/blob/master/button_widget</a></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://api.flutter.dev/flutter/material/FlatButton-class.html" target="_blank" rel="noopener">FlatButton class</a></li><li><a href="https://api.flutter.dev/flutter/material/RaisedButton-class.html" target="_blank" rel="noopener">RaisedButton class</a></li><li><a href="https://api.flutter.dev/flutter/material/OutlineButton-class.html" target="_blank" rel="noopener">OutlineButton class</a></li><li><a href="https://api.flutter.dev/flutter/material/MaterialButton-class.html" target="_blank" rel="noopener">MaterialButton class</a></li><li><a href="https://api.flutter.dev/flutter/material/RawMaterialButton-class.html" target="_blank" rel="noopener">RawMaterialButton class</a></li><li><a href="https://api.flutter.dev/flutter/material/FloatingActionButton-class.html" target="_blank" rel="noopener">FloatingActionButton class</a></li><li><a href="https://api.flutter.dev/flutter/material/BackButton-class.html" target="_blank" rel="noopener">BackButton class</a></li><li><a href="https://api.flutter.dev/flutter/material/IconButton-class.html" target="_blank" rel="noopener">IconButton class</a></li><li><a href="https://api.flutter.dev/flutter/material/CloseButton-class.html" target="_blank" rel="noopener">CloseButton class</a></li><li><a href="https://api.flutter.dev/flutter/material/ButtonBar-class.html" target="_blank" rel="noopener">ButtonBar class</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                   
      
    
    </summary>
    
      <category term="Flutter零基础入门中文教学" scheme="https://ducafecat.tech/categories/Flutter%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%E4%B8%AD%E6%96%87%E6%95%99%E5%AD%A6/"/>
    
    
      <category term="flutter" scheme="https://ducafecat.tech/tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>Flutter 零基础入门中文教学 - 11 基础组件 Text RichText TextSpan</title>
    <link href="https://ducafecat.tech/2019/10/06/flutter/flutter-11-widget-text/"/>
    <id>https://ducafecat.tech/2019/10/06/flutter/flutter-11-widget-text/</id>
    <published>2019-10-05T16:00:00.000Z</published>
    <updated>2019-10-07T08:50:02.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-10-07-15-12-06.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h2><ul><li>Text 构造参数</li><li>TextStyle 样式构造参数</li><li>Text.rich、RichText、TextSpan 处理复杂字符显示</li></ul><h2 id="Text"><a href="#Text" class="headerlink" title="Text"></a>Text</h2><p>Text Widget，从名字也可以看出，在 Flutter 里是用来负责显示文本信息的一个组件，功能类似于 Android 的 TextView、HTML 的一些文本标签等等，属于基础组件。</p><ul><li>基础用法</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Text(<span class="string">'hello word!'</span>);</span><br></pre></td></tr></table></figure><h3 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h3><ul><li>Text</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> Text(</span><br><span class="line">    <span class="comment">//要显示的文字内容</span></span><br><span class="line">    <span class="keyword">this</span>.data,</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="comment">//key类似于id</span></span><br><span class="line">    Key key,</span><br><span class="line">    <span class="comment">//文字显示样式和属性</span></span><br><span class="line">    <span class="keyword">this</span>.style,</span><br><span class="line">    <span class="keyword">this</span>.strutStyle,</span><br><span class="line">    <span class="comment">//文字对齐方式</span></span><br><span class="line">    <span class="keyword">this</span>.textAlign,</span><br><span class="line">    <span class="comment">//文字显示方向</span></span><br><span class="line">    <span class="keyword">this</span>.textDirection,</span><br><span class="line">    <span class="comment">//设置语言环境</span></span><br><span class="line">    <span class="keyword">this</span>.locale,</span><br><span class="line">    <span class="comment">//是否自动换行</span></span><br><span class="line">    <span class="keyword">this</span>.softWrap,</span><br><span class="line">    <span class="comment">//文字溢出后处理方式</span></span><br><span class="line">    <span class="keyword">this</span>.overflow,</span><br><span class="line">    <span class="comment">//字体缩放</span></span><br><span class="line">    <span class="keyword">this</span>.textScaleFactor,</span><br><span class="line">    <span class="comment">//最大显示行数</span></span><br><span class="line">    <span class="keyword">this</span>.maxLines,</span><br><span class="line">    <span class="comment">//图像的语义描述，用于向Andoid上的TalkBack和iOS上的VoiceOver提供图像描述</span></span><br><span class="line">    <span class="keyword">this</span>.semanticsLabel,</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><ul><li>TextStyle</li></ul><p>style 属性比较常用，传入的是 TextStyle 对象，我们细看下它可以配置哪些属性样式。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> TextStyle(&#123;</span><br><span class="line">    <span class="comment">//是否继承父类组件属性</span></span><br><span class="line">    <span class="keyword">this</span>.inherit = <span class="keyword">true</span>,</span><br><span class="line">    <span class="comment">//字体颜色</span></span><br><span class="line">    <span class="keyword">this</span>.color,</span><br><span class="line">    <span class="comment">//文字大小，默认14px</span></span><br><span class="line">    <span class="keyword">this</span>.fontSize,</span><br><span class="line">    <span class="comment">//字体粗细</span></span><br><span class="line">    <span class="keyword">this</span>.fontWeight,</span><br><span class="line">    <span class="comment">//字体样式,normal或italic</span></span><br><span class="line">    <span class="keyword">this</span>.fontStyle,</span><br><span class="line">    <span class="comment">//字母间距，默认为0，负数间距缩小，正数间距增大</span></span><br><span class="line">    <span class="keyword">this</span>.letterSpacing,</span><br><span class="line">    <span class="comment">//单词间距，默认为0，负数间距缩小，正数间距增大</span></span><br><span class="line">    <span class="keyword">this</span>.wordSpacing,</span><br><span class="line">    <span class="comment">//字体基线</span></span><br><span class="line">    <span class="keyword">this</span>.textBaseline,</span><br><span class="line">    <span class="comment">//行高</span></span><br><span class="line">    <span class="keyword">this</span>.height,</span><br><span class="line">    <span class="comment">//设置区域</span></span><br><span class="line">    <span class="keyword">this</span>.locale,</span><br><span class="line">    <span class="comment">//前景色</span></span><br><span class="line">    <span class="keyword">this</span>.foreground,</span><br><span class="line">    <span class="comment">//背景色</span></span><br><span class="line">    <span class="keyword">this</span>.background,</span><br><span class="line">    <span class="comment">//阴影</span></span><br><span class="line">    <span class="keyword">this</span>.shadows,</span><br><span class="line">    <span class="comment">//文字划线，下换线等等装饰</span></span><br><span class="line">    <span class="keyword">this</span>.decoration,</span><br><span class="line">    <span class="comment">//划线颜色</span></span><br><span class="line">    <span class="keyword">this</span>.decorationColor,</span><br><span class="line">    <span class="comment">//划线样式，虚线、实线等样式</span></span><br><span class="line">    <span class="keyword">this</span>.decorationStyle,</span><br><span class="line">    <span class="comment">//描述信息</span></span><br><span class="line">    <span class="keyword">this</span>.debugLabel,</span><br><span class="line">    <span class="comment">//字体</span></span><br><span class="line">    <span class="built_in">String</span> fontFamily,</span><br><span class="line">    <span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; fontFamilyFallback,</span><br><span class="line">    <span class="built_in">String</span> package,</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><ul><li>颜色、大小、样式</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Text(<span class="string">'字体24下划线'</span>,</span><br><span class="line">     style: TextStyle(</span><br><span class="line">       color: Colors.blue, <span class="comment">// 蓝色</span></span><br><span class="line">       fontSize: <span class="number">24</span>,<span class="comment">// 24 号字体</span></span><br><span class="line">       decoration: TextDecoration.underline, <span class="comment">// 下划线</span></span><br><span class="line">     )),</span><br></pre></td></tr></table></figure><ul><li>缩放、加粗</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Text(<span class="string">'放大加粗'</span>,</span><br><span class="line">     textScaleFactor: <span class="number">1.2</span>, <span class="comment">// 放大 1.2</span></span><br><span class="line">     style: TextStyle(</span><br><span class="line">       fontWeight: FontWeight.bold,<span class="comment">// 加粗 bold</span></span><br><span class="line">       fontSize: <span class="number">24</span>,<span class="comment">// 24 号字体</span></span><br><span class="line">       color: Colors.green,<span class="comment">// 绿色</span></span><br><span class="line">       decoration: TextDecoration.none, <span class="comment">// 不要下滑线</span></span><br><span class="line">     )),</span><br></pre></td></tr></table></figure><ul><li>文字溢出</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Text(</span><br><span class="line">  <span class="string">'缩放，Each line here is progressively more opaque. The base color is material.Colors.black, and Color.withOpacity is used to create a derivative color with the desired opacity. The root TextSpan for this RichText widget is explicitly given the ambient DefaultTextStyle, since RichText does not do that automatically. The inner TextStyle objects are implicitly mixed with the parent TextSpans TextSpan.style.'</span>,</span><br><span class="line">  textScaleFactor: <span class="number">1.0</span>,</span><br><span class="line">  textAlign: TextAlign.center,</span><br><span class="line">  softWrap: <span class="keyword">true</span>,</span><br><span class="line">  maxLines: <span class="number">3</span>, <span class="comment">// 3 行</span></span><br><span class="line">  overflow: TextOverflow.ellipsis, <span class="comment">// 剪切 加省略号</span></span><br><span class="line">  style: TextStyle(</span><br><span class="line">    fontWeight: FontWeight.bold,</span><br><span class="line">    fontSize: <span class="number">18</span>,</span><br><span class="line">  )),</span><br></pre></td></tr></table></figure><h2 id="Text-rich、RichText-、TextSpan"><a href="#Text-rich、RichText-、TextSpan" class="headerlink" title="Text.rich、RichText 、TextSpan"></a>Text.rich、RichText 、TextSpan</h2><h3 id="构造函数-1"><a href="#构造函数-1" class="headerlink" title="构造函数"></a>构造函数</h3><p>可以在 Text 里加入一些 Span 标签，对某部分文字进行个性化改变样式，如加入 @ 符号，加入超链接、变色、加表情等等。Text.rich(…) 等价于 RichText(…)，用哪个都可以。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> Text.rich(</span><br><span class="line">    <span class="comment">// 样式片段标签TextSpan</span></span><br><span class="line">    <span class="keyword">this</span>.textSpan,</span><br><span class="line">  &#123;</span><br><span class="line">    Key key,</span><br><span class="line">    <span class="keyword">this</span>.style,</span><br><span class="line">    <span class="keyword">this</span>.strutStyle,</span><br><span class="line">    <span class="keyword">this</span>.textAlign,</span><br><span class="line">    <span class="keyword">this</span>.textDirection,</span><br><span class="line">    <span class="keyword">this</span>.locale,</span><br><span class="line">    <span class="keyword">this</span>.softWrap,</span><br><span class="line">    <span class="keyword">this</span>.overflow,</span><br><span class="line">    <span class="keyword">this</span>.textScaleFactor,</span><br><span class="line">    <span class="keyword">this</span>.maxLines,</span><br><span class="line">    <span class="keyword">this</span>.semanticsLabel,</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> RichText(&#123;</span><br><span class="line">    Key key,</span><br><span class="line">    <span class="comment">// 样式片段标签TextSpan</span></span><br><span class="line">    <span class="meta">@required</span> <span class="keyword">this</span>.text,</span><br><span class="line">    <span class="keyword">this</span>.textAlign = TextAlign.start,</span><br><span class="line">    <span class="keyword">this</span>.textDirection,</span><br><span class="line">    <span class="keyword">this</span>.softWrap = <span class="keyword">true</span>,</span><br><span class="line">    <span class="keyword">this</span>.overflow = TextOverflow.clip,</span><br><span class="line">    <span class="keyword">this</span>.textScaleFactor = <span class="number">1.0</span>,</span><br><span class="line">    <span class="keyword">this</span>.maxLines,</span><br><span class="line">    <span class="keyword">this</span>.locale,</span><br><span class="line">    <span class="keyword">this</span>.strutStyle,</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><p>textSpan 类型是 TextSpan ，其它参数同上</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> TextSpan(&#123;</span><br><span class="line">    <span class="comment">//样式片段</span></span><br><span class="line">    <span class="keyword">this</span>.style,</span><br><span class="line">    <span class="comment">//要显示的文字</span></span><br><span class="line">    <span class="keyword">this</span>.text,</span><br><span class="line">    <span class="comment">//样式片段TextSpan数组，可以包含多个TextSpan</span></span><br><span class="line">    <span class="keyword">this</span>.children,</span><br><span class="line">    <span class="comment">//用于手势进行识别处理,如点击跳转</span></span><br><span class="line">    <span class="keyword">this</span>.recognizer,</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><h3 id="示例-1"><a href="#示例-1" class="headerlink" title="示例"></a>示例</h3><ul><li>拼接字符</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">Text.rich(TextSpan(</span><br><span class="line">  text: <span class="string">'TextSpan'</span>,</span><br><span class="line">  style: TextStyle(</span><br><span class="line">    color: Colors.red,</span><br><span class="line">    fontSize: <span class="number">24.0</span>,</span><br><span class="line">  ),</span><br><span class="line">  children: &lt;TextSpan&gt;[</span><br><span class="line">    <span class="keyword">new</span> TextSpan(</span><br><span class="line">      text: <span class="string">'aaaaa'</span>,</span><br><span class="line">      style: <span class="keyword">new</span> TextStyle(</span><br><span class="line">        color: Colors.blueGrey,</span><br><span class="line">      ),</span><br><span class="line">    ),</span><br><span class="line">    <span class="keyword">new</span> TextSpan(</span><br><span class="line">      text: <span class="string">'bbbbbb'</span>,</span><br><span class="line">      style: <span class="keyword">new</span> TextStyle(</span><br><span class="line">        color: Colors.cyan,</span><br><span class="line">      ),</span><br><span class="line">    ),</span><br><span class="line">  ],</span><br><span class="line">)),</span><br></pre></td></tr></table></figure><ul><li>添加交互</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Text.rich(TextSpan(</span><br><span class="line">  children: &lt;TextSpan&gt;[</span><br><span class="line">    <span class="keyword">new</span> TextSpan(</span><br><span class="line">      text: <span class="string">'Tap点击'</span>,</span><br><span class="line">      style: <span class="keyword">new</span> TextStyle(</span><br><span class="line">        color: Colors.blueGrey,</span><br><span class="line">      ),</span><br><span class="line">      recognizer: <span class="keyword">new</span> TapGestureRecognizer()</span><br><span class="line">      ..onTap = () &#123;</span><br><span class="line">        <span class="comment">//增加一个点击事件</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">'被点击了'</span>);</span><br><span class="line">      &#125;,</span><br><span class="line">    ),</span><br><span class="line">  ],</span><br><span class="line">)),</span><br></pre></td></tr></table></figure><blockquote><p>recognizer 用来识别事件</p><p>TapGestureRecognizer tap 点击手势</p></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><a href="https://github.com/ducafecat/flutter-learn/tree/master/text_widget" target="_blank" rel="noopener">https://github.com/ducafecat/flutter-learn/tree/master/text_widget</a></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://api.flutter.dev/flutter/widgets/Text-class.html" target="_blank" rel="noopener">Text class</a></li><li><a href="https://api.flutter.dev/flutter/painting/TextSpan-class.html" target="_blank" rel="noopener">TextSpan class</a></li><li><a href="https://api.flutter.dev/flutter/widgets/RichText-class.html" target="_blank" rel="noopener">RichText class</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                   
      
    
    </summary>
    
      <category term="Flutter零基础入门中文教学" scheme="https://ducafecat.tech/categories/Flutter%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%E4%B8%AD%E6%96%87%E6%95%99%E5%AD%A6/"/>
    
    
      <category term="flutter" scheme="https://ducafecat.tech/tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>Flutter 见闻 - 01 Flutter 1.9 正式发布 实现三端编译发布 android ios web</title>
    <link href="https://ducafecat.tech/2019/09/16/flutter-daily/flutter-daily-01-update-sdk19/"/>
    <id>https://ducafecat.tech/2019/09/16/flutter-daily/flutter-daily-01-update-sdk19/</id>
    <published>2019-09-15T16:00:00.000Z</published>
    <updated>2019-09-16T08:08:35.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h2><ul><li>在 web 平台运行 Flutter</li><li>macOS Catalina 和 iOS 13 支持</li><li>全新的 Material widget</li><li>全球语言支持</li><li>Dart 2.5 发布</li><li>工具链优化</li></ul><h2 id="在-web-平台运行-Flutter"><a href="#在-web-平台运行-Flutter" class="headerlink" title="在 web 平台运行 Flutter"></a>在 web 平台运行 Flutter</h2><ul><li>更新 SDK</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; flutter channel master</span><br><span class="line">&gt; flutter upgrade</span><br></pre></td></tr></table></figure><ul><li>启用 web 支持</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; flutter config --<span class="built_in">enable</span>-web</span><br><span class="line"></span><br><span class="line">&gt; flutter devices</span><br></pre></td></tr></table></figure><ul><li>更新现有项目</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; flutter create .</span><br></pre></td></tr></table></figure><ul><li>创建新项目</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; flutter create myapp</span><br></pre></td></tr></table></figure><ul><li>运行 web</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; flutter run -d chrome</span><br></pre></td></tr></table></figure><ul><li>编译 web</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; flutter build web</span><br></pre></td></tr></table></figure><h2 id="Flutter-Widget-Livebook"><a href="#Flutter-Widget-Livebook" class="headerlink" title="Flutter Widget Livebook"></a>Flutter Widget Livebook</h2><p>一个在网页上展示 widget 运行效果的网站，它使用 Flutter 开发，并直接运行在网页上。</p><p><a href="https://flutter-widget-livebook.blankapp.org/basics/introduction/" target="_blank" rel="noopener">https://flutter-widget-livebook.blankapp.org/basics/introduction/</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-09-16-15-06-02.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="Panache"><a href="#Panache" class="headerlink" title="Panache"></a>Panache</h2><p>则是一款为 Flutter 创建主题的工具，您可以下载创建好的主题，然后将其直接添加到代码中。</p><p><a href="https://rxlabz.github.io/panache_web/#/" target="_blank" rel="noopener">https://rxlabz.github.io/panache_web/#/</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-09-16-15-07-30.png" alt title>                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-09-16-15-08-15.png" alt title>                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-09-16-15-09-15.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="macOS-Catalina-和-iOS-13-支持"><a href="#macOS-Catalina-和-iOS-13-支持" class="headerlink" title="macOS Catalina 和 iOS 13 支持"></a>macOS Catalina 和 iOS 13 支持</h2><ul><li>iOS 13 的拖拽式工具栏</li></ul><p><a href="https://github.com/flutter/flutter/pull/35829" target="_blank" rel="noopener">https://github.com/flutter/flutter/pull/35829</a></p><ul><li>触感反馈</li></ul><p><a href="https://github.com/flutter/flutter/pull/37724" target="_blank" rel="noopener">https://github.com/flutter/flutter/pull/37724</a></p><ul><li>开发者已经提交了 pull request</li></ul><p><a href="https://github.com/flutter/flutter/issues/35541" target="_blank" rel="noopener">https://github.com/flutter/flutter/issues/35541</a></p><ul><li>启用 Bitcode 实验性支持</li></ul><p><a href="https://github.com/flutter/flutter/wiki/Creating-an-iOS-Bitcode-enabled-app-(experimental)" target="_blank" rel="noopener">https://github.com/flutter/flutter/wiki/Creating-an-iOS-Bitcode-enabled-app-(experimental)</a></p><h2 id="全新的-Material-widget"><a href="#全新的-Material-widget" class="headerlink" title="全新的 Material widget"></a>全新的 Material widget</h2><ul><li>ToggleButtons 示例</li></ul><p>它能为您的应用按钮实现更加多元化的设计——不论是单选还是多选，选择至少一个或是零个，尖角还是圆角、粗边或细边，图标或文本——ToggleButtons widget 全都可以满足。</p><p><a href="https://github.com/csells/flutter_toggle_buttons" target="_blank" rel="noopener">https://github.com/csells/flutter_toggle_buttons</a></p><ul><li>ColorFiltered 示例</li></ul><p>允许您更改子 widget 树的颜色，用来灵活的调整配色服务。</p><p><a href="https://github.com/csells/flutter_color_filter" target="_blank" rel="noopener">https://github.com/csells/flutter_color_filter</a></p><h2 id="全球语言支持"><a href="#全球语言支持" class="headerlink" title="全球语言支持"></a>全球语言支持</h2><p>还新增了南非语 (Afrikaans)、祖鲁语 (Zulu) 等 24 种语言的支持。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-09-16-14-48-40.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="Dart-2-5-发布"><a href="#Dart-2-5-发布" class="headerlink" title="Dart 2.5 发布"></a>Dart 2.5 发布</h2><ul><li>ML 代码补全</li></ul><p><a href="https://github.com/dart-lang/sdk/wiki/Previewing-Dart-code-completions-powered-by-machine-learning" target="_blank" rel="noopener">https://github.com/dart-lang/sdk/wiki/Previewing-Dart-code-completions-powered-by-machine-learning</a></p><ul><li><p>用于 Dart-C 互操作的 ffi 外部函数接口</p></li><li><p>改进常量表达式</p></li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="built_in">Object</span> i = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">const</span> list = [i <span class="keyword">as</span> <span class="built_in">int</span>];</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">set</span> = &#123;<span class="keyword">if</span> (list <span class="keyword">is</span> <span class="built_in">List</span>&lt;<span class="built_in">int</span>&gt;) ...list&#125;;</span><br><span class="line"><span class="keyword">const</span> map = &#123;<span class="keyword">if</span> (i <span class="keyword">is</span> <span class="built_in">int</span>) i: <span class="string">"int"</span>&#125;;</span><br></pre></td></tr></table></figure><h2 id="工具链优化"><a href="#工具链优化" class="headerlink" title="工具链优化"></a>工具链优化</h2><ul><li><p>从 Flutter 1.9 开始，iOS 新项目默认使用 Swift 语言，而非 Objective-C；Android 新项目则默认使用 Kotlin，而非 Java。</p></li><li><p>Swift 编译瘦身</p></li><li><p>改善错误信息提示</p></li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-09-16-15-04-00.png" alt title>                </div>                <div class="image-caption"></div>            </figure><p><a href="https://mp.weixin.qq.com/s?__biz=MzAwODY4OTk2Mg==&amp;mid=2652050546&amp;idx=1&amp;sn=2c81e067ac34da40f89558f426e97af6&amp;chksm=808cb437b7fb3d2127431c7858beb3a03a29186c1c6a78aa0a2e97cd895e756b7ee3367ec935&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">https://mp.weixin.qq.com/s?__biz=MzAwODY4OTk2Mg==&amp;mid=2652050546&amp;idx=1&amp;sn=2c81e067ac34da40f89558f426e97af6&amp;chksm=808cb437b7fb3d2127431c7858beb3a03a29186c1c6a78aa0a2e97cd895e756b7ee3367ec935&amp;scene=21#wechat_redirect</a></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://flutter.dev/docs/get-started/web" target="_blank" rel="noopener">Building a web application with Flutter</a></li><li><a href="https://github.com/flutter/flutter_web" target="_blank" rel="noopener">flutter_web</a></li><li><a href="https://mp.weixin.qq.com/s/uajbjbVYmcBHtq3Jv8tgzg" target="_blank" rel="noopener">Flutter 1.9 正式发布！| 全平台创新开发体验</a></li><li><a href="https://v.qq.com/x/page/t09240vp8cy.html" target="_blank" rel="noopener">腾讯视频链接</a></li><li><a href="https://flutter-widget-livebook.blankapp.org/basics/introduction/" target="_blank" rel="noopener">Flutter Widget Livebook</a></li><li><a href="https://mp.weixin.qq.com/s?__biz=MzAwODY4OTk2Mg==&amp;mid=2652050546&amp;idx=1&amp;sn=2c81e067ac34da40f89558f426e97af6&amp;chksm=808cb437b7fb3d2127431c7858beb3a03a29186c1c6a78aa0a2e97cd895e756b7ee3367ec935&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">更精准更简洁: Flutter 改进错误信息提示</a></li><li><a href="https://rxlabz.github.io/panache_web/#/" target="_blank" rel="noopener">Panache</a></li><li><a href="https://github.com/flutter/flutter/pull/35829" target="_blank" rel="noopener">iOS 13 的拖拽式工具栏</a></li><li><a href="https://github.com/flutter/flutter/pull/37724" target="_blank" rel="noopener">触感反馈</a></li><li><a href="https://github.com/flutter/flutter/issues/35541" target="_blank" rel="noopener">开发者已经提交了 pull request</a></li><li><a href="https://github.com/flutter/flutter/wiki/Creating-an-iOS-Bitcode-enabled-app-(experimental" target="_blank" rel="noopener">启用 Bitcode 实验性支持</a>&gt;)</li><li><a href="https://github.com/csells/flutter_toggle_buttons" target="_blank" rel="noopener">ToggleButtons</a></li><li><a href="https://github.com/csells/flutter_color_filter" target="_blank" rel="noopener">ColorFiltered</a></li><li><a href="https://github.com/dart-lang/sdk/wiki/Previewing-Dart-code-completions-powered-by-machine-learning" target="_blank" rel="noopener">ML 代码补全</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;在 web 平台运行 Flutter&lt;/li&gt;
&lt;li&gt;macOS Catalina 和 iOS 13 支持&lt;/
      
    
    </summary>
    
      <category term="Flutter见闻" scheme="https://ducafecat.tech/categories/Flutter%E8%A7%81%E9%97%BB/"/>
    
    
      <category term="flutter" scheme="https://ducafecat.tech/tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>Flutter 零基础入门中文教学 - 10 stateless stateful 有状态、无状态组件</title>
    <link href="https://ducafecat.tech/2019/08/18/flutter/flutter-10-stateless-stateful-widget/"/>
    <id>https://ducafecat.tech/2019/08/18/flutter/flutter-10-stateless-stateful-widget/</id>
    <published>2019-08-17T16:00:00.000Z</published>
    <updated>2019-09-01T03:34:04.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h2><ul><li>stateless、stateless 差别</li><li>动手封装两个 widget 来体验</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-09-01-11-25-01.png" alt="点击切换" title>                </div>                <div class="image-caption">点击切换</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-09-01-11-25-15.png" alt="点击切换" title>                </div>                <div class="image-caption">点击切换</div>            </figure><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><p>Awesome Flutter Snippets</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-09-01-11-27-15.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="第一步：编写-statefull-主程序"><a href="#第一步：编写-statefull-主程序" class="headerlink" title="第一步：编写 statefull 主程序"></a>第一步：编写 statefull 主程序</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"></span><br><span class="line">main(<span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; args) &#123;</span><br><span class="line">  runApp(MyApp());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span> </span>&#123;</span><br><span class="line">  MyApp(&#123;Key key&#125;) : <span class="keyword">super</span>(key: key);</span><br><span class="line"></span><br><span class="line">  _MyAppState createState() =&gt; _MyAppState();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_MyAppState</span> <span class="keyword">extends</span> <span class="title">State</span>&lt;<span class="title">MyApp</span>&gt; </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line">      home: Scaffold(</span><br><span class="line">        body: Text(<span class="string">'data'</span>),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第二步：编写-stateless-图片显示"><a href="#第二步：编写-stateless-图片显示" class="headerlink" title="第二步：编写 stateless 图片显示"></a>第二步：编写 stateless 图片显示</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyPicView</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span> </span>&#123;</span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String</span> picName;</span><br><span class="line">  MyPicView(&#123;Key key, <span class="keyword">this</span>.picName&#125;) : <span class="keyword">super</span>(key: key);</span><br><span class="line"></span><br><span class="line">  _MyPicViewState createState() =&gt; _MyPicViewState();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_MyPicViewState</span> <span class="keyword">extends</span> <span class="title">State</span>&lt;<span class="title">MyPicView</span>&gt; </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> Container(</span><br><span class="line">      child: Image.asset(<span class="string">'assets/<span class="subst">$&#123;widget.picName&#125;</span>'</span>),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第三步：编写切换图片路径状态"><a href="#第三步：编写切换图片路径状态" class="headerlink" title="第三步：编写切换图片路径状态"></a>第三步：编写切换图片路径状态</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'my_pic_view.dart'</span>;</span><br><span class="line"></span><br><span class="line">main(<span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; args) &#123;</span><br><span class="line">  runApp(MyApp());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span> </span>&#123;</span><br><span class="line">  MyApp(&#123;Key key&#125;) : <span class="keyword">super</span>(key: key);</span><br><span class="line"></span><br><span class="line">  _MyAppState createState() =&gt; _MyAppState();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_MyAppState</span> <span class="keyword">extends</span> <span class="title">State</span>&lt;<span class="title">MyApp</span>&gt; </span>&#123;</span><br><span class="line">  <span class="built_in">String</span> fileName = <span class="string">'p1.jpg'</span>;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line">      home: Scaffold(</span><br><span class="line">          body: Column(</span><br><span class="line">        children: &lt;Widget&gt;[</span><br><span class="line">          MyPicView(</span><br><span class="line">            picName: fileName,</span><br><span class="line">          ),</span><br><span class="line">          RaisedButton(</span><br><span class="line">            onPressed: () &#123;</span><br><span class="line">              <span class="built_in">String</span> tmpFileName = <span class="string">'p1.jpg'</span>;</span><br><span class="line">              <span class="keyword">if</span> (fileName == <span class="string">'p1.jpg'</span>) &#123;</span><br><span class="line">                tmpFileName = <span class="string">'p2.jpg'</span>;</span><br><span class="line">              &#125;</span><br><span class="line">              setState(() &#123;</span><br><span class="line">                fileName = tmpFileName;</span><br><span class="line">              &#125;);</span><br><span class="line">            &#125;,</span><br><span class="line">            child: Text(<span class="string">'切换图片'</span>),</span><br><span class="line">          )</span><br><span class="line">        ],</span><br><span class="line">      )),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><a href="https://github.com/ducafecat/flutter-learn/tree/master/state_less_ful_app" target="_blank" rel="noopener">https://github.com/ducafecat/flutter-learn/tree/master/state_less_ful_app</a></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://marketplace.visualstudio.com/items?itemName=Nash.awesome-flutter-snippets" target="_blank" rel="noopener">插件 Awesome Flutter Snippets</a></li><li><a href="https://medium.com/@paridhi.softinator/flutter-stateless-and-stateful-widget-4f1ef1fb7177" target="_blank" rel="noopener">Flutter Stateless and Stateful Widget</a></li><li><a href="https://medium.com/flutter-community/flutter-stateful-vs-stateless-db325309deae" target="_blank" rel="noopener">Flutter: Stateful vs Stateless Widget</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;stateless、stateless 差别&lt;/li&gt;
&lt;li&gt;动手封装两个 widget 来体验&lt;/li&gt;
&lt;
      
    
    </summary>
    
      <category term="Flutter零基础入门中文教学" scheme="https://ducafecat.tech/categories/Flutter%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%E4%B8%AD%E6%96%87%E6%95%99%E5%AD%A6/"/>
    
    
      <category term="flutter" scheme="https://ducafecat.tech/tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>Flutter 零基础入门中文教学 - 09 一切都是 widget</title>
    <link href="https://ducafecat.tech/2019/08/17/flutter/flutter-09-widgets/"/>
    <id>https://ducafecat.tech/2019/08/17/flutter/flutter-09-widgets/</id>
    <published>2019-08-16T16:00:00.000Z</published>
    <updated>2019-10-09T23:59:20.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h2><ul><li>整体架构设计</li><li>层次分类</li></ul><h2 id="整体架构设计"><a href="#整体架构设计" class="headerlink" title="整体架构设计"></a>整体架构设计</h2><h3 id="架构图"><a href="#架构图" class="headerlink" title="架构图"></a>架构图</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-08-26-15-13-31.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="源码目录"><a href="#源码目录" class="headerlink" title="源码目录"></a>源码目录</h3><p>…/sdk/flutter/packages/flutter/lib</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-08-26-15-30-25.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="目录功能"><a href="#目录功能" class="headerlink" title="目录功能"></a>目录功能</h3><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>Foundation</td><td>基础部分</td></tr><tr><td>Animation</td><td>动画</td></tr><tr><td>Painting</td><td>边框绘制、颜色、裁剪图像处理、画笔、插值器等跟绘制、图像、装饰相关的类</td></tr><tr><td>Gestures</td><td>事件类、长按、触摸、放大等等</td></tr><tr><td>Rendering</td><td>渲染 Widget 的基础库</td></tr><tr><td>Widget</td><td>依赖 Rendering 层进行构建，Widget 是 Flutter 的核心</td></tr><tr><td>Material</td><td>Android 平台的风格</td></tr><tr><td>Cupertino</td><td>iOS 平台风格的扁平化</td></tr></tbody></table><h2 id="widget-分类"><a href="#widget-分类" class="headerlink" title="widget 分类"></a>widget 分类</h2><h3 id="主要分为-StatelessWidget-和-StatefulWidget"><a href="#主要分为-StatelessWidget-和-StatefulWidget" class="headerlink" title="主要分为 StatelessWidget 和 StatefulWidget"></a>主要分为 StatelessWidget 和 StatefulWidget</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="Ft06Pki12EkIUT-IrLZeUXPKeUZt.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="官方分类"><a href="#官方分类" class="headerlink" title="官方分类"></a>官方分类</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20190826154543964.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li><p>基础组件 Widget（Basics）：</p><p>Container、Row、Column、Image、Text、Icon、RaisedButton、Scaffold、Appbar、FlutterLogo、Placeholder</p></li><li><p>Material Components：</p></li><li><p>App 结构和导航类</p><p>Scaffold、Appbar、BottomNavigationBar、TabBar、TabBarView、MaterialApp、WidgetsApp、Drawer、SliverAppBar</p></li><li><p>按钮类</p><p>RaisedButton、FloatingActionButton、FlatButton、IconButton、DropdownButton、PopupMenuButton、ButtonBar</p></li><li><p>输入和选择类</p><p>TextField、Checkbox、Raido、Switch、Slider、Date&amp;Time Pickers</p></li><li><p>对话框和控制面板类</p><p>SimpleDialog、AlertDialog、BottomSheet、ExpansionPanel、SnackBar）；</p><p>信息显示类（Image、Icon、Chip、Tooltip、DataTable、Card、LinearProgressIndicator、CircularProgressIndicator、GridView</p></li><li><p>布局类</p><p>ListTile、Stepper、Divider</p></li><li><p>Cupertino （iOS-style widgets）：</p><p>CupertinoActionSheet、CupertinoActivityIndicator、CupertinoAlertDialog、CupertinoButton、CupertinoDatePicker、CupertinoDialog、CupertinoDialogAction、CupertinoFullscreenDialogTransition、CupertinoPageScaffold、CupertinoPageTransition、CupertinoPicker、CupertinoPopupSurface、CupertinoSegmentedControl、CupertinoSlider、CupertinoSwitch、CupertinoNavigationBar、CupertinoTabBar、CupertinoTabScaffold、CupertinoTabView、CupertinoTextField、CupertinoTimerPicker</p></li><li><p>Layout：</p></li><li><p>单个子元素的布局 Widget</p><p>Container、Padding、Center、Align、FittedBox、AspectRatio、ConstrainedBox、Baseline、FractionallySizedBox、IntrinsicHeight、IntrinsicWidth、LimitedBox、Offstage、OverflowBox、SizedBox、SizedOverflowBox、Transform、CustomSingleChildLayout</p></li><li><p>多个子元素的布局 Widget</p><p>Row、Column、Stack、IndexedStack、GridView、Flow、Table、Wrap、ListBody、CustomMultiChildLayout、LayoutBuilder、ListView、Expanded</p></li><li><p>Text 文本显示类：</p><p>Text、RichText、DefaultTextStyle</p></li><li><p>Assets、图片、Icons 类：</p><p>Image、Icon、RawImage、AssetBundle</p></li><li><p>Input 输入类：</p><p>Form、FormField、RawKeyboardListener</p></li><li><p>动画和 Motion 类：</p><p>AnimatedContainer、AnimatedCrossFade、Hero、AnimatedBuilder、DecoratedBoxTransition、FadeTransition、PositionedTransition、RotationTransition、ScaleTransition、SizeTransition、SlideTransition、AnimatedDefaultTextStyle、AnimatedListState、AnimatedModalBarrier、AnimatedOpacity、AnimatedPhysicalModel、AnimatedPositioned、AnimatedSize、AnimatedWidget、AnimatedWidgetBaseState</p></li><li><p>交互模型类：</p></li><li><p>触摸交互</p><p>Draggable、LongPressDraggable、GestureDetector、DragTarget、Dismissible、IgnorePointer、AbsorbPointer、Scrollable</p></li><li><p>路由导航</p><p>Hero、Navigator</p></li><li><p>样式类：</p><p>Padding、Theme、MediaQuery</p></li><li><p>绘制和效果类：</p><p>Transform、Opacity、DecoratedBox、FractionalTranslation、RotatedBox、ClipOval、ClipPath、ClipRect、CustomPaint、BackdropFilter</p></li><li><p>Async 异步模型类：</p><p>FutureBuilder、StreamBuilder</p></li><li><p>滚动类：</p><p>GridView、ListView、NestedScrollView、SingleChildScrollView、Scrollable、Scrollbar、CustomScrollView、NotificationListener、ScrollConfiguration、RefreshIndicator、PageView</p></li><li><p>辅助功能类：</p><p>Semantics、MergeSemantics、ExcludeSemantics</p></li></ul><h3 id="widget-地图"><a href="#widget-地图" class="headerlink" title="widget 地图"></a>widget 地图</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="FlOkMR8qN2K07EG0J69eMEw-IroG.png" alt="img" title>                </div>                <div class="image-caption">img</div>            </figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://flutter.dev/docs/development/ui/widgets" target="_blank" rel="noopener">Widget catalog</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;整体架构设计&lt;/li&gt;
&lt;li&gt;层次分类&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;整体架构设计&quot;&gt;&lt;a href=
      
    
    </summary>
    
      <category term="Flutter零基础入门中文教学" scheme="https://ducafecat.tech/categories/Flutter%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%E4%B8%AD%E6%96%87%E6%95%99%E5%AD%A6/"/>
    
    
      <category term="flutter" scheme="https://ducafecat.tech/tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>Flutter 零基础入门中文教学 - 08 开发规范</title>
    <link href="https://ducafecat.tech/2019/08/16/flutter/flutter-08-standard/"/>
    <id>https://ducafecat.tech/2019/08/16/flutter/flutter-08-standard/</id>
    <published>2019-08-15T16:00:00.000Z</published>
    <updated>2019-08-26T07:11:13.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h2><ul><li>Dart 规范</li><li>Flutter 阿里规范</li></ul><h2 id="VSCode-格式化"><a href="#VSCode-格式化" class="headerlink" title="VSCode 格式化"></a>VSCode 格式化</h2><ul><li>右键菜单</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-08-26-15-10-18.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>当 Save 时自动格式化</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-08-26-15-08-42.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="规范精要"><a href="#规范精要" class="headerlink" title="规范精要"></a>规范精要</h2><h3 id="使用小写加下划线来命名库和源文件"><a href="#使用小写加下划线来命名库和源文件" class="headerlink" title="使用小写加下划线来命名库和源文件"></a>使用小写加下划线来命名库和源文件</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span> peg_parser.source_scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">'file_system.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'slider_menu.dart'</span>;</span><br></pre></td></tr></table></figure><h3 id="优先使用小驼峰法作为常量命名"><a href="#优先使用小驼峰法作为常量命名" class="headerlink" title="优先使用小驼峰法作为常量命名"></a>优先使用小驼峰法作为常量命名</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> pi = <span class="number">3.14</span>;</span><br><span class="line"><span class="keyword">const</span> defaultTimeout = <span class="number">1000</span>;</span><br><span class="line"><span class="keyword">final</span> urlScheme = <span class="built_in">RegExp</span>(<span class="string">'^([a-z]+):'</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dice</span> </span>&#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">final</span> numberGenerator = Random();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="所有流控制结构，请使用大括号"><a href="#所有流控制结构，请使用大括号" class="headerlink" title="所有流控制结构，请使用大括号"></a>所有流控制结构，请使用大括号</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (isWeekDay) &#123;</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">'Bike to work!'</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">'Go dancing or read a book!'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Doc-注释"><a href="#Doc-注释" class="headerlink" title="Doc 注释"></a>Doc 注释</h3><p>使用///文档注释来记录成员和类型。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// <span class="markdown">The number of characters in this chunk when unsplit.</span></span></span><br><span class="line"><span class="built_in">int</span> <span class="keyword">get</span> length =&gt; ...</span><br></pre></td></tr></table></figure><h3 id="导入-lib-下文件库，统一指定包名，避免过多的"><a href="#导入-lib-下文件库，统一指定包名，避免过多的" class="headerlink" title="导入 lib 下文件库，统一指定包名，避免过多的"></a>导入 lib 下文件库，统一指定包名，避免过多的<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">```dart</span><br><span class="line">package:flutter_go/</span><br></pre></td></tr></table></figure></h3><h3 id="使用相邻字符串连接字符串文字"><a href="#使用相邻字符串连接字符串文字" class="headerlink" title="使用相邻字符串连接字符串文字"></a>使用相邻字符串连接字符串文字</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">raiseAlarm(</span><br><span class="line">    <span class="string">'ERROR: Parts of the spaceship are on fire. Other '</span></span><br><span class="line">    <span class="string">'parts are overrun by martians. Unclear which are which.'</span>);</span><br></pre></td></tr></table></figure><h3 id="优先使用模板字符串"><a href="#优先使用模板字符串" class="headerlink" title="优先使用模板字符串"></a>优先使用模板字符串</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'Hello, <span class="subst">$name</span>! You are <span class="subst">$&#123;year - birth&#125;</span> years old.'</span>;</span><br></pre></td></tr></table></figure><h3 id="在不需要的时候，避免使用花括号"><a href="#在不需要的时候，避免使用花括号" class="headerlink" title="在不需要的时候，避免使用花括号"></a>在不需要的时候，避免使用花括号</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'Hi, <span class="subst">$name</span>!'</span></span><br><span class="line"><span class="string">"Wear your wildest <span class="subst">$decade</span>'s outfit."</span></span><br></pre></td></tr></table></figure><h3 id="不要使用-length-查看集合是否为空"><a href="#不要使用-length-查看集合是否为空" class="headerlink" title="不要使用.length 查看集合是否为空"></a>不要使用.length 查看集合是否为空</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (lunchBox.isEmpty) <span class="keyword">return</span> <span class="string">'so hungry...'</span>;</span><br><span class="line"><span class="keyword">if</span> (words.isNotEmpty) <span class="keyword">return</span> words.join(<span class="string">' '</span>);</span><br></pre></td></tr></table></figure><h3 id="遍历一个序列"><a href="#遍历一个序列" class="headerlink" title="遍历一个序列"></a>遍历一个序列</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> person <span class="keyword">in</span> people) &#123;</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="不要显式地将变量初始化为空"><a href="#不要显式地将变量初始化为空" class="headerlink" title="不要显式地将变量初始化为空"></a>不要显式地将变量初始化为空</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> _nextId;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LazyId</span> </span>&#123;</span><br><span class="line">  <span class="built_in">int</span> _id;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">int</span> <span class="keyword">get</span> id &#123;</span><br><span class="line">    <span class="keyword">if</span> (_nextId == <span class="keyword">null</span>) _nextId = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (_id == <span class="keyword">null</span>) _id = _nextId++;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> _id;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="在不需要的时候不要用-this"><a href="#在不需要的时候不要用-this" class="headerlink" title="在不需要的时候不要用 this"></a>在不需要的时候不要用 this</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Box</span> </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> value;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">void</span> clear() &#123;</span><br><span class="line">    update(<span class="keyword">null</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">void</span> update(value) &#123;</span><br><span class="line">    <span class="keyword">this</span>.value = value;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="尽可能使用初始化的形式"><a href="#尽可能使用初始化的形式" class="headerlink" title="尽可能使用初始化的形式"></a>尽可能使用初始化的形式</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Point</span> </span>&#123;</span><br><span class="line">  <span class="built_in">num</span> x, y;</span><br><span class="line">  Point(<span class="keyword">this</span>.x, <span class="keyword">this</span>.y);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="不要使用-new"><a href="#不要使用-new" class="headerlink" title="不要使用 new"></a>不要使用 new</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Widget build(BuildContext context) &#123;</span><br><span class="line">  <span class="keyword">return</span> Row(</span><br><span class="line">    children: [</span><br><span class="line">      RaisedButton(</span><br><span class="line">        child: Text(<span class="string">'Increment'</span>),</span><br><span class="line">      ),</span><br><span class="line">      Text(<span class="string">'Click!'</span>),</span><br><span class="line">    ],</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="优先使用-async-await-代替原始的-futures"><a href="#优先使用-async-await-代替原始的-futures" class="headerlink" title="优先使用 async/await 代替原始的 futures"></a>优先使用 async/await 代替原始的 futures</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Future&lt;<span class="built_in">int</span>&gt; countActivePlayers(<span class="built_in">String</span> teamName) <span class="keyword">async</span> &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> team = <span class="keyword">await</span> downloadTeam(teamName);</span><br><span class="line">    <span class="keyword">if</span> (team == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> players = <span class="keyword">await</span> team.roster;</span><br><span class="line">    <span class="keyword">return</span> players.where((player) =&gt; player.isActive).length;</span><br><span class="line">  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">    log.error(e);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="当异步没有任何用处时，不要使用它"><a href="#当异步没有任何用处时，不要使用它" class="headerlink" title="当异步没有任何用处时，不要使用它"></a>当异步没有任何用处时，不要使用它</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Future afterTwoThings(Future first, Future second) &#123;</span><br><span class="line">  <span class="keyword">return</span> Future.wait([first, second]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="http://dart.goodev.org/guides/language/effective-dart" target="_blank" rel="noopener">Dart 官方规范</a></li><li><a href="https://github.com/alibaba/flutter-go/blob/develop/Flutter_Go%20%E4%BB%A3%E7%A0%81%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83.md" target="_blank" rel="noopener">阿里 Flutter Go 代码开发规范 0.1.0 版</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Dart 规范&lt;/li&gt;
&lt;li&gt;Flutter 阿里规范&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;VSCode-
      
    
    </summary>
    
      <category term="Flutter零基础入门中文教学" scheme="https://ducafecat.tech/categories/Flutter%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%E4%B8%AD%E6%96%87%E6%95%99%E5%AD%A6/"/>
    
    
      <category term="flutter" scheme="https://ducafecat.tech/tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>Flutter 零基础入门中文教学 - 07 我们的第一个程序 hello word</title>
    <link href="https://ducafecat.tech/2019/08/12/flutter/flutter-07-first-app-helloword/"/>
    <id>https://ducafecat.tech/2019/08/12/flutter/flutter-07-first-app-helloword/</id>
    <published>2019-08-11T16:00:00.000Z</published>
    <updated>2019-09-01T02:58:26.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h2><ul><li>程序基础结构</li><li>pubspec.yaml 配置</li><li>布局，样式使用</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-09-01-10-58-22.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="目录文件结构"><a href="#目录文件结构" class="headerlink" title="目录文件结构"></a>目录文件结构</h2><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>lib</td><td>Flutter 代码</td></tr><tr><td>android</td><td>Android 项目</td></tr><tr><td>ios</td><td>IOS 项目</td></tr><tr><td>test</td><td>测试目录</td></tr><tr><td>.idea</td><td>IDEA 编辑器配置</td></tr><tr><td>pubspec.yaml</td><td>Flutter 配置文件</td></tr><tr><td>pubspec.lock</td><td>包版本锁定</td></tr><tr><td>build</td><td>编译目录</td></tr></tbody></table><h2 id="一、编写最基础-helloword"><a href="#一、编写最基础-helloword" class="headerlink" title="一、编写最基础 helloword"></a>一、编写最基础 helloword</h2><ul><li>步骤</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 第一步 runApp(...)</span><br><span class="line">2. 第二步 MaterialApp(...)</span><br><span class="line">3. 第三步 指定 widget Text(...)</span><br></pre></td></tr></table></figure><ul><li>代码</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"></span><br><span class="line">main(<span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; args) &#123;</span><br><span class="line">  <span class="comment">// 第一步 runApp(...)</span></span><br><span class="line">  runApp(</span><br><span class="line">      <span class="comment">// 第二步 MaterialApp</span></span><br><span class="line">      MaterialApp(</span><br><span class="line">    <span class="comment">// 第三步 指定 widget</span></span><br><span class="line">    home: Text(<span class="string">'hello word!'</span>),</span><br><span class="line">  ));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="二、采用界面脚手架-标题-侧栏-正文"><a href="#二、采用界面脚手架-标题-侧栏-正文" class="headerlink" title="二、采用界面脚手架 标题 侧栏 正文"></a>二、采用界面脚手架 标题 侧栏 正文</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">main(<span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; args) &#123;</span><br><span class="line">  <span class="comment">// 第一步 runApp(...)</span></span><br><span class="line">  runApp(</span><br><span class="line">      <span class="comment">// 第二步 MaterialApp</span></span><br><span class="line">      MaterialApp(</span><br><span class="line">    <span class="comment">// 第三步 指定 widget</span></span><br><span class="line">    home:</span><br><span class="line">        <span class="comment">// 第四步 页面脚手架</span></span><br><span class="line">        Scaffold(</span><br><span class="line">      <span class="comment">// 第五步 程序标题</span></span><br><span class="line">      appBar: AppBar(</span><br><span class="line">        title: Text(<span class="string">'我们第一个程序'</span>),</span><br><span class="line">      ),</span><br><span class="line">      <span class="comment">// 第六步 侧栏</span></span><br><span class="line">      drawer: Drawer(</span><br><span class="line">        child: Text(<span class="string">'侧栏'</span>),</span><br><span class="line">      ),</span><br><span class="line">      <span class="comment">// 正文</span></span><br><span class="line">      body: Text(<span class="string">'hello word!'</span>),</span><br><span class="line">    ),</span><br><span class="line">  ));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="三、布局-样式-图片"><a href="#三、布局-样式-图片" class="headerlink" title="三、布局 样式 图片"></a>三、布局 样式 图片</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">main(<span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; args) &#123;</span><br><span class="line">  <span class="comment">// 第一步 runApp(...)</span></span><br><span class="line">  runApp(</span><br><span class="line">      <span class="comment">// 第二步 MaterialApp</span></span><br><span class="line">      MaterialApp(</span><br><span class="line">    <span class="comment">// 第三步 指定 widget</span></span><br><span class="line">    home:</span><br><span class="line">        <span class="comment">// 第四步 页面脚手架</span></span><br><span class="line">        Scaffold(</span><br><span class="line">      <span class="comment">// 第五步 程序标题</span></span><br><span class="line">      appBar: AppBar(</span><br><span class="line">        title: Text(<span class="string">'我们第一个程序'</span>),</span><br><span class="line">      ),</span><br><span class="line">      <span class="comment">// 第六步 侧栏</span></span><br><span class="line">      drawer: Drawer(</span><br><span class="line">        child: Text(<span class="string">'侧栏'</span>),</span><br><span class="line">      ),</span><br><span class="line">      <span class="comment">// 正文</span></span><br><span class="line">      body:</span><br><span class="line">          <span class="comment">// 居中</span></span><br><span class="line">          Center(</span><br><span class="line">        child: Column(</span><br><span class="line">          children: &lt;Widget&gt;[</span><br><span class="line">            <span class="comment">// 载入图片</span></span><br><span class="line">            Image.asset(<span class="string">'assets/p1.jpg'</span>),</span><br><span class="line">            <span class="comment">// 文字</span></span><br><span class="line">            Text(</span><br><span class="line">              <span class="string">'雷神'</span>,</span><br><span class="line">              <span class="comment">// 样式</span></span><br><span class="line">              style: TextStyle(fontSize: <span class="number">28</span>, color: Colors.red),</span><br><span class="line">            ),</span><br><span class="line">          ],</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    ),</span><br><span class="line">  ));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><a href="https://github.com/ducafecat/flutter-learn/tree/master/helloword" target="_blank" rel="noopener">https://github.com/ducafecat/flutter-learn/tree/master/helloword</a></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://flutter.dev/docs/get-started/codelab" target="_blank" rel="noopener">Write your first Flutter app, part 1</a></li><li><a href="https://flutter.dev/docs/development/ui/widgets" target="_blank" rel="noopener">widgets</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;程序基础结构&lt;/li&gt;
&lt;li&gt;pubspec.yaml 配置&lt;/li&gt;
&lt;li&gt;布局，样式使用&lt;/li&gt;
&lt;/
      
    
    </summary>
    
      <category term="Flutter零基础入门中文教学" scheme="https://ducafecat.tech/categories/Flutter%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%E4%B8%AD%E6%96%87%E6%95%99%E5%AD%A6/"/>
    
    
      <category term="flutter" scheme="https://ducafecat.tech/tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>Flutter 零基础入门中文教学 - 06 Windows10 下配置 Flutter 开发环境</title>
    <link href="https://ducafecat.tech/2019/08/11/flutter/flutter-06-setup-windows10/"/>
    <id>https://ducafecat.tech/2019/08/11/flutter/flutter-06-setup-windows10/</id>
    <published>2019-08-10T16:00:00.000Z</published>
    <updated>2019-08-26T02:07:12.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h2><ul><li>安装 JDK 1.8</li><li>安装 Flutter SDK</li><li>安装 Android Studio</li><li>安装 VSCode</li><li>配置 VSCode 插件</li><li>配置 Android 插件</li><li>配置 Android 模拟器</li></ul><h2 id="环境介绍"><a href="#环境介绍" class="headerlink" title="环境介绍"></a>环境介绍</h2><ul><li>window10 专业版</li><li>jdk1.8</li><li>flutter 1.7.8</li><li>vscode 1.37.1</li><li>android studio 3.5</li></ul><h2 id="1-安装-JDK-1-8"><a href="#1-安装-JDK-1-8" class="headerlink" title="1. 安装 JDK 1.8"></a>1. 安装 JDK 1.8</h2><ul><li>下载地址</li></ul><p><a href="https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="noopener">https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html</a></p><ul><li>选取 windows x64</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-08-26-09-31-32.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="2-安装-Flutter-SDK"><a href="#2-安装-Flutter-SDK" class="headerlink" title="2. 安装 Flutter SDK"></a>2. 安装 Flutter SDK</h2><ul><li>下载地址</li></ul><p><a href="https://flutter.dev/docs/development/tools/sdk/releases?tab=windows#windows" target="_blank" rel="noopener">https://flutter.dev/docs/development/tools/sdk/releases?tab=windows#windows</a></p><ul><li>解压</li></ul><p>我放在了 c:\sdk\flutter</p><ul><li>配置环境变量</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Path</span></span><br><span class="line">C:\sdk\flutter\bin</span><br><span class="line"></span><br><span class="line"><span class="comment"># FLUTTER_STORAGE_BASE_URL</span></span><br><span class="line">https://storage.flutter-io.cn</span><br><span class="line"></span><br><span class="line"><span class="comment"># PUB_HOSTED_URL</span></span><br><span class="line">https://pub.flutter-io.cn</span><br></pre></td></tr></table></figure><ul><li>执行检查</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Flutter doctor</span><br></pre></td></tr></table></figure><h2 id="3-安装-Android-Studio"><a href="#3-安装-Android-Studio" class="headerlink" title="3. 安装 Android Studio"></a>3. 安装 Android Studio</h2><ul><li>下载</li></ul><p><a href="https://developer.android.com/studio/" target="_blank" rel="noopener">https://developer.android.com/studio/</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-08-26-10-03-40.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>配置 SDK 包</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-08-26-09-50-23.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>配置 SDK Tools</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-08-26-09-51-19.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>配置环境变量</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Path</span></span><br><span class="line">C:\Users\ducaf\AppData\Local\Android\Sdk\tools</span><br><span class="line">C:\Users\ducaf\AppData\Local\Android\Sdk\platform-tools</span><br><span class="line"></span><br><span class="line"><span class="comment"># ANDROID_HOME</span></span><br><span class="line">C:\Users\ducaf\AppData\Local\Android\Sdk</span><br></pre></td></tr></table></figure><ul><li>安装 Android 证书</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">flutter doctor --android-licenses</span><br><span class="line"></span><br><span class="line">一路按 Y</span><br></pre></td></tr></table></figure><h2 id="4-安装-VSCode"><a href="#4-安装-VSCode" class="headerlink" title="4. 安装 VSCode"></a>4. 安装 VSCode</h2><ul><li>下载地址</li></ul><p><a href="https://code.visualstudio.com/" target="_blank" rel="noopener">https://code.visualstudio.com/</a></p><h2 id="5-配置-VSCode-插件"><a href="#5-配置-VSCode-插件" class="headerlink" title="5. 配置 VSCode 插件"></a>5. 配置 VSCode 插件</h2><ul><li>Flutter 必装</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-08-26-09-55-56.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>Awesome Flutter Snippets</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-08-26-09-56-41.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>Paste JSON as Code</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-08-26-09-57-36.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>bloc</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-08-26-09-58-58.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="6-配置-Android-插件"><a href="#6-配置-Android-插件" class="headerlink" title="6. 配置 Android 插件"></a>6. 配置 Android 插件</h2><ul><li>flutter</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-08-26-10-00-53.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="7-配置-Android-模拟器"><a href="#7-配置-Android-模拟器" class="headerlink" title="7. 配置 Android 模拟器"></a>7. 配置 Android 模拟器</h2><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;安装 JDK 1.8&lt;/li&gt;
&lt;li&gt;安装 Flutter SDK&lt;/li&gt;
&lt;li&gt;安装 Android S
      
    
    </summary>
    
      <category term="Flutter零基础入门中文教学" scheme="https://ducafecat.tech/categories/Flutter%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%E4%B8%AD%E6%96%87%E6%95%99%E5%AD%A6/"/>
    
    
      <category term="flutter" scheme="https://ducafecat.tech/tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>Flutter 零基础入门中文教学 - 05 配置 IDE Macos</title>
    <link href="https://ducafecat.tech/2019/06/21/flutter/flutter-05-setup-ide-macos/"/>
    <id>https://ducafecat.tech/2019/06/21/flutter/flutter-05-setup-ide-macos/</id>
    <published>2019-06-20T16:00:00.000Z</published>
    <updated>2019-08-01T18:39:22.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h2><ul><li>配置 VSCode</li><li>配置 Intellij IDEA</li><li>配置 Android Studio</li><li>Dart DevTools 调试视图</li><li>Hot Reload 热更新</li></ul><h2 id="配置-VSCode"><a href="#配置-VSCode" class="headerlink" title="配置 VSCode"></a>配置 VSCode</h2><h3 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h3><p><a href="https://code.visualstudio.com/" target="_blank" rel="noopener">https://code.visualstudio.com/</a></p><h3 id="安装插件-Dart"><a href="#安装插件-Dart" class="headerlink" title="安装插件 Dart"></a>安装插件 Dart</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-07-03-10-09-39.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="安装插件-Flutter"><a href="#安装插件-Flutter" class="headerlink" title="安装插件 Flutter"></a>安装插件 Flutter</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-07-03-10-10-08.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="安装插件-Awesome-Flutter-Snippets"><a href="#安装插件-Awesome-Flutter-Snippets" class="headerlink" title="安装插件 Awesome Flutter Snippets"></a>安装插件 Awesome Flutter Snippets</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-07-03-10-10-28.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><ul><li>flutter: new project</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-07-03-10-11-55.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>创建完成</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-07-03-10-13-20.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>创建模拟器</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-08-02-09-56-23.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>被提示需要 android 配置</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-08-02-09-49-46.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>Install Sources for Android 27</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-08-02-09-57-30.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>安装模拟器镜像 android-27</li></ul><p>Google Play Intel x86 Atom System Image (system-images;android-27;google_apis_playstore;x86)</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-08-02-09-59-24.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>x86 模拟器加速器</li></ul><p>Intel x86 Emulator Accelerator (HAXM installer)</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-08-02-10-49-23.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>android 模拟器</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-08-02-10-08-04.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>ios 模拟器</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-07-03-10-16-48.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>F5 运行</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-07-03-10-18-37.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>打开 Dart DevTools</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-07-03-10-19-57.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="配置-Intellij-IDEA"><a href="#配置-Intellij-IDEA" class="headerlink" title="配置 Intellij IDEA"></a>配置 Intellij IDEA</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p><a href="http://www.jetbrains.com/" target="_blank" rel="noopener">http://www.jetbrains.com/</a></p><h3 id="安装插件-Flutter-1"><a href="#安装插件-Flutter-1" class="headerlink" title="安装插件 Flutter"></a>安装插件 Flutter</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-07-03-10-29-15.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="new-project"><a href="#new-project" class="headerlink" title="new project"></a>new project</h3><ul><li>选择 flutter</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-07-03-10-34-28.png" alt title>                </div>                <div class="image-caption"></div>            </figure><blockquote><p>注意 选择 sdk 位置</p></blockquote><ul><li>选项</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-07-03-10-36-44.png" alt title>                </div>                <div class="image-caption"></div>            </figure><blockquote><p>点击 more 更多<br>设置 module name 为英文</p></blockquote><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-07-03-10-51-28.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="调试器"><a href="#调试器" class="headerlink" title="调试器"></a>调试器</h3><ul><li>inspector</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-07-03-11-00-17.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>outline</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-07-03-11-02-01.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="配置-Android-Studio"><a href="#配置-Android-Studio" class="headerlink" title="配置 Android Studio"></a>配置 Android Studio</h2><h3 id="安装插件-Flutter-2"><a href="#安装插件-Flutter-2" class="headerlink" title="安装插件 Flutter"></a>安装插件 Flutter</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-07-03-11-11-02.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="创建项目-1"><a href="#创建项目-1" class="headerlink" title="创建项目"></a>创建项目</h3><ul><li>主面板</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-07-03-11-10-33.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>导航</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-07-03-11-11-57.png" alt title>                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-07-03-11-13-42.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="运行-1"><a href="#运行-1" class="headerlink" title="运行"></a>运行</h3><p>同 IDEA 效果</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-07-03-11-29-16.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="hot-reload"><a href="#hot-reload" class="headerlink" title="hot reload"></a>hot reload</h2><p>热更新已支持</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://flutter.dev/docs/get-started/install/macos" target="_blank" rel="noopener">Flutter SDK MacOS install</a></li><li><a href="https://flutter.dev/docs/get-started/editor" target="_blank" rel="noopener">Set up an editor</a></li><li><a href="https://flutter.dev/docs/development/tools/hot-reload" target="_blank" rel="noopener">Hot reload</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;配置 VSCode&lt;/li&gt;
&lt;li&gt;配置 Intellij IDEA&lt;/li&gt;
&lt;li&gt;配置 Android 
      
    
    </summary>
    
      <category term="Flutter零基础入门中文教学" scheme="https://ducafecat.tech/categories/Flutter%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%E4%B8%AD%E6%96%87%E6%95%99%E5%AD%A6/"/>
    
    
      <category term="flutter" scheme="https://ducafecat.tech/tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>Flutter 零基础入门中文教学 - 04 配置 Android 开发环境 MacOS</title>
    <link href="https://ducafecat.tech/2019/06/20/flutter/flutter-04-setup-android-macos/"/>
    <id>https://ducafecat.tech/2019/06/20/flutter/flutter-04-setup-android-macos/</id>
    <published>2019-06-19T16:00:00.000Z</published>
    <updated>2019-08-01T18:39:22.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h2><ul><li>安装 Android Studio</li><li>配置 Flutter 连接 Android Studio</li><li>配置 Android 模拟器</li><li>在 Android 模拟器中运行 Flutter App</li></ul><h2 id="1-安装-Android-Studio"><a href="#1-安装-Android-Studio" class="headerlink" title="1. 安装 Android Studio"></a>1. 安装 Android Studio</h2><p><a href="https://developer.android.google.cn/studio" target="_blank" rel="noopener">https://developer.android.google.cn/studio</a></p><h3 id="1-2-“unable-to-access-android-sdk-add-on-list”-点击取消"><a href="#1-2-“unable-to-access-android-sdk-add-on-list”-点击取消" class="headerlink" title="1.2 “unable to access android sdk add-on list” 点击取消"></a>1.2 “unable to access android sdk add-on list” 点击取消</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20190522104947380.png" alt="unable to access android sdk add-on list" title>                </div>                <div class="image-caption">unable to access android sdk add-on list</div>            </figure><h3 id="1-3-自定义安装，全选项目"><a href="#1-3-自定义安装，全选项目" class="headerlink" title="1.3 自定义安装，全选项目"></a>1.3 自定义安装，全选项目</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20190522105204530.png" alt="all" title>                </div>                <div class="image-caption">all</div>            </figure><h3 id="1-4-配置模拟器"><a href="#1-4-配置模拟器" class="headerlink" title="1.4 配置模拟器"></a>1.4 配置模拟器</h3><ul><li>进去 AVD Manage</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20190522110737156.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>不要选最新的模拟器镜像</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-07-02-14-13-42.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>配置模拟器参数</li></ul><p>大家机器好点的，就多给点内存和空间吧，这样模拟器运行的快些</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20190522112214757.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>运行模拟器</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20190522112401274.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="2-配置环境变量"><a href="#2-配置环境变量" class="headerlink" title="2. 配置环境变量"></a>2. 配置环境变量</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; vi ~/.bash_profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># android</span></span><br><span class="line"><span class="built_in">export</span> ANDROID_HOME=~/Library/Android/sdk</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$&#123;PATH&#125;</span>:<span class="variable">$&#123;ANDROID_HOME&#125;</span>/platform-tools</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$&#123;PATH&#125;</span>:<span class="variable">$&#123;ANDROID_HOME&#125;</span>/tools</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure><h2 id="3-运行-Flutter"><a href="#3-运行-Flutter" class="headerlink" title="3. 运行 Flutter"></a>3. 运行 Flutter</h2><h3 id="3-1-创建项目"><a href="#3-1-创建项目" class="headerlink" title="3.1 创建项目"></a>3.1 创建项目</h3><ul><li>crate &amp; run</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&gt; flutter create my_app</span><br><span class="line">&gt; <span class="built_in">cd</span> my_app</span><br><span class="line">&gt; flutter run</span><br><span class="line"></span><br><span class="line">Using hardware rendering with device Android SDK built <span class="keyword">for</span> x86. If you get graphics artifacts, consider enabling software rendering</span><br><span class="line">with <span class="string">"--enable-software-rendering"</span>.</span><br><span class="line">Launching lib/main.dart on Android SDK built <span class="keyword">for</span> x86 <span class="keyword">in</span> debug mode...</span><br><span class="line">Initializing gradle...                                              1.4s</span><br><span class="line">Resolving dependencies...                                           2.2s</span><br><span class="line">Running Gradle task <span class="string">'assembleDebug'</span>...</span><br><span class="line">Running Gradle task <span class="string">'assembleDebug'</span>... Done                         2.2s</span><br><span class="line">Built build/app/outputs/apk/debug/app-debug.apk.</span><br><span class="line">Installing build/app/outputs/apk/app.apk...                         2.2s</span><br><span class="line">D/EGL_emulation( 5614): eglMakeCurrent: 0xe2c05300: ver 3 0 (tinfo 0xe2c03350)</span><br><span class="line">Syncing files to device Android SDK built <span class="keyword">for</span> x86...</span><br><span class="line"> 2,067ms (!)</span><br><span class="line"></span><br><span class="line">🔥  To hot reload changes <span class="keyword">while</span> running, press <span class="string">"r"</span>. To hot restart (and rebuild state), press <span class="string">"R"</span>.</span><br><span class="line">An Observatory debugger and profiler on Android SDK built <span class="keyword">for</span> x86 is available at: http://127.0.0.1:64823/uqW8O20byg8=/</span><br><span class="line">For a more detailed <span class="built_in">help</span> message, press <span class="string">"h"</span>. To detach, press <span class="string">"d"</span>; to quit, press <span class="string">"q"</span>.</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-07-02-14-20-41.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://flutter.dev/docs/get-started/install/macos" target="_blank" rel="noopener">Flutter SDK MacOS install</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;安装 Android Studio&lt;/li&gt;
&lt;li&gt;配置 Flutter 连接 Android Studio&lt;
      
    
    </summary>
    
      <category term="Flutter零基础入门中文教学" scheme="https://ducafecat.tech/categories/Flutter%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%E4%B8%AD%E6%96%87%E6%95%99%E5%AD%A6/"/>
    
    
      <category term="flutter" scheme="https://ducafecat.tech/tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>Flutter 零基础入门中文教学 - 03 配置 IOS 开发环境 MacOS</title>
    <link href="https://ducafecat.tech/2019/06/19/flutter/flutter-03-setup-ios-macos/"/>
    <id>https://ducafecat.tech/2019/06/19/flutter/flutter-03-setup-ios-macos/</id>
    <published>2019-06-18T16:00:00.000Z</published>
    <updated>2019-08-01T18:39:22.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h2><ul><li>安装 xcode</li><li>配置 flutter 连接 xcode</li><li>在 IOS 模拟器中运行 flutter app</li></ul><h2 id="1-安装-XCode"><a href="#1-安装-XCode" class="headerlink" title="1. 安装 XCode"></a>1. 安装 XCode</h2><p>安装 Xcode 9.0 以上版本 (访问 <a href="https://developer.apple.com/xcode/" target="_blank" rel="noopener">Apple网站</a> 下载或者，<a href="https://itunes.apple.com/us/app/xcode/id497799835" target="_blank" rel="noopener">Mac App Store</a> 方式安装).</p><h2 id="2-第一次启动-XCode-安装所需组件"><a href="#2-第一次启动-XCode-安装所需组件" class="headerlink" title="2. 第一次启动 XCode 安装所需组件"></a>2. 第一次启动 XCode 安装所需组件</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20190628180642579.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="3-配置-Xcode-command-line-tools"><a href="#3-配置-Xcode-command-line-tools" class="headerlink" title="3. 配置 Xcode command-line tools"></a>3. 配置 Xcode command-line tools</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer</span><br><span class="line"></span><br><span class="line">检验 打印 license</span><br><span class="line">&gt; sudo xcodebuild -license</span><br></pre></td></tr></table></figure><h2 id="4-启动模拟器"><a href="#4-启动模拟器" class="headerlink" title="4. 启动模拟器"></a>4. 启动模拟器</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">open -a Simulator</span><br></pre></td></tr></table></figure><h2 id="5-创建-Flutter-项目"><a href="#5-创建-Flutter-项目" class="headerlink" title="5. 创建 Flutter 项目"></a>5. 创建 Flutter 项目</h2><h3 id="5-1-create-amp-run"><a href="#5-1-create-amp-run" class="headerlink" title="5.1 create &amp; run"></a>5.1 create &amp; run</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; flutter create my_app</span><br><span class="line">&gt; <span class="built_in">cd</span> my_app</span><br><span class="line">&gt; flutter run</span><br><span class="line"></span><br><span class="line">🔥  To hot reload changes <span class="keyword">while</span> running, press <span class="string">"r"</span>. To hot restart (and rebuild state), press <span class="string">"R"</span>.</span><br><span class="line">An Observatory debugger and profiler on iPhone Xʀ is available at: http://127.0.0.1:62341/ztmtijcoJrI=/</span><br><span class="line">For a more detailed <span class="built_in">help</span> message, press <span class="string">"h"</span>. To detach, press <span class="string">"d"</span>; to quit, press <span class="string">"q"</span>.</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20190701160914331.png" alt="模拟器运行" title>                </div>                <div class="image-caption">模拟器运行</div>            </figure><h3 id="5-2-vm-报告"><a href="#5-2-vm-报告" class="headerlink" title="5.2 vm 报告"></a>5.2 vm 报告</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1:62341/ztmtijcoJrI=/<span class="comment">#/vm</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20190701161106890.png" alt="vm" title>                </div>                <div class="image-caption">vm</div>            </figure><h2 id="6-部署到真机"><a href="#6-部署到真机" class="headerlink" title="6. 部署到真机"></a>6. 部署到真机</h2><h3 id="6-1-安装软件包"><a href="#6-1-安装软件包" class="headerlink" title="6.1 安装软件包"></a>6.1 安装软件包</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; brew update</span><br><span class="line"></span><br><span class="line">&gt; brew install --HEAD usbmuxd</span><br><span class="line">&gt; brew link usbmuxd</span><br><span class="line">&gt; brew install --HEAD libimobiledevice</span><br><span class="line">&gt; brew install ideviceinstaller ios-deploy cocoapods</span><br><span class="line">&gt; pod setup</span><br></pre></td></tr></table></figure><blockquote><p>安装 <a href="https://brew.sh/" target="_blank" rel="noopener">homebrew</a></p></blockquote><blockquote><p>pod setup 很慢的问题</p><ol><li>手动下载 git clone <a href="https://github.com/CocoaPods/Specs" target="_blank" rel="noopener">https://github.com/CocoaPods/Specs</a></li><li>复制 ~/.cocoapods/repos/Specs-master</li><li>执行 pod update</li><li>复制 master 下的 .git 到 Specs-master</li><li>停止 pod update</li><li>重命名 Specs-master 为 master</li><li>进入项目的 ios 目录下 pod install 成功</li></ol></blockquote><h3 id="6-2-配置AppStore开发者账号"><a href="#6-2-配置AppStore开发者账号" class="headerlink" title="6.2 配置AppStore开发者账号"></a>6.2 配置AppStore开发者账号</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">open ios/Runner.xcworkspace</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20190701161445927.png" alt="Add Account" title>                </div>                <div class="image-caption">Add Account</div>            </figure><blockquote><p>开发者登录 <a href="https://developer.apple.com/cn/programs/" target="_blank" rel="noopener">https://developer.apple.com/cn/programs/</a></p></blockquote><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://flutter.dev/docs/get-started/install/macos" target="_blank" rel="noopener">Flutter SDK MacOS install</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;安装 xcode&lt;/li&gt;
&lt;li&gt;配置 flutter 连接 xcode&lt;/li&gt;
&lt;li&gt;在 IOS 模拟器
      
    
    </summary>
    
      <category term="Flutter零基础入门中文教学" scheme="https://ducafecat.tech/categories/Flutter%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%E4%B8%AD%E6%96%87%E6%95%99%E5%AD%A6/"/>
    
    
      <category term="flutter" scheme="https://ducafecat.tech/tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>Flutter 零基础入门中文教学 - 02 安装 SDK MacOS</title>
    <link href="https://ducafecat.tech/2019/06/18/flutter/flutter-02-install-sdk-macos/"/>
    <id>https://ducafecat.tech/2019/06/18/flutter/flutter-02-install-sdk-macos/</id>
    <published>2019-06-17T16:00:00.000Z</published>
    <updated>2019-08-01T18:39:22.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h2><ul><li>采用 git 方式安装 SDK</li><li>编译代码 flutter tool</li><li>检查环境 flutter doctor</li></ul><h2 id="1-安装-SDK"><a href="#1-安装-SDK" class="headerlink" title="1. 安装 SDK"></a>1. 安装 SDK</h2><h3 id="1-1-方式一：下载SDK包"><a href="#1-1-方式一：下载SDK包" class="headerlink" title="1.1 方式一：下载SDK包"></a>1.1 方式一：下载SDK包</h3><ul><li><a href="https://flutter.dev/docs/development/tools/sdk/releases" target="_blank" rel="noopener">SDK包下载</a></li></ul><blockquote><p>解压到 ~/Documents/sdk/flutter</p></blockquote><h3 id="1-2-方式二：git-拉取源码"><a href="#1-2-方式二：git-拉取源码" class="headerlink" title="1.2 方式二：git 拉取源码"></a>1.2 方式二：git 拉取源码</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; mkdir ~/Documents/sdk</span><br><span class="line">&gt; <span class="built_in">cd</span> ~/Documents/sdk</span><br><span class="line">&gt; git <span class="built_in">clone</span> -b stable https://github.com/flutter/flutter.git</span><br></pre></td></tr></table></figure><h3 id="1-3-持续升级"><a href="#1-3-持续升级" class="headerlink" title="1.3 持续升级"></a>1.3 持续升级</h3><p>下次更新直接进入目录升级</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="built_in">cd</span> ~/Documents/sdk/flutter</span><br><span class="line">&gt; git pull</span><br><span class="line">&gt; flutter --version</span><br></pre></td></tr></table></figure><h2 id="2-配置环境变量"><a href="#2-配置环境变量" class="headerlink" title="2. 配置环境变量"></a>2. 配置环境变量</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt; vi ~/.bash_profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># flutter , 注意没有单引号</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$&#123;PATH&#125;</span>:~/Documents/sdk/flutter/bin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 以下两行适合国内</span></span><br><span class="line"><span class="built_in">export</span> PUB_HOSTED_URL=https://pub.flutter-io.cn</span><br><span class="line"><span class="built_in">export</span> FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cn</span><br><span class="line"></span><br><span class="line">&gt; <span class="built_in">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure><h2 id="3-zsh-用户修改配置文件"><a href="#3-zsh-用户修改配置文件" class="headerlink" title="3. zsh 用户修改配置文件"></a>3. zsh 用户修改配置文件</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; vi ~/.zshrc</span><br><span class="line"></span><br><span class="line">最后一行加入</span><br><span class="line"><span class="built_in">source</span> ~/.bash_profile</span><br><span class="line"></span><br><span class="line">重启终端生效</span><br></pre></td></tr></table></figure><h2 id="4-命令行运行-flutter"><a href="#4-命令行运行-flutter" class="headerlink" title="4. 命令行运行 flutter"></a>4. 命令行运行 flutter</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&gt; flutter doctor</span><br><span class="line">xcrun: error: invalid active developer path (/Library/Developer/CommandLineTools), missing xcrun at: /Library/Developer/CommandLineTools/usr/bin/xcrun</span><br><span class="line">Building flutter tool...</span><br><span class="line"></span><br><span class="line">  ╔════════════════════════════════════════════════════════════════════════════╗</span><br><span class="line">  ║                 Welcome to Flutter! - https://flutter.dev                  ║</span><br><span class="line">  ║                                                                            ║</span><br><span class="line">  ║ The Flutter tool anonymously reports feature usage statistics and crash    ║</span><br><span class="line">  ║ reports to Google <span class="keyword">in</span> order to <span class="built_in">help</span> Google contribute improvements to       ║</span><br><span class="line">  ║ Flutter over time.                                                         ║</span><br><span class="line">  ║                                                                            ║</span><br><span class="line">  ║ Read about data we send with crash reports:                                ║</span><br><span class="line">  ║ https://github.com/flutter/flutter/wiki/Flutter-CLI-crash-reporting        ║</span><br><span class="line">  ║                                                                            ║</span><br><span class="line">  ║ See Google<span class="string">'s privacy policy:                                               ║</span></span><br><span class="line"><span class="string">  ║ https://www.google.com/intl/en/policies/privacy/                           ║</span></span><br><span class="line"><span class="string">  ║                                                                            ║</span></span><br><span class="line"><span class="string">  ║ Use "flutter config --no-analytics" to disable analytics and crash         ║</span></span><br><span class="line"><span class="string">  ║ reporting.                                                                 ║</span></span><br><span class="line"><span class="string">  ╚════════════════════════════════════════════════════════════════════════════╝</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Doctor summary (to see all details, run flutter doctor -v):</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Oops; flutter has exited unexpectedly.</span></span><br><span class="line"><span class="string">Crash report written to /Users/ducafecat/flutter_01.log;</span></span><br><span class="line"><span class="string">please let us know at https://github.com/flutter/flutter/issues.</span></span><br></pre></td></tr></table></figure><blockquote><p>第一次运行会进行 build</p></blockquote><ul><li>CommandLineTools 工具推荐，先安装 xcode （早晚都要安装的）</li></ul><p>然后 Terminal 运行 xcode-select –install</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20190628153509349.png" alt="xcode-select --install" title>                </div>                <div class="image-caption">xcode-select --install</div>            </figure><h2 id="5-检查环境-flutter-doctor"><a href="#5-检查环境-flutter-doctor" class="headerlink" title="5. 检查环境 flutter doctor"></a>5. 检查环境 flutter doctor</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&gt; flutter doctor</span><br><span class="line">Doctor summary (to see all details, run flutter doctor -v):</span><br><span class="line">[✓] Flutter (Channel stable, v1.5.4-hotfix.2, on Mac OS X 10.14.5 18F132, locale zh-Hans-CN)</span><br><span class="line">[!] Android toolchain - develop <span class="keyword">for</span> Android devices (Android SDK version 29.0.0)</span><br><span class="line">    ✗ Android licenses not accepted.  To resolve this, run: flutter doctor --android-licenses</span><br><span class="line">[✗] iOS toolchain - develop <span class="keyword">for</span> iOS devices</span><br><span class="line">    ✗ Xcode installation is incomplete; a full installation is necessary <span class="keyword">for</span> iOS development.</span><br><span class="line">      Download at: https://developer.apple.com/xcode/download/</span><br><span class="line">      Or install Xcode via the App Store.</span><br><span class="line">      Once installed, run:</span><br><span class="line">        sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer</span><br><span class="line">    ✗ libimobiledevice and ideviceinstaller are not installed. To install with Brew, run:</span><br><span class="line">        brew update</span><br><span class="line">        brew install --HEAD usbmuxd</span><br><span class="line">        brew link usbmuxd</span><br><span class="line">        brew install --HEAD libimobiledevice</span><br><span class="line">        brew install ideviceinstaller</span><br><span class="line">    ✗ ios-deploy not installed. To install:</span><br><span class="line">        brew install ios-deploy</span><br><span class="line">    ✗ CocoaPods not installed.</span><br><span class="line">        CocoaPods is used to retrieve the iOS platform side<span class="string">'s plugin code that responds to your plugin usage on the Dart side.</span></span><br><span class="line"><span class="string">        Without resolving iOS dependencies with CocoaPods, plugins will not work on iOS.</span></span><br><span class="line"><span class="string">        For more info, see https://flutter.dev/platform-plugins</span></span><br><span class="line"><span class="string">      To install:</span></span><br><span class="line"><span class="string">        brew install cocoapods</span></span><br><span class="line"><span class="string">        pod setup</span></span><br><span class="line"><span class="string">[!] Android Studio (version 3.4)</span></span><br><span class="line"><span class="string">    ✗ Flutter plugin not installed; this adds Flutter specific functionality.</span></span><br><span class="line"><span class="string">    ✗ Dart plugin not installed; this adds Dart specific functionality.</span></span><br><span class="line"><span class="string">[!] IntelliJ IDEA Ultimate Edition (version 2019.1.3)</span></span><br><span class="line"><span class="string">    ✗ Flutter plugin not installed; this adds Flutter specific functionality.</span></span><br><span class="line"><span class="string">    ✗ Dart plugin not installed; this adds Dart specific functionality.</span></span><br><span class="line"><span class="string">[!] VS Code (version 1.35.1)</span></span><br><span class="line"><span class="string">    ✗ Flutter extension not installed; install from</span></span><br><span class="line"><span class="string">      https://marketplace.visualstudio.com/items?itemName=Dart-Code.flutter</span></span><br><span class="line"><span class="string">[!] Connected device</span></span><br><span class="line"><span class="string">    ! No devices available</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">! Doctor found issues in 6 categories.</span></span><br></pre></td></tr></table></figure><h2 id="6-查看版本-version"><a href="#6-查看版本-version" class="headerlink" title="6. 查看版本 version"></a>6. 查看版本 version</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; flutter --version</span><br><span class="line">Flutter 1.5.4-hotfix.2 • channel stable • https://github.com/flutter/flutter.git</span><br><span class="line">Framework • revision 7a4c33425d (9 weeks ago) • 2019-04-29 11:05:24 -0700</span><br><span class="line">Engine • revision 52c7a1e849</span><br><span class="line">Tools • Dart 2.3.0 (build 2.3.0-dev.0.5 a1668566e5)</span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://flutter.dev/docs/get-started/install/macos" target="_blank" rel="noopener">Flutter SDK MacOS install</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;采用 git 方式安装 SDK&lt;/li&gt;
&lt;li&gt;编译代码 flutter tool&lt;/li&gt;
&lt;li&gt;检查环境
      
    
    </summary>
    
      <category term="Flutter零基础入门中文教学" scheme="https://ducafecat.tech/categories/Flutter%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%E4%B8%AD%E6%96%87%E6%95%99%E5%AD%A6/"/>
    
    
      <category term="flutter" scheme="https://ducafecat.tech/tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>Flutter 零基础入门中文教学 - 01 前言</title>
    <link href="https://ducafecat.tech/2019/06/17/flutter/flutter-01-introduce/"/>
    <id>https://ducafecat.tech/2019/06/17/flutter/flutter-01-introduce/</id>
    <published>2019-06-16T16:00:00.000Z</published>
    <updated>2020-02-26T07:55:53.417Z</updated>
    
    <content type="html"><![CDATA[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-01-22-16-13-18.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h2><ul><li>介绍 Flutter</li><li>课程计划</li><li>如果获取课程资料、代码、视频</li></ul><h2 id="适合人群"><a href="#适合人群" class="headerlink" title="适合人群"></a>适合人群</h2><ul><li>泛移动开发人员</li><li>原生移动开发人员</li><li>前端开发人员</li></ul><h2 id="跨平台-移动、Web、桌面、嵌入"><a href="#跨平台-移动、Web、桌面、嵌入" class="headerlink" title="跨平台: 移动、Web、桌面、嵌入"></a>跨平台: 移动、Web、桌面、嵌入</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20190522135901818.png" alt="跨平台" title>                </div>                <div class="image-caption">跨平台</div>            </figure><h2 id="Flutter-框架结构"><a href="#Flutter-框架结构" class="headerlink" title="Flutter 框架结构"></a>Flutter 框架结构</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20190523091712106.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>Flutter Framework</li></ul><p>Framework 这一层使用 Dart 语言开发，它实现了一套基础库。</p><p>Foundation、Animation、Painting、Gestures 为 Dart 实现的 UI 层，提供动画、手势及绘制。</p><p>Rendering 渲染层，依赖 UI 层，在运行时 Rendering 层会构建一个 Widget 树，当有变化时，会更具一定的算法计算出有变化的部分，然后更新 Widget 树。</p><p>Widgets 层是 Flutter 提供的的一套基础组件库，在基础组件库之上，Flutter 还提供了 Material 和 Cupertino 两种视觉风格的组件库。</p><ul><li>Flutter Engine</li></ul><p>Skia 是一个开源的二维图形库，提供各种常用的 API，并可在多种软硬件平台上运行。谷歌 Chrome 浏览器、Chrome OS、安卓、火狐浏览器、火狐操作系统以及其它许多产品都使用它作为图形引擎。</p><p>Skia 由谷歌出资管理，任何人都可基于 BSD 免费软件许可证使用 Skia。Skia 开发团队致力于开发其核心部分， 并广泛采纳各方对于 Skia 的开源贡献。</p><p>因为没有使用原生的 UI 和绘制框架，所以才保证了 Flutter 的高性能体验。</p><h2 id="Skia"><a href="#Skia" class="headerlink" title="Skia"></a>Skia</h2><p><a href="https://skia.org/" target="_blank" rel="noopener">官网</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20190626154959148.png" alt="image-20190626154959148" title>                </div>                <div class="image-caption">image-20190626154959148</div>            </figure><p>Skia是一个开源的二维图形库，提供各种常用的API，并可在多种软硬件平台上运行。谷歌Chrome浏览器、Chrome OS、安卓、火狐浏览器、火狐操作系统以及其它许多产品都使用它作为图形引擎。</p><p>Skia由谷歌出资管理，任何人都可基于BSD免费软件许可证使用Skia。Skia开发团队致力于开发其核心部分， 并广泛采纳各方对于Skia的开源贡献。</p><h2 id="Flutter-for-Web"><a href="#Flutter-for-Web" class="headerlink" title="Flutter for Web"></a>Flutter for Web</h2><p><a href="https://flutter.dev/web" target="_blank" rel="noopener">https://flutter.dev/web</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20190523092032825.png" alt title>                </div>                <div class="image-caption"></div>            </figure><p>通过对比，可以发现，web框架层和mobile的几乎一模一样。因此只需要重新实现一下引擎和嵌入层，不用变动Flutter API就可以完全可以将UI代码从Android / IOS Flutter App移植到Web。Dart能够使用Dart2Js编译器把Dart代码编译成Js代码。大多数原生App元素能够通过DOM实现，DOM实现不了的元素可以通过Canvas来实现。</p><h2 id="Fuchsia-OS"><a href="#Fuchsia-OS" class="headerlink" title="Fuchsia OS"></a>Fuchsia OS</h2><ul><li><p><a href="https://xuzhongxing.github.io/201806fuchsia.pdf" target="_blank" rel="noopener">许中兴博士演讲：Fuchsia OS 简介及幻灯片下载</a> </p></li><li><p>桌面系统</p></li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20190626153104569.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>手机OS</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20190626153252442.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>平板</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20190626153929267.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>华为荣耀Play</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20190626154621682.png" alt title>                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20190626154700792.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="Flutter-特点"><a href="#Flutter-特点" class="headerlink" title="Flutter 特点"></a>Flutter 特点</h2><ul><li><p>多平台支持 iOS Android Linux 未来 Fuchsia OS</p></li><li><p>原生用户界面</p></li><li><p>120fps 超高性能</p></li><li><p>两套成熟 UI 库 Material Design 和 Cupertino</p></li><li><p>响应式的框架 Redux、RxDart、BloC 业务和 UI 分离</p></li><li><p>Flutter 支持 Hot Reload</p></li><li><p>国内阿里咸鱼、腾讯、京东、国外的谷歌等公司都已经有上线产品在使用 Flutter 开发</p><ul><li><a href="https://flutter.io/showcase" target="_blank" rel="noopener">showcase</a></li></ul></li></ul><h2 id="Flutter-横向对比"><a href="#Flutter-横向对比" class="headerlink" title="Flutter 横向对比"></a>Flutter 横向对比</h2><ul><li><p>Cordova</p><p>基于 WebView 渲染，遇到动画、大列表 性能慢</p></li><li><p>React Native、Weex</p><p>基于虚拟 DOM 生成原生组件，比 Cordova 这类的性能好，但是遇到负责项目会有叠加 view 过多性能瓶颈</p></li><li><p>Flutter</p><p>自己封装的组件和渲染引擎，在设计上肯定会比 RN 这类的性能好，用的自家 Dart 语言深度编译，不需要像 RN 桥接 JavaScript 进行通讯，也会在性能上有优势</p></li></ul><h2 id="Flutter-生态资源"><a href="#Flutter-生态资源" class="headerlink" title="Flutter 生态资源"></a>Flutter 生态资源</h2><ul><li><a href="https://itsallwidgets.com/" target="_blank" rel="noopener">Flutter应用展示</a></li><li><a href="https://pub.dev/flutter" target="_blank" rel="noopener">官方包管理平台</a></li><li><a href="https://github.com/Solido/awesome-flutter" target="_blank" rel="noopener">awesome</a></li></ul><h2 id="课程计划"><a href="#课程计划" class="headerlink" title="课程计划"></a>课程计划</h2><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">- </span>开篇写在最前</span><br><span class="line"><span class="bullet">  - </span>Flutter 介绍</span><br><span class="line"><span class="bullet">  - </span>学习方法推荐</span><br><span class="line"><span class="bullet">  - </span>课程计划</span><br><span class="line"></span><br><span class="line"><span class="bullet">- </span>开发环境搭建和工具配置</span><br><span class="line"><span class="bullet">  - </span>Flutter 环境配置 MacOS</span><br><span class="line"><span class="bullet">  - </span>IOS 环境配置 MacOS</span><br><span class="line"><span class="bullet">  - </span>Android 环境配置 MacOS</span><br><span class="line"><span class="bullet">  - </span>Flutter 环境配置 Windows10</span><br><span class="line"><span class="bullet">  - </span>Android 环境配置 Windows10</span><br><span class="line"><span class="bullet">  - </span>开发工具的选择 VSCode、IDEA、AndroidStudio</span><br><span class="line"></span><br><span class="line"><span class="bullet">- </span>基础知识</span><br><span class="line"><span class="bullet">  - </span>项目及配置文件介绍</span><br><span class="line"><span class="bullet">  - </span>开发规范</span><br><span class="line"><span class="bullet">  - </span>一切都是 widget</span><br><span class="line"><span class="bullet">  - </span>StatelessWidget、StatefulWidget</span><br><span class="line"><span class="bullet">  - </span>框架组件 MaterialApp、Scaffold</span><br><span class="line"><span class="bullet">  - </span>布局组件 Container、Center、Row、Column</span><br><span class="line"><span class="bullet">  - </span>基础组件 Text、Image、Button</span><br><span class="line"><span class="bullet">  - </span>路由导航 Routes、Navigator</span><br><span class="line"><span class="bullet">  - </span>生命周期</span><br><span class="line"></span><br><span class="line"><span class="bullet">- </span>快熟上手实战</span><br><span class="line"><span class="bullet">  - </span>新闻应用程序结构分析</span><br><span class="line"><span class="bullet">  - </span>使用布局组件搭建新闻列表界面</span><br><span class="line"><span class="bullet">  - </span>采用第三方 Http Dio 程序包读取数据</span><br><span class="line"><span class="bullet">  - </span>解析 Json 到 Modle</span><br><span class="line"><span class="bullet">  - </span>使用自定义组件展示新闻行信息</span><br><span class="line"><span class="bullet">  - </span>点击新闻条路由导航到详情页</span><br><span class="line"><span class="bullet">  - </span>采用Web容器展示新闻内容</span><br><span class="line"><span class="bullet">  - </span>上拉刷新、下拉加载新闻列表</span><br><span class="line"><span class="bullet">  - </span>定制 Loading 效果</span><br><span class="line"><span class="bullet">  - </span>采用矢量图标库</span><br><span class="line"><span class="bullet">  - </span>采用 Sqlite 实现新闻列表首页缓存</span><br><span class="line"><span class="bullet">  - </span>Redux 管理主题样式</span><br><span class="line"><span class="bullet">  - </span>加入应用启动画面</span><br><span class="line"><span class="bullet">  - </span>打包 Android APK 文件</span><br><span class="line"><span class="bullet">  - </span>打包 IOS IPA 文件</span><br><span class="line"></span><br><span class="line"><span class="bullet">- </span>基础组件</span><br><span class="line"><span class="bullet">  - </span>Widget 与 Element</span><br><span class="line"><span class="bullet">  - </span>StatelessWidget</span><br><span class="line"><span class="bullet">  - </span>StatefulWidget</span><br><span class="line"><span class="bullet">  - </span>Text</span><br><span class="line"><span class="bullet">  - </span>Image</span><br><span class="line"><span class="bullet">  - </span>Button</span><br><span class="line"><span class="bullet">  - </span>AppBar</span><br><span class="line"><span class="bullet">  - </span>AlertDialog</span><br><span class="line"><span class="bullet">  - </span>Icon</span><br><span class="line"><span class="bullet">  - </span>TextField</span><br><span class="line"><span class="bullet">  - </span>Form</span><br><span class="line"><span class="bullet">  - </span>Switch</span><br><span class="line"><span class="bullet">  - </span>Checkbox</span><br><span class="line"></span><br><span class="line"><span class="bullet">- </span>布局组件</span><br><span class="line"><span class="bullet">  - </span>线性 Row</span><br><span class="line"><span class="bullet">  - </span>线性 Column</span><br><span class="line"><span class="bullet">  - </span>弹性 Flex</span><br><span class="line"><span class="bullet">  - </span>弹性 Expanded</span><br><span class="line"><span class="bullet">  - </span>层叠 Stack</span><br><span class="line"><span class="bullet">  - </span>层叠 IndexedStack</span><br><span class="line"><span class="bullet">  - </span>层叠 Positioned</span><br><span class="line"><span class="bullet">  - </span>流式 Flow</span><br><span class="line"><span class="bullet">  - </span>流式 Wrap</span><br><span class="line"></span><br><span class="line"><span class="bullet">- </span>容器组件</span><br><span class="line"><span class="bullet">  - </span>Scaffold</span><br><span class="line"><span class="bullet">  - </span>Container</span><br><span class="line"><span class="bullet">  - </span>Center</span><br><span class="line"><span class="bullet">  - </span>Padding</span><br><span class="line"><span class="bullet">  - </span>ConstrainedBox</span><br><span class="line"><span class="bullet">  - </span>SizedBox</span><br><span class="line"><span class="bullet">  - </span>DecoratedBox</span><br><span class="line"><span class="bullet">  - </span>Transform</span><br><span class="line"></span><br><span class="line"><span class="bullet">- </span>导航组件</span><br><span class="line"><span class="bullet">  - </span>TabBar</span><br><span class="line"><span class="bullet">  - </span>NavigationBar</span><br><span class="line"><span class="bullet">  - </span>PageView</span><br><span class="line"></span><br><span class="line"><span class="bullet">- </span>可滚动组件</span><br><span class="line"><span class="bullet">  - </span>CustomScrollView</span><br><span class="line"><span class="bullet">  - </span>ListView</span><br><span class="line"><span class="bullet">  - </span>GridView</span><br><span class="line"><span class="bullet">  - </span>ScrollView</span><br><span class="line"><span class="bullet">  - </span>ExpansionPanel</span><br><span class="line"><span class="bullet">  - </span>ScrollController</span><br><span class="line"></span><br><span class="line"><span class="bullet">- </span>表格组件</span><br><span class="line"><span class="bullet">  - </span>Table</span><br><span class="line"><span class="bullet">  - </span>DataTables</span><br><span class="line"></span><br><span class="line"><span class="bullet">- </span>功能型组件</span><br><span class="line"><span class="bullet">  - </span>WillPopScope</span><br><span class="line"><span class="bullet">  - </span>InheritedWidget</span><br><span class="line"><span class="bullet">  - </span>主题 Theme</span><br><span class="line"></span><br><span class="line"><span class="bullet">- </span>事件处理与通知</span><br><span class="line"><span class="bullet">  - </span>事件处理</span><br><span class="line"><span class="bullet">  - </span>手势识别</span><br><span class="line"><span class="bullet">  - </span>全局事件总线</span><br><span class="line"><span class="bullet">  - </span>通知消息</span><br><span class="line"></span><br><span class="line"><span class="bullet">- </span>自定义 Widget</span><br><span class="line"><span class="bullet">  - </span>组合其它 Widget</span><br><span class="line"><span class="bullet">  - </span>自绘 CustomPaint、Canvas</span><br><span class="line"></span><br><span class="line"><span class="bullet">- </span>进阶</span><br><span class="line"><span class="bullet">  - </span>文件操作</span><br><span class="line"><span class="bullet">  - </span>Http 请求</span><br><span class="line"><span class="bullet">  - </span>WebSocket 连接</span><br><span class="line"><span class="bullet">  - </span>Json 解析</span><br><span class="line"><span class="bullet">  - </span>包与插件</span><br><span class="line"><span class="bullet">  - </span>国际化</span><br><span class="line"><span class="bullet">  - </span>数据库缓存</span><br><span class="line"><span class="bullet">  - </span>Redux</span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://flutter.io" target="_blank" rel="noopener">flutter.io</a></li><li><a href="https://skia.org/index_zh" target="_blank" rel="noopener">skia</a></li><li><a href="https://flutter.io/showcase" target="_blank" rel="noopener">showcase</a></li><li><a href="https://itsallwidgets.com/" target="_blank" rel="noopener">An open list of apps built with Flutter</a></li><li><a href="https://developers.googleblog.com/2019/05/Flutter-io19.html" target="_blank" rel="noopener"><a href="https://developers.googleblog.com/2019/05/Flutter-io19.html" target="_blank" rel="noopener">Flutter: a Portable UI Framework for Mobile, Web, Embedded, and Desktop</a></a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                   
      
    
    </summary>
    
      <category term="Flutter零基础入门中文教学" scheme="https://ducafecat.tech/categories/Flutter%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%E4%B8%AD%E6%96%87%E6%95%99%E5%AD%A6/"/>
    
    
      <category term="flutter" scheme="https://ducafecat.tech/tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>Dart语言学习 - 38 代码分格 API 设计 effective-design</title>
    <link href="https://ducafecat.tech/2019/01/28/dart/dart-38-effective-design/"/>
    <id>https://ducafecat.tech/2019/01/28/dart/dart-38-effective-design/</id>
    <published>2019-01-28T08:44:13.000Z</published>
    <updated>2019-08-01T18:39:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>API 设计</li></ul><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>Dart 2.1.0</li></ul><h1 id="要-使用一致的术语"><a href="#要-使用一致的术语" class="headerlink" title="要 使用一致的术语"></a>要 使用一致的术语</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pageCount         <span class="comment">// 一个成员变量</span></span><br><span class="line">updatePageCount() <span class="comment">// 和 pageCount 名字一致。</span></span><br><span class="line">toSomething()     <span class="comment">// 和 Iterable 的 toList() 一致。</span></span><br><span class="line">asSomething()     <span class="comment">// 和 List 的 asMap() 一致。</span></span><br><span class="line">Point             <span class="comment">// 广为人知的概念。</span></span><br></pre></td></tr></table></figure><h1 id="避免-缩写"><a href="#避免-缩写" class="headerlink" title="避免 缩写"></a>避免 缩写</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pageCount</span><br><span class="line">buildRectangles</span><br><span class="line">IOStream</span><br><span class="line">HttpRequest</span><br></pre></td></tr></table></figure><h1 id="推荐-把最具描述性的名词放到最后"><a href="#推荐-把最具描述性的名词放到最后" class="headerlink" title="推荐 把最具描述性的名词放到最后"></a>推荐 把最具描述性的名词放到最后</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pageCount             <span class="comment">// A count (of pages).</span></span><br><span class="line">ConversionSink        <span class="comment">// A sink for doing conversions.</span></span><br><span class="line">ChunkedConversionSink <span class="comment">// A ConversionSink that's chunked.</span></span><br><span class="line">CssFontFaceRule       <span class="comment">// A rule for font faces in CSS.</span></span><br></pre></td></tr></table></figure><h1 id="考虑-尽量让代码看起来像普通的句子"><a href="#考虑-尽量让代码看起来像普通的句子" class="headerlink" title="考虑 尽量让代码看起来像普通的句子"></a>考虑 尽量让代码看起来像普通的句子</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// "If errors is empty..."</span></span><br><span class="line"><span class="keyword">if</span> (errors.isEmpty) ...</span><br><span class="line"></span><br><span class="line"><span class="comment">// "Hey, _subscription, cancel!"</span></span><br><span class="line">_subscription.cancel();</span><br><span class="line"></span><br><span class="line"><span class="comment">// "Get the monsters where the monster has claws."</span></span><br><span class="line">monsters.where((monster) =&gt; monster.hasClaws);</span><br></pre></td></tr></table></figure><h1 id="推荐-使用非命令式动词短语命名布尔类型的变量和属性"><a href="#推荐-使用非命令式动词短语命名布尔类型的变量和属性" class="headerlink" title="推荐 使用非命令式动词短语命名布尔类型的变量和属性"></a>推荐 使用非命令式动词短语命名布尔类型的变量和属性</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">isEmpty</span><br><span class="line">hasElements</span><br><span class="line">canClose</span><br><span class="line">closesWindow</span><br><span class="line">canShowPopup</span><br><span class="line">hasShownPopup</span><br></pre></td></tr></table></figure><h1 id="考虑-省略命名布尔参数的动词"><a href="#考虑-省略命名布尔参数的动词" class="headerlink" title="考虑 省略命名布尔参数的动词"></a>考虑 省略命名布尔参数的动词</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Isolate.spawn(entryPoint, message, paused: <span class="keyword">false</span>)</span><br><span class="line"><span class="keyword">new</span> <span class="built_in">List</span>.from(elements, growable: <span class="keyword">true</span>)</span><br><span class="line"><span class="keyword">new</span> <span class="built_in">RegExp</span>(pattern, caseSensitive: <span class="keyword">false</span>)</span><br></pre></td></tr></table></figure><h1 id="推荐-使用命令式动词短语来命名带有副作用的函数或者方法"><a href="#推荐-使用命令式动词短语来命名带有副作用的函数或者方法" class="headerlink" title="推荐 使用命令式动词短语来命名带有副作用的函数或者方法"></a>推荐 使用命令式动词短语来命名带有副作用的函数或者方法</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">list.add()</span><br><span class="line">queue.removeFirst()</span><br><span class="line"><span class="built_in">window</span>.refresh()</span><br><span class="line">connection.downloadData()</span><br></pre></td></tr></table></figure><h1 id="考虑-使用名词短语或者非命令式动词短语命名返回数据为主要功能的方法或者函数"><a href="#考虑-使用名词短语或者非命令式动词短语命名返回数据为主要功能的方法或者函数" class="headerlink" title="考虑 使用名词短语或者非命令式动词短语命名返回数据为主要功能的方法或者函数"></a>考虑 使用名词短语或者非命令式动词短语命名返回数据为主要功能的方法或者函数</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">list.elementAt(<span class="number">3</span>)</span><br><span class="line">string.codeUnitAt(<span class="number">4</span>)</span><br></pre></td></tr></table></figure><h1 id="推荐-使用-to-来命名把对象的状态转换到一个新的对象的函数"><a href="#推荐-使用-to-来命名把对象的状态转换到一个新的对象的函数" class="headerlink" title="推荐 使用 to___() 来命名把对象的状态转换到一个新的对象的函数"></a>推荐 使用 to___() 来命名把对象的状态转换到一个新的对象的函数</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">list.toSet()</span><br><span class="line">stackTrace.toString()</span><br><span class="line">dateTime.toLocal()</span><br></pre></td></tr></table></figure><h1 id="使用-as-来命名把原来对象转换为另外一种表现形式的函数"><a href="#使用-as-来命名把原来对象转换为另外一种表现形式的函数" class="headerlink" title="使用 as___() 来命名把原来对象转换为另外一种表现形式的函数"></a>使用 as___() 来命名把原来对象转换为另外一种表现形式的函数</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">list.asMap()</span><br><span class="line">bytes.asFloat32List()</span><br><span class="line">subscription.asFuture()</span><br></pre></td></tr></table></figure><h1 id="避免-在方法或者函数名称中描述参数"><a href="#避免-在方法或者函数名称中描述参数" class="headerlink" title="避免 在方法或者函数名称中描述参数"></a>避免 在方法或者函数名称中描述参数</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">list.add(element)</span><br><span class="line">map.remove(key)</span><br></pre></td></tr></table></figure><h1 id="避免-定义使用简单的方法可以替代的只有一个成员的抽象类"><a href="#避免-定义使用简单的方法可以替代的只有一个成员的抽象类" class="headerlink" title="避免 定义使用简单的方法可以替代的只有一个成员的抽象类"></a>避免 定义使用简单的方法可以替代的只有一个成员的抽象类</h1><p>和 Java 不同的是， Dart 支持一等方法（first-class functions）、闭包和优雅的语法来使用它们。 如果你需要的只是一个回调函数，使用方法即可。 如果你定义了一个类，里面只有一个名字无意义的函数， 例如 call 或者 invoke， 这种情况最好用方法替代</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="built_in">bool</span> Predicate(item);</span><br></pre></td></tr></table></figure><h1 id="避免-定义只包含静态成员的类"><a href="#避免-定义只包含静态成员的类" class="headerlink" title="避免 定义只包含静态成员的类"></a>避免 定义只包含静态成员的类</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">DateTime</span> mostRecent(<span class="built_in">List</span>&lt;<span class="built_in">DateTime</span>&gt; dates) &#123;</span><br><span class="line">  <span class="keyword">return</span> dates.reduce((a, b) =&gt; a.isAfter(b) ? a : b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> _favoriteMammal = <span class="string">'weasel'</span>;</span><br></pre></td></tr></table></figure><h1 id="然后，这条规则并不是强制的。对于一些常量或者枚举型的类型，-使用类来把相关的成员组织到一起可能也是合理的。当然，-使用库也是同样合理的。"><a href="#然后，这条规则并不是强制的。对于一些常量或者枚举型的类型，-使用类来把相关的成员组织到一起可能也是合理的。当然，-使用库也是同样合理的。" class="headerlink" title="然后，这条规则并不是强制的。对于一些常量或者枚举型的类型， 使用类来把相关的成员组织到一起可能也是合理的。当然， 使用库也是同样合理的。"></a>然后，这条规则并不是强制的。对于一些常量或者枚举型的类型， 使用类来把相关的成员组织到一起可能也是合理的。当然， 使用库也是同样合理的。</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Color</span> </span>&#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">const</span> red = <span class="string">'#f00'</span>;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">const</span> green = <span class="string">'#0f0'</span>;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">const</span> blue = <span class="string">'#00f'</span>;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">const</span> black = <span class="string">'#000'</span>;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">const</span> white = <span class="string">'#fff'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="推荐-使用构造函数而不是静态函数来创建对象"><a href="#推荐-使用构造函数而不是静态函数来创建对象" class="headerlink" title="推荐 使用构造函数而不是静态函数来创建对象"></a>推荐 使用构造函数而不是静态函数来创建对象</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Point</span> </span>&#123;</span><br><span class="line">  <span class="built_in">num</span> x, y;</span><br><span class="line">  Point(<span class="keyword">this</span>.x, <span class="keyword">this</span>.y);</span><br><span class="line">  Point.polar(<span class="built_in">num</span> theta, <span class="built_in">num</span> radius)</span><br><span class="line">      : x = radius * math.cos(theta),</span><br><span class="line">        y = radius * math.sin(theta);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="要-使用-getter-来定义访问属性的操作"><a href="#要-使用-getter-来定义访问属性的操作" class="headerlink" title="要 使用 getter 来定义访问属性的操作"></a>要 使用 getter 来定义访问属性的操作</h1><p>如果函数的名字带有 get 前缀，或者是一个像 length 或者 size 这样 的名称，这种情况通常最好定义该函数为一个 getter。 当全部满足下面的条件的时候，你应该使用一个 getter：</p><p>没有参数。<br>返回一个值<br>没有副作用 调用一个 getter 不应该改变对象外部可见的状态 (内部缓存和延时初始化的状态可以发生变化) 如果对象的状态在多次调用同一个 getter 之间没有发生变化，则 多次调用同一个 getter 应该返回同一个值</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rectangle.width</span><br><span class="line">collection.isEmpty</span><br><span class="line">button.canShow</span><br></pre></td></tr></table></figure><h1 id="要-对于本质上为修改对象属性的函数要使用-setter"><a href="#要-对于本质上为修改对象属性的函数要使用-setter" class="headerlink" title="要 对于本质上为修改对象属性的函数要使用 setter"></a>要 对于本质上为修改对象属性的函数要使用 setter</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rectangle.width = <span class="number">3</span>;</span><br><span class="line">button.visible = <span class="keyword">false</span>;</span><br></pre></td></tr></table></figure><h1 id="不要-为-setter-指定返回类型"><a href="#不要-为-setter-指定返回类型" class="headerlink" title="不要 为 setter 指定返回类型"></a>不要 为 setter 指定返回类型</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> foo(Foo value) &#123;...&#125;</span><br></pre></td></tr></table></figure><h1 id="推荐-为私有成员提供类型"><a href="#推荐-为私有成员提供类型" class="headerlink" title="推荐 为私有成员提供类型"></a>推荐 为私有成员提供类型</h1><p>在公开的 API 上使用类型可以帮助使用你的库的用户。同样， 是私有代码上使用类型，可以帮助你的你的同事或者代码维护者。 另外，在私有成员上使用类型，对于将来自己查看代码 也有帮助。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CallChainVisitor</span> </span>&#123;</span><br><span class="line">  <span class="keyword">final</span> SourceVisitor _visitor;</span><br><span class="line">  <span class="keyword">final</span> Expression _target;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">void</span> _writeCall(Expression call) &#123; ... &#125;</span><br><span class="line"></span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="避免-在方法表达式上使用类型"><a href="#避免-在方法表达式上使用类型" class="headerlink" title="避免 在方法表达式上使用类型"></a>避免 在方法表达式上使用类型</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> names = people.map((person) =&gt; person.name);</span><br></pre></td></tr></table></figure><h1 id="避免-在没必要的地方使用-dynamic-类型"><a href="#避免-在没必要的地方使用-dynamic-类型" class="headerlink" title="避免 在没必要的地方使用 dynamic 类型"></a>避免 在没必要的地方使用 dynamic 类型</h1><p>在大部分 Dart 代码中，类型可以忽略，这样该参数类型会自动设置为 dynamic。 所以没必要手动指定类型为 dynamic 的， 只需要省略类型即可。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">lookUpOrDefault(<span class="built_in">String</span> name, <span class="built_in">Map</span> map, defaultValue) &#123;</span><br><span class="line">  <span class="keyword">var</span> value = map[name];</span><br><span class="line">  <span class="keyword">if</span> (value != <span class="keyword">null</span>) <span class="keyword">return</span> value;</span><br><span class="line">  <span class="keyword">return</span> defaultValue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="避免-使用-Function-类型"><a href="#避免-使用-Function-类型" class="headerlink" title="避免 使用 Function 类型"></a>避免 使用 Function 类型</h1><ul><li>正确</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bool</span> isValidString(<span class="built_in">String</span> value, <span class="built_in">bool</span> predicate(<span class="built_in">String</span> string)) &#123; ... &#125;</span><br></pre></td></tr></table></figure><ul><li>错误</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bool</span> isValidString(<span class="built_in">String</span> value, <span class="built_in">Function</span> predicate) &#123; ... &#125;</span><br></pre></td></tr></table></figure><h1 id="要-使用-Object-来替代-dynamic-来表示可以接受任意对象"><a href="#要-使用-Object-来替代-dynamic-来表示可以接受任意对象" class="headerlink" title="要 使用 Object 来替代 dynamic 来表示可以接受任意对象"></a>要 使用 Object 来替代 dynamic 来表示可以接受任意对象</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Accepts any object.</span></span><br><span class="line"><span class="keyword">void</span> log(<span class="built_in">Object</span> object) &#123;</span><br><span class="line">  <span class="built_in">print</span>(object.toString());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Only accepts bool or String, which can't be expressed in a type annotation.</span></span><br><span class="line"><span class="built_in">bool</span> convertToBool(arg) &#123;</span><br><span class="line">  <span class="keyword">if</span> (arg <span class="keyword">is</span> <span class="built_in">bool</span>) <span class="keyword">return</span> arg;</span><br><span class="line">  <span class="keyword">if</span> (arg <span class="keyword">is</span> <span class="built_in">String</span>) <span class="keyword">return</span> arg == <span class="string">'true'</span>;</span><br><span class="line">  <span class="keyword">throw</span> <span class="keyword">new</span> ArgumentError(<span class="string">'Cannot convert <span class="subst">$arg</span> to a bool.'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="考虑使用命名参数或者命名构造函数以及命名常量来清晰-的表明您的意图："><a href="#考虑使用命名参数或者命名构造函数以及命名常量来清晰-的表明您的意图：" class="headerlink" title="考虑使用命名参数或者命名构造函数以及命名常量来清晰 的表明您的意图："></a>考虑使用命名参数或者命名构造函数以及命名常量来清晰 的表明您的意图：</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Task.oneShot();</span><br><span class="line"><span class="keyword">new</span> Task.repeating();</span><br><span class="line"><span class="keyword">new</span> ListBox(scroll: <span class="keyword">true</span>, showScrollbars: <span class="keyword">true</span>);</span><br><span class="line"><span class="keyword">new</span> Button(ButtonState.enabled);</span><br></pre></td></tr></table></figure><h1 id="对于-setter-则没有这个要求，应为-setter-的名字已经明确的-表明了值所代表的意义"><a href="#对于-setter-则没有这个要求，应为-setter-的名字已经明确的-表明了值所代表的意义" class="headerlink" title="对于 setter 则没有这个要求，应为 setter 的名字已经明确的 表明了值所代表的意义"></a>对于 setter 则没有这个要求，应为 setter 的名字已经明确的 表明了值所代表的意义</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">listBox.canScroll = <span class="keyword">true</span>;</span><br><span class="line">button.isEnabled = <span class="keyword">false</span>;</span><br></pre></td></tr></table></figure><h1 id="避免-把用户想要忽略的参数放到位置可选参数的前列"><a href="#避免-把用户想要忽略的参数放到位置可选参数的前列" class="headerlink" title="避免 把用户想要忽略的参数放到位置可选参数的前列"></a>避免 把用户想要忽略的参数放到位置可选参数的前列</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">String</span>.fromCharCodes(<span class="built_in">Iterable</span>&lt;<span class="built_in">int</span>&gt; charCodes, [<span class="built_in">int</span> start = <span class="number">0</span>, <span class="built_in">int</span> end])</span><br><span class="line"></span><br><span class="line"><span class="built_in">DateTime</span>(<span class="built_in">int</span> year,</span><br><span class="line">    [<span class="built_in">int</span> month = <span class="number">1</span>,</span><br><span class="line">    <span class="built_in">int</span> day = <span class="number">1</span>,</span><br><span class="line">    <span class="built_in">int</span> hour = <span class="number">0</span>,</span><br><span class="line">    <span class="built_in">int</span> minute = <span class="number">0</span>,</span><br><span class="line">    <span class="built_in">int</span> second = <span class="number">0</span>,</span><br><span class="line">    <span class="built_in">int</span> millisecond = <span class="number">0</span>,</span><br><span class="line">    <span class="built_in">int</span> microsecond = <span class="number">0</span>])</span><br><span class="line"></span><br><span class="line"><span class="built_in">Duration</span>(</span><br><span class="line">    &#123;<span class="built_in">int</span> days: <span class="number">0</span>,</span><br><span class="line">    <span class="built_in">int</span> hours: <span class="number">0</span>,</span><br><span class="line">    <span class="built_in">int</span> minutes: <span class="number">0</span>,</span><br><span class="line">    <span class="built_in">int</span> seconds: <span class="number">0</span>,</span><br><span class="line">    <span class="built_in">int</span> milliseconds: <span class="number">0</span>,</span><br><span class="line">    <span class="built_in">int</span> microseconds: <span class="number">0</span>&#125;)</span><br></pre></td></tr></table></figure><h1 id="避免-使用强制无意义的参数"><a href="#避免-使用强制无意义的参数" class="headerlink" title="避免 使用强制无意义的参数"></a>避免 使用强制无意义的参数</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">string.substring(start)</span><br></pre></td></tr></table></figure><h1 id="要-使用包含开始位置并且不包含结束位置的范围参数"><a href="#要-使用包含开始位置并且不包含结束位置的范围参数" class="headerlink" title="要 使用包含开始位置并且不包含结束位置的范围参数"></a>要 使用包含开始位置并且不包含结束位置的范围参数</h1><p>如果你定义一个函数或者方法让用户从基于位置排序的集合中 选择一些元素，需要一个开始位置索引和结束位置索引分别制定开始 元素的位置以及结束元素的位置。结束位置通常是指 大于最后一个元素的位置的值。</p><p>核心库就是这样定义的，所以最好和核心库保持一致</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>].sublist(<span class="number">1</span>, <span class="number">3</span>) <span class="comment">// [1, 2].</span></span><br><span class="line"><span class="string">'abcd'</span>.substring(<span class="number">1</span>, <span class="number">3</span>)     <span class="comment">// "bc".</span></span><br></pre></td></tr></table></figure><h1 id="不要-在自定义-操作符中判断-null"><a href="#不要-在自定义-操作符中判断-null" class="headerlink" title="不要 在自定义 == 操作符中判断 null"></a>不要 在自定义 == 操作符中判断 null</h1><p>语言规范表明了这种判断已经自动执行了，你的 == 自定义操作符只有当 右侧对象不为 null 的时候才会执行。</p><ul><li>正确</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String</span> name;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">operator</span> ==(other) =&gt;</span><br><span class="line">      other <span class="keyword">is</span> Person &amp;&amp; name == other.name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>错误</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String</span> name;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">operator</span> ==(other) =&gt;</span><br><span class="line">      other != <span class="keyword">null</span> &amp;&amp;</span><br><span class="line">      other <span class="keyword">is</span> Person &amp;&amp;</span><br><span class="line">      name == other.name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://www.dartlang.org/guides/language/effective-dart/design" target="_blank" rel="noopener">design</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;API 设计&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;heade
      
    
    </summary>
    
      <category term="Dart语言学习" scheme="https://ducafecat.tech/categories/Dart%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="dart" scheme="https://ducafecat.tech/tags/dart/"/>
    
  </entry>
  
  <entry>
    <title>Dart语言学习 - 37 代码分格 最佳实践 effective-usage</title>
    <link href="https://ducafecat.tech/2019/01/28/dart/dart-37-effective-usage/"/>
    <id>https://ducafecat.tech/2019/01/28/dart/dart-37-effective-usage/</id>
    <published>2019-01-28T07:30:46.000Z</published>
    <updated>2019-08-01T18:39:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>最佳实践</li></ul><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>Dart 2.1.0</li></ul><h1 id="使用相邻的字符串字面量定义来链接字符串"><a href="#使用相邻的字符串字面量定义来链接字符串" class="headerlink" title="使用相邻的字符串字面量定义来链接字符串"></a>使用相邻的字符串字面量定义来链接字符串</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">raiseAlarm(</span><br><span class="line">    <span class="string">'ERROR: Parts of the spaceship are on fire. Other '</span></span><br><span class="line">    <span class="string">'parts are overrun by martians. Unclear which are which.'</span>);</span><br></pre></td></tr></table></figure><h1 id="使用插值的形式来组合字符串和值"><a href="#使用插值的形式来组合字符串和值" class="headerlink" title="使用插值的形式来组合字符串和值"></a>使用插值的形式来组合字符串和值</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'Hello, <span class="subst">$name</span>! You are <span class="subst">$&#123;year - birth&#125;</span> years old.'</span>;</span><br></pre></td></tr></table></figure><h1 id="避免在字符串插值中使用多余的大括号"><a href="#避免在字符串插值中使用多余的大括号" class="headerlink" title="避免在字符串插值中使用多余的大括号"></a>避免在字符串插值中使用多余的大括号</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'Hi, <span class="subst">$name</span>!'</span></span><br><span class="line"><span class="string">"Wear your wildest <span class="subst">$decade</span>'s outfit."</span></span><br><span class="line"><span class="string">'Wear your wildest <span class="subst">$&#123;decade&#125;</span>s outfit.'</span></span><br></pre></td></tr></table></figure><h1 id="尽可能的使用集合字面量来定义集合"><a href="#尽可能的使用集合字面量来定义集合" class="headerlink" title="尽可能的使用集合字面量来定义集合"></a>尽可能的使用集合字面量来定义集合</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> points = [];</span><br><span class="line"><span class="keyword">var</span> addresses = &#123;&#125;;</span><br></pre></td></tr></table></figure><h1 id="如果有必要还可以提供泛型类型"><a href="#如果有必要还可以提供泛型类型" class="headerlink" title="如果有必要还可以提供泛型类型"></a>如果有必要还可以提供泛型类型</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> points = &lt;Point&gt;[];</span><br><span class="line"><span class="keyword">var</span> addresses = &lt;<span class="built_in">String</span>, Address&gt;&#123;&#125;;</span><br></pre></td></tr></table></figure><h1 id="不要-使用-length-来判断集合是否为空"><a href="#不要-使用-length-来判断集合是否为空" class="headerlink" title="不要 使用 .length 来判断集合是否为空"></a>不要 使用 .length 来判断集合是否为空</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (lunchBox.isEmpty) <span class="keyword">return</span> <span class="string">'so hungry...'</span>;</span><br><span class="line"><span class="keyword">if</span> (words.isNotEmpty) <span class="keyword">return</span> words.join(<span class="string">' '</span>);</span><br></pre></td></tr></table></figure><h1 id="使用高阶（higher-order）函数来转换集合数据"><a href="#使用高阶（higher-order）函数来转换集合数据" class="headerlink" title="使用高阶（higher-order）函数来转换集合数据"></a>使用高阶（higher-order）函数来转换集合数据</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> aquaticNames = animals</span><br><span class="line">    .where((animal) =&gt; animal.isAquatic)</span><br><span class="line">    .map((animal) =&gt; animal.name);</span><br></pre></td></tr></table></figure><h1 id="避免-在-Iterable-forEach-中使用函数声明形式"><a href="#避免-在-Iterable-forEach-中使用函数声明形式" class="headerlink" title="避免 在 Iterable.forEach() 中使用函数声明形式"></a>避免 在 Iterable.forEach() 中使用函数声明形式</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> person <span class="keyword">in</span> people) &#123;</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>forEach() 方法通常在 JavaScript 中使用，原因是系统内置的 for-in 循环并不能提供期望的结果。 相反，在 Dart 中如果需要遍历一个集合，通常使用循环语句</p><h1 id="如果你只想在每个集合元素上调用一个已经定义好的函数，则可以使用-forEach-函数"><a href="#如果你只想在每个集合元素上调用一个已经定义好的函数，则可以使用-forEach-函数" class="headerlink" title="如果你只想在每个集合元素上调用一个已经定义好的函数，则可以使用 forEach() 函数"></a>如果你只想在每个集合元素上调用一个已经定义好的函数，则可以使用 forEach() 函数</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">people.forEach(<span class="built_in">print</span>);</span><br></pre></td></tr></table></figure><h1 id="要-用方法声明的形式来给方法起个名字"><a href="#要-用方法声明的形式来给方法起个名字" class="headerlink" title="要 用方法声明的形式来给方法起个名字"></a>要 用方法声明的形式来给方法起个名字</h1><ul><li>正确</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> main() &#123;</span><br><span class="line">  localFunction() &#123;</span><br><span class="line">    ...</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>错误示范</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> main() &#123;</span><br><span class="line">  <span class="keyword">var</span> localFunction = () &#123;</span><br><span class="line">    ...</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="不要-显式的把变量初始化为-null"><a href="#不要-显式的把变量初始化为-null" class="headerlink" title="不要 显式的把变量初始化为 null"></a>不要 显式的把变量初始化为 null</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> _nextId;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LazyId</span> </span>&#123;</span><br><span class="line">  <span class="built_in">int</span> _id;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">int</span> <span class="keyword">get</span> id &#123;</span><br><span class="line">    <span class="keyword">if</span> (_nextId == <span class="keyword">null</span>) _nextId = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (_id == <span class="keyword">null</span>) _id = _nextId++;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> _id;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 Dart 中没有初始化的变量和域会自动的 初始化为 null。在语言基本就保证了该行为的可靠性。 在 Dart 中没有 “未初始化的内存”这个概念。所以添加 = null 是多余的。</p><h1 id="不要-创建没必要的-getter-和-setter"><a href="#不要-创建没必要的-getter-和-setter" class="headerlink" title="不要 创建没必要的 getter 和 setter"></a>不要 创建没必要的 getter 和 setter</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line"></span><br><span class="line"># 段落 <span class="number">1</span></span><br><span class="line"></span><br><span class="line">- 正确</span><br><span class="line"></span><br><span class="line">```dart</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Box</span> </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> contents;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>错误</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Box</span> </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> _contents;</span><br><span class="line">  <span class="keyword">get</span> contents =&gt; _contents;</span><br><span class="line">  <span class="keyword">set</span> contents(value) &#123;</span><br><span class="line">    _contents = value;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="推荐-使用-final-关键字来限定只读属性"><a href="#推荐-使用-final-关键字来限定只读属性" class="headerlink" title="推荐 使用 final 关键字来限定只读属性"></a>推荐 使用 final 关键字来限定只读属性</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Box</span> </span>&#123;</span><br><span class="line">  <span class="keyword">final</span> contents = [];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="考虑-用-gt-来实现只有一个单一返回语句的函数"><a href="#考虑-用-gt-来实现只有一个单一返回语句的函数" class="headerlink" title="考虑 用 =&gt; 来实现只有一个单一返回语句的函数"></a>考虑 用 =&gt; 来实现只有一个单一返回语句的函数</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">get</span> width =&gt; right - left;</span><br><span class="line"><span class="built_in">bool</span> ready(<span class="built_in">num</span> time) =&gt; minTime == <span class="keyword">null</span> || minTime &lt;= time;</span><br><span class="line">containsValue(<span class="built_in">String</span> value) =&gt; getValues().contains(value);</span><br></pre></td></tr></table></figure><h1 id="要-尽可能的在定义变量的时候初始化其值"><a href="#要-尽可能的在定义变量的时候初始化其值" class="headerlink" title="要 尽可能的在定义变量的时候初始化其值"></a>要 尽可能的在定义变量的时候初始化其值</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Folder</span> </span>&#123;</span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String</span> name;</span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">List</span>&lt;Document&gt; contents = [];</span><br><span class="line"></span><br><span class="line">  Folder(<span class="keyword">this</span>.name);</span><br><span class="line">  Folder.temp() : name = <span class="string">'temporary'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="要-尽可能的使用初始化形式"><a href="#要-尽可能的使用初始化形式" class="headerlink" title="要 尽可能的使用初始化形式"></a>要 尽可能的使用初始化形式</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Point</span> </span>&#123;</span><br><span class="line">  <span class="built_in">num</span> x, y;</span><br><span class="line">  Point(<span class="keyword">this</span>.x, <span class="keyword">this</span>.y);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="要-把-super-调用放到构造函数初始化列表之后调用"><a href="#要-把-super-调用放到构造函数初始化列表之后调用" class="headerlink" title="要 把 super() 调用放到构造函数初始化列表之后调用"></a>要 把 super() 调用放到构造函数初始化列表之后调用</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">View(Style style, <span class="built_in">List</span> children)</span><br><span class="line">    : _children = children,</span><br><span class="line">      <span class="keyword">super</span>(style) &#123;</span><br></pre></td></tr></table></figure><h1 id="要-使用-rethrow-来重新抛出捕获的异常"><a href="#要-使用-rethrow-来重新抛出捕获的异常" class="headerlink" title="要 使用 rethrow 来重新抛出捕获的异常"></a>要 使用 rethrow 来重新抛出捕获的异常</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">  somethingRisky();</span><br><span class="line">&#125; <span class="keyword">catch</span>(e) &#123;</span><br><span class="line">  <span class="keyword">if</span> (!canHandle(e)) <span class="keyword">rethrow</span>;</span><br><span class="line">  handle(e);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="推荐-使用-async-await-而不是直接使用底层的特性"><a href="#推荐-使用-async-await-而不是直接使用底层的特性" class="headerlink" title="推荐 使用 async/await 而不是直接使用底层的特性"></a>推荐 使用 async/await 而不是直接使用底层的特性</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Future&lt;<span class="built_in">bool</span>&gt; doAsyncComputation() <span class="keyword">async</span> &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> result = <span class="keyword">await</span> longRunningCalculation();</span><br><span class="line">    <span class="keyword">return</span> verifyResult(result.summary);</span><br><span class="line">  &#125; <span class="keyword">catch</span>(e) &#123;</span><br><span class="line">    log.error(e);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="不要-在没有有用效果的情况下使用-async"><a href="#不要-在没有有用效果的情况下使用-async" class="headerlink" title="不要 在没有有用效果的情况下使用 async"></a>不要 在没有有用效果的情况下使用 async</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Future afterTwoThings(Future first, second) &#123;</span><br><span class="line">  <span class="keyword">return</span> Future.wait([first, second]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://www.dartlang.org/guides/language/effective-dart/usage" target="_blank" rel="noopener">usage</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;最佳实践&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerl
      
    
    </summary>
    
      <category term="Dart语言学习" scheme="https://ducafecat.tech/categories/Dart%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="dart" scheme="https://ducafecat.tech/tags/dart/"/>
    
  </entry>
  
  <entry>
    <title>Dart语言学习 - 36 - 代码分格 文档 effective-documentation</title>
    <link href="https://ducafecat.tech/2019/01/28/dart/dart-36-effective-documentation/"/>
    <id>https://ducafecat.tech/2019/01/28/dart/dart-36-effective-documentation/</id>
    <published>2019-01-28T07:15:00.000Z</published>
    <updated>2019-08-01T18:39:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>文档分格</li></ul><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>Dart 2.1.0</li></ul><h1 id="按照句子的格式来格式化评论"><a href="#按照句子的格式来格式化评论" class="headerlink" title="按照句子的格式来格式化评论"></a>按照句子的格式来格式化评论</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Not if there is nothing before it.</span></span><br><span class="line"><span class="keyword">if</span> (_chunks.isEmpty) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br></pre></td></tr></table></figure><p>如果第一个单词不是大小写相关的标识符，则首字母要大写。使用标点符号结尾 （句号、感叹号、问号）。对于所有的注释都是这样要求的：文档注释、 行内注释、甚至 TODO 注释。即使是一句话的一半也需要如此。</p><h1 id="使用块注释作为解释说明"><a href="#使用块注释作为解释说明" class="headerlink" title="使用块注释作为解释说明"></a>使用块注释作为解释说明</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">greet(name) &#123;</span><br><span class="line">  <span class="comment">// Assume we have a valid name.</span></span><br><span class="line">  <span class="built_in">print</span>(<span class="string">'Hi, <span class="subst">$name</span>!'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="使用-文档注释来注释成员和类型"><a href="#使用-文档注释来注释成员和类型" class="headerlink" title="使用 /// 文档注释来注释成员和类型"></a>使用 /// 文档注释来注释成员和类型</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// <span class="markdown">The number of characters in this chunk when unsplit.</span></span></span><br><span class="line"><span class="built_in">int</span> <span class="keyword">get</span> length =&gt; ...</span><br></pre></td></tr></table></figure><h1 id="把第一个语句定义为一个段落"><a href="#把第一个语句定义为一个段落" class="headerlink" title="把第一个语句定义为一个段落"></a>把第一个语句定义为一个段落</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// <span class="markdown">Defines a flag.</span></span></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"><span class="comment">/// <span class="markdown">Throws an [ArgumentError] if there is already an option named [name] or</span></span></span><br><span class="line"><span class="comment">/// <span class="markdown">there is already an option using abbreviation [abbr]. Returns the new flag.</span></span></span><br><span class="line">Flag addFlag(<span class="built_in">String</span> name, <span class="built_in">String</span> abbr) &#123; ... &#125;</span><br></pre></td></tr></table></figure><p>注释文档中的第一个段落应该是简洁的、面向用户的注释。例如下面的示例， 通常不是一个完成的语句。</p><h1 id="用第三人称来开始函数或者方法的文档注释"><a href="#用第三人称来开始函数或者方法的文档注释" class="headerlink" title="用第三人称来开始函数或者方法的文档注释"></a>用第三人称来开始函数或者方法的文档注释</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// <span class="markdown">Returns <span class="code">`true`</span> if every element satisfies the [predicate].</span></span></span><br><span class="line"><span class="built_in">bool</span> all(<span class="built_in">bool</span> predicate(T element)) &#123; ... &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// <span class="markdown">Starts the stopwatch if not already running.</span></span></span><br><span class="line"><span class="keyword">void</span> start() &#123; ... &#125;</span><br></pre></td></tr></table></figure><h1 id="使用名词短语来开始变量、getter、setter-的注释"><a href="#使用名词短语来开始变量、getter、setter-的注释" class="headerlink" title="使用名词短语来开始变量、getter、setter 的注释"></a>使用名词短语来开始变量、getter、setter 的注释</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// <span class="markdown">The current day of the week, where <span class="code">`0`</span> is Sunday.</span></span></span><br><span class="line"><span class="built_in">int</span> weekday;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// <span class="markdown">The number of checked buttons on the page.</span></span></span><br><span class="line"><span class="built_in">int</span> <span class="keyword">get</span> checkedCount &#123; ... &#125;</span><br></pre></td></tr></table></figure><p>注释文档应该表述这个属性是什么。虽然 getter 函数会做些计算， 但是也要求这样，调用者关心的是其结果而 不是如何计算的</p><h1 id="使用名词短语来开始库和类型注释"><a href="#使用名词短语来开始库和类型注释" class="headerlink" title="使用名词短语来开始库和类型注释"></a>使用名词短语来开始库和类型注释</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// <span class="markdown">A chunk of non-breaking output text terminated by a hard or soft newline.</span></span></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"><span class="comment">/// <span class="markdown">...</span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Chunk</span> </span>&#123; ... &#125;</span><br></pre></td></tr></table></figure><p>在程序中，类的注释通常是最重要的文档。 类的注释描述了类型的不变性、介绍其使用的术语、 提供类成员使用的上下文信息。为类提供一些注释可以让 其他类成员的注释更易于理解和编写。</p><h1 id="在文档注释中添加示例代码"><a href="#在文档注释中添加示例代码" class="headerlink" title="在文档注释中添加示例代码"></a>在文档注释中添加示例代码</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// <span class="markdown">Returns the lesser of two numbers.</span></span></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"><span class="comment">///     <span class="markdown">min(5, 3); // 3.</span></span></span><br><span class="line"><span class="built_in">num</span> min(<span class="built_in">num</span> a, <span class="built_in">num</span> b) &#123; ... &#125;</span><br></pre></td></tr></table></figure><p>人类非常擅长从示例中抽象出实质内容，所以即使提供 一行最简单的示例代码都可以让 API 更易于理解。</p><h1 id="而-Dart-把参数、返回值等描述放到文档注释中，并使用方括号来引用-以及高亮这些参数和返回值"><a href="#而-Dart-把参数、返回值等描述放到文档注释中，并使用方括号来引用-以及高亮这些参数和返回值" class="headerlink" title="而 Dart 把参数、返回值等描述放到文档注释中，并使用方括号来引用 以及高亮这些参数和返回值"></a>而 Dart 把参数、返回值等描述放到文档注释中，并使用方括号来引用 以及高亮这些参数和返回值</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// <span class="markdown">Defines a flag.</span></span></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"><span class="comment">/// <span class="markdown">Throws an [ArgumentError] if there is already an option named [name] or</span></span></span><br><span class="line"><span class="comment">/// <span class="markdown">there is already an option using abbreviation [abbr]. Returns the new flag.</span></span></span><br><span class="line">Flag addFlag(<span class="built_in">String</span> name, <span class="built_in">String</span> abbr) &#123; ... &#125;</span><br></pre></td></tr></table></figure><h1 id="把注释文档放到注解之前"><a href="#把注释文档放到注解之前" class="headerlink" title="把注释文档放到注解之前"></a>把注释文档放到注解之前</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// <span class="markdown"><span class="emphasis">_Deprecated: Use [newMethod] instead._</span></span></span></span><br><span class="line"><span class="meta">@deprecated</span></span><br><span class="line">oldMethod();</span><br></pre></td></tr></table></figure><h1 id="使用-“this”-而不是-“the”-来引用实例成员"><a href="#使用-“this”-而不是-“the”-来引用实例成员" class="headerlink" title="使用 “this” 而不是 “the” 来引用实例成员"></a>使用 “this” 而不是 “the” 来引用实例成员</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Box</span> </span>&#123;</span><br><span class="line">  <span class="comment">/// <span class="markdown">The value this wraps.</span></span></span><br><span class="line">  <span class="keyword">var</span> _value;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">True if this box contains a value.</span></span></span><br><span class="line">  <span class="built_in">bool</span> <span class="keyword">get</span> hasValue =&gt; _value != <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://www.dartlang.org/guides/language/effective-dart/documentation" target="_blank" rel="noopener">documentation</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;文档分格&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerl
      
    
    </summary>
    
      <category term="Dart语言学习" scheme="https://ducafecat.tech/categories/Dart%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="dart" scheme="https://ducafecat.tech/tags/dart/"/>
    
  </entry>
  
  <entry>
    <title>Dart语言学习 - 35 - 代码分格 effective style</title>
    <link href="https://ducafecat.tech/2019/01/28/dart/dart-35-effective-style/"/>
    <id>https://ducafecat.tech/2019/01/28/dart/dart-35-effective-style/</id>
    <published>2019-01-28T06:43:12.000Z</published>
    <updated>2019-08-01T18:39:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>代码分格</li></ul><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>Dart 2.1.0</li></ul><h1 id="使用-UpperCamelCase-风格来命名类型名称"><a href="#使用-UpperCamelCase-风格来命名类型名称" class="headerlink" title="使用 UpperCamelCase 风格来命名类型名称"></a>使用 UpperCamelCase 风格来命名类型名称</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SliderMenu</span> </span>&#123; ... &#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HttpRequest</span> </span>&#123; ... &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">bool</span> Predicate&lt;T&gt;(T value);</span><br></pre></td></tr></table></figure><h1 id="使用-lowercase-with-underscores-风格来命名库和文件名名字"><a href="#使用-lowercase-with-underscores-风格来命名库和文件名名字" class="headerlink" title="使用 lowercase_with_underscores 风格来命名库和文件名名字"></a>使用 lowercase_with_underscores 风格来命名库和文件名名字</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span> peg_parser.source_scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">'file_system.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'slider_menu.dart'</span>;</span><br></pre></td></tr></table></figure><h1 id="使用-lowercase-with-underscores-风格命名导入的前缀"><a href="#使用-lowercase-with-underscores-风格命名导入的前缀" class="headerlink" title="使用 lowercase_with_underscores 风格命名导入的前缀"></a>使用 lowercase_with_underscores 风格命名导入的前缀</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'dart:json'</span> <span class="keyword">as</span> json;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'dart:math'</span> <span class="keyword">as</span> math;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:javascript_utils/javascript_utils.dart'</span> <span class="keyword">as</span> js_utils;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:js/js.dart'</span> <span class="keyword">as</span> js;</span><br></pre></td></tr></table></figure><h1 id="使用-lowerCamelCase-风格来命名其他的标识符"><a href="#使用-lowerCamelCase-风格来命名其他的标识符" class="headerlink" title="使用 lowerCamelCase 风格来命名其他的标识符"></a>使用 lowerCamelCase 风格来命名其他的标识符</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> item;</span><br><span class="line"></span><br><span class="line">HttpRequest httpRequest;</span><br><span class="line"></span><br><span class="line">align(clearItems) &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="使用-lowerCamelCase-来命名常量"><a href="#使用-lowerCamelCase-来命名常量" class="headerlink" title="使用 lowerCamelCase 来命名常量"></a>使用 lowerCamelCase 来命名常量</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> pi = <span class="number">3.14</span>;</span><br><span class="line"><span class="keyword">const</span> defaultTimeout = <span class="number">1000</span>;</span><br><span class="line"><span class="keyword">final</span> urlScheme = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">'^([a-z]+):'</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dice</span> </span>&#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">final</span> numberGenerator = <span class="keyword">new</span> Random();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="把-“dart-”-导入语句放到其他导入语句之前"><a href="#把-“dart-”-导入语句放到其他导入语句之前" class="headerlink" title="把 “dart:” 导入语句放到其他导入语句之前"></a>把 “dart:” 导入语句放到其他导入语句之前</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'dart:async'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'dart:html'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:bar/bar.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:foo/foo.dart'</span>;</span><br></pre></td></tr></table></figure><h1 id="把-“package-”-导入语句放到相对导入语句之前"><a href="#把-“package-”-导入语句放到相对导入语句之前" class="headerlink" title="把 “package:” 导入语句放到相对导入语句之前"></a>把 “package:” 导入语句放到相对导入语句之前</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:bar/bar.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:foo/foo.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">'a.dart'</span>;</span><br></pre></td></tr></table></figure><h1 id="把”第三方”-“package-”-导入语句放到其他语句之前。"><a href="#把”第三方”-“package-”-导入语句放到其他语句之前。" class="headerlink" title="把”第三方” “package:” 导入语句放到其他语句之前。"></a>把”第三方” “package:” 导入语句放到其他语句之前。</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:bar/bar.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:foo/foo.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:myapp/io.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:myapp/util.dart'</span>;</span><br></pre></td></tr></table></figure><h1 id="把导出（export）语句放到所有导入语句之后的部分"><a href="#把导出（export）语句放到所有导入语句之后的部分" class="headerlink" title="把导出（export）语句放到所有导入语句之后的部分"></a>把导出（export）语句放到所有导入语句之后的部分</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'src/error.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'src/string_source.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="string">'src/error.dart'</span>;</span><br></pre></td></tr></table></figure><h1 id="按照字母顺序来排序每个部分中的语句"><a href="#按照字母顺序来排序每个部分中的语句" class="headerlink" title="按照字母顺序来排序每个部分中的语句"></a>按照字母顺序来排序每个部分中的语句</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:bar/bar.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:foo/bar.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">'a.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'a/b.dart'</span>;</span><br></pre></td></tr></table></figure><h1 id="在所有的控制结构上使用大括号"><a href="#在所有的控制结构上使用大括号" class="headerlink" title="在所有的控制结构上使用大括号"></a>在所有的控制结构上使用大括号</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">'sanity'</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">'opposite day!'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="当只有-if-语句没有-else-语句并且-所有语句可以放到一行的时候，可以省略大括号"><a href="#当只有-if-语句没有-else-语句并且-所有语句可以放到一行的时候，可以省略大括号" class="headerlink" title="当只有 if 语句没有 else 语句并且 所有语句可以放到一行的时候，可以省略大括号"></a>当只有 if 语句没有 else 语句并且 所有语句可以放到一行的时候，可以省略大括号</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (arg == <span class="keyword">null</span>) <span class="keyword">return</span> defaultValue;</span><br></pre></td></tr></table></figure><h1 id="通常用于当条件满足的时候就跳出-if-或者-返回的情况。-但是对于其他表达式，如果可以放到一行中，-也可以这样使用"><a href="#通常用于当条件满足的时候就跳出-if-或者-返回的情况。-但是对于其他表达式，如果可以放到一行中，-也可以这样使用" class="headerlink" title="通常用于当条件满足的时候就跳出 if 或者 返回的情况。 但是对于其他表达式，如果可以放到一行中， 也可以这样使用"></a>通常用于当条件满足的时候就跳出 if 或者 返回的情况。 但是对于其他表达式，如果可以放到一行中， 也可以这样使用</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (parameter == <span class="keyword">null</span>) parameter = defaultValue;</span><br></pre></td></tr></table></figure><h1 id="在每个语句或者声明后面添加一个空行"><a href="#在每个语句或者声明后面添加一个空行" class="headerlink" title="在每个语句或者声明后面添加一个空行"></a>在每个语句或者声明后面添加一个空行</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">main() &#123;</span><br><span class="line">  first(statement);</span><br><span class="line">  second(statement);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">anotherDeclaration() &#123; ... &#125;</span><br></pre></td></tr></table></figure><h1 id="在关键字-operator-后面添加一个空格"><a href="#在关键字-operator-后面添加一个空格" class="headerlink" title="在关键字 operator 后面添加一个空格"></a>在关键字 operator 后面添加一个空格</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bool</span> <span class="keyword">operator</span> ==(other) =&gt; ...;</span><br></pre></td></tr></table></figure><h1 id="在二元和三元操作符之间添加空格"><a href="#在二元和三元操作符之间添加空格" class="headerlink" title="在二元和三元操作符之间添加空格"></a>在二元和三元操作符之间添加空格</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">average = (a + b) / <span class="number">2</span>;</span><br><span class="line">largest = a &gt; b ? a : b;</span><br><span class="line"><span class="keyword">if</span> (obj <span class="keyword">is</span>! SomeType) <span class="built_in">print</span>(<span class="string">'not SomeType'</span>);</span><br><span class="line">optional([parameter = defaultValue]) &#123; ... &#125;</span><br></pre></td></tr></table></figure><h1 id="不要-在一元操作符前后添加空格"><a href="#不要-在一元操作符前后添加空格" class="headerlink" title="不要 在一元操作符前后添加空格"></a>不要 在一元操作符前后添加空格</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">!condition</span><br><span class="line">index++</span><br></pre></td></tr></table></figure><h1 id="把开始的大括号-放到同一行上"><a href="#把开始的大括号-放到同一行上" class="headerlink" title="把开始的大括号 ({) 放到同一行上"></a>把开始的大括号 ({) 放到同一行上</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Foo</span> </span>&#123;</span><br><span class="line">  method() &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">      <span class="comment">// ...</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// ...</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="在函数和方法体的-之前添加一个空格"><a href="#在函数和方法体的-之前添加一个空格" class="headerlink" title="在函数和方法体的 { 之前添加一个空格"></a>在函数和方法体的 { 之前添加一个空格</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">getEmptyFn(a) &#123;</span><br><span class="line">  <span class="keyword">return</span> () &#123;&#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="把三元操作符放到多个表达式的下一行开始位置"><a href="#把三元操作符放到多个表达式的下一行开始位置" class="headerlink" title="把三元操作符放到多个表达式的下一行开始位置"></a>把三元操作符放到多个表达式的下一行开始位置</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> someCondition</span><br><span class="line">    ? whenTrue</span><br><span class="line">    : whenFalse;</span><br></pre></td></tr></table></figure><h1 id="把-放到下一行开头当表达式换行的时候"><a href="#把-放到下一行开头当表达式换行的时候" class="headerlink" title="把 . 放到下一行开头当表达式换行的时候"></a>把 . 放到下一行开头当表达式换行的时候</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">someVeryLongVariable.withAVeryLongProperty</span><br><span class="line">    .aMethodOnThatObject();</span><br></pre></td></tr></table></figure><h1 id="把构造函数初始化列表中的每个参数和值都放到同一行"><a href="#把构造函数初始化列表中的每个参数和值都放到同一行" class="headerlink" title="把构造函数初始化列表中的每个参数和值都放到同一行"></a>把构造函数初始化列表中的每个参数和值都放到同一行</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">MyClass()</span><br><span class="line">    : firstField = <span class="string">'some value'</span>,</span><br><span class="line">      secondField = <span class="string">'another'</span>,</span><br><span class="line">      thirdField = <span class="string">'last'</span> &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="当无法在一行写完集合的时候，把每个元素都用集合定义的方式来表达"><a href="#当无法在一行写完集合的时候，把每个元素都用集合定义的方式来表达" class="headerlink" title="当无法在一行写完集合的时候，把每个元素都用集合定义的方式来表达"></a>当无法在一行写完集合的时候，把每个元素都用集合定义的方式来表达</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mapInsideList([</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">'a'</span>: <span class="string">'b'</span>,</span><br><span class="line">    <span class="string">'c'</span>: <span class="string">'d'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">'a'</span>: <span class="string">'b'</span>,</span><br><span class="line">    <span class="string">'c'</span>: <span class="string">'d'</span></span><br><span class="line">  &#125;,</span><br><span class="line">]);</span><br></pre></td></tr></table></figure><h1 id="用两个空格来缩进代码块和集合体"><a href="#用两个空格来缩进代码块和集合体" class="headerlink" title="用两个空格来缩进代码块和集合体"></a>用两个空格来缩进代码块和集合体</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (condition) &#123;</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">'hi'</span>);</span><br><span class="line"></span><br><span class="line">  [</span><br><span class="line">    long,</span><br><span class="line">    list,</span><br><span class="line">    literal</span><br><span class="line">  ];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="缩进-switch-case-两个空格，-case-体四个空格"><a href="#缩进-switch-case-两个空格，-case-体四个空格" class="headerlink" title="缩进 switch case 两个空格， case 体四个空格"></a>缩进 switch case 两个空格， case 体四个空格</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> (fruit) &#123;</span><br><span class="line">  <span class="keyword">case</span> <span class="string">'apple'</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'delish'</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">case</span> <span class="string">'durian'</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'stinky'</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="只少使用两个空格来缩进多行函数级联调用"><a href="#只少使用两个空格来缩进多行函数级联调用" class="headerlink" title="只少使用两个空格来缩进多行函数级联调用"></a>只少使用两个空格来缩进多行函数级联调用</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">buffer</span><br><span class="line">  ..write(<span class="string">'Hello, '</span>)</span><br><span class="line">  ..write(name)</span><br><span class="line">  ..write(<span class="string">'!'</span>);</span><br></pre></td></tr></table></figure><h1 id="使用四个空格来缩进同一行的换行"><a href="#使用四个空格来缩进同一行的换行" class="headerlink" title="使用四个空格来缩进同一行的换行"></a>使用四个空格来缩进同一行的换行</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">someLongObject.aReallyLongMethodName(longArg, anotherLongArg,</span><br><span class="line">    wrappedToNextLine);</span><br><span class="line"></span><br><span class="line">bobLikes() =&gt;</span><br><span class="line">    isDeepFried || (hasPieCrust &amp;&amp; !vegan) || containsBacon;</span><br></pre></td></tr></table></figure><h1 id="当表达式包含多行函数或者-集合声明定义的时候除外"><a href="#当表达式包含多行函数或者-集合声明定义的时候除外" class="headerlink" title="当表达式包含多行函数或者 集合声明定义的时候除外"></a>当表达式包含多行函数或者 集合声明定义的时候除外</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Future.delayed(<span class="keyword">const</span> <span class="built_in">Duration</span>(seconds: <span class="number">1</span>), () &#123;</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">'I am a callback'</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">args.addAll([</span><br><span class="line">  <span class="string">'--mode'</span>,</span><br><span class="line">  <span class="string">'release'</span>,</span><br><span class="line">  <span class="string">'--checked'</span></span><br><span class="line">]);</span><br></pre></td></tr></table></figure><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://www.dartlang.org/guides/language/effective-dart/style" target="_blank" rel="noopener">style</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;代码分格&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerl
      
    
    </summary>
    
      <category term="Dart语言学习" scheme="https://ducafecat.tech/categories/Dart%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="dart" scheme="https://ducafecat.tech/tags/dart/"/>
    
  </entry>
  
  <entry>
    <title>Dart语言学习 - 34 注解 Metadata</title>
    <link href="https://ducafecat.tech/2019/01/22/dart/dart-34-metadata/"/>
    <id>https://ducafecat.tech/2019/01/22/dart/dart-34-metadata/</id>
    <published>2019-01-21T16:15:56.000Z</published>
    <updated>2019-08-01T18:39:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>了解内置注解 <code>deprecated</code> <code>override</code></li><li>自定义注解，并使用反射实现</li></ul><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>Dart 2.1.0</li></ul><h1 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h1><p>官方称之为 <code>元数据</code> , 其实在 <code>java</code> 里就是注解</p><p>简化代码编写，方便阅读，和重用</p><h1 id="内置-deprecated"><a href="#内置-deprecated" class="headerlink" title="内置 deprecated"></a>内置 <code>deprecated</code></h1><p>用来注解 不建议使用、老旧的 成员对象</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Television</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@deprecated</span></span><br><span class="line">  <span class="keyword">void</span> activate() &#123;</span><br><span class="line">    turnOn();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">void</span> turnOn() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'on!'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">main(<span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; args) &#123;</span><br><span class="line">  <span class="keyword">var</span> t = <span class="keyword">new</span> Television();</span><br><span class="line">  t.activate();</span><br><span class="line">  t.turnOn();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="内置-override"><a href="#内置-override" class="headerlink" title="内置 override"></a>内置 <code>override</code></h1><p>表明你的函数是想覆写超类的一个函数</p><p>超类就是被你集成的父类</p><p>下面的代码中父类是 <code>Object</code></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  noSuchMethod(Invocation mirror) &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'没有找到方法'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">main(<span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; args) &#123;</span><br><span class="line">  <span class="built_in">dynamic</span> a = <span class="keyword">new</span> A();</span><br><span class="line">  a.message();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="内置-proxy"><a href="#内置-proxy" class="headerlink" title="内置 proxy"></a>内置 <code>proxy</code></h1><p>注解来避免警告信息</p><p>在 Dart2 中已经被标记为过时老旧</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@proxy</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line">  noSuchMethod(Invocation mirror) &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'没有找到方法'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">main(<span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; args) &#123;</span><br><span class="line">  <span class="built_in">dynamic</span> a = <span class="keyword">new</span> A();</span><br><span class="line">  a.say();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="自定义注解"><a href="#自定义注解" class="headerlink" title="自定义注解"></a>自定义注解</h1><p>使用反射可以在运行时获取元数据信息</p><p>比如服务端的控制器开发</p><p>下面的代码 展示了如何在反射中读取 <code>metadata</code> 信息</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'dart:mirrors'</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Todo</span>(<span class="string">'seth'</span>, <span class="string">'make this do something'</span>)</span><br><span class="line"><span class="keyword">void</span> doSomething() &#123;</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">'do something'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Todo</span> </span>&#123;</span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String</span> who;</span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String</span> what;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> Todo(<span class="keyword">this</span>.who, <span class="keyword">this</span>.what);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">main(<span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; args) &#123;</span><br><span class="line">  currentMirrorSystem().libraries.forEach((uri, lib) &#123;</span><br><span class="line">    <span class="comment">// print('lib: $&#123;uri&#125;');</span></span><br><span class="line">    lib.declarations.forEach((s, decl) &#123;</span><br><span class="line">      <span class="comment">// print('decl: $&#123;s&#125;');</span></span><br><span class="line">      decl.metadata.where((m) =&gt; m.reflectee <span class="keyword">is</span> Todo).forEach((m) &#123;</span><br><span class="line">        <span class="keyword">var</span> anno = m.reflectee <span class="keyword">as</span> Todo;</span><br><span class="line">        <span class="keyword">if</span> (decl <span class="keyword">is</span> MethodMirror) &#123;</span><br><span class="line">          <span class="built_in">print</span>(<span class="string">'Todo(<span class="subst">$&#123;anno.who&#125;</span>, <span class="subst">$&#123;anno.what&#125;</span>)'</span>);</span><br><span class="line">          ((decl <span class="keyword">as</span> MethodMirror).owner <span class="keyword">as</span> LibraryMirror).invoke(s, []);</span><br><span class="line">        &#125;</span><br><span class="line">        ;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><ul><li><a href="https://github.com/ducafecat/dart-learn/tree/master/34-%E5%AA%92%E4%BD%93%E4%BF%A1%E6%81%AF" target="_blank" rel="noopener">34-媒体信息</a></li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://www.dartlang.org/guides/language/language-tour#metadata" target="_blank" rel="noopener">metadata</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;了解内置注解 &lt;code&gt;deprecated&lt;/code&gt; &lt;code&gt;override&lt;/code&gt;&lt;/li
      
    
    </summary>
    
      <category term="Dart语言学习" scheme="https://ducafecat.tech/categories/Dart%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="dart" scheme="https://ducafecat.tech/tags/dart/"/>
    
  </entry>
  
  <entry>
    <title>Dart语言学习 - 33 类型信息 typedef</title>
    <link href="https://ducafecat.tech/2019/01/21/dart/dart-33-typedef/"/>
    <id>https://ducafecat.tech/2019/01/21/dart/dart-33-typedef/</id>
    <published>2019-01-20T16:21:06.000Z</published>
    <updated>2019-08-01T18:39:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>typedef 使用</li></ul><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>Dart 2.1.0</li></ul><h1 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h1><p>typedef 用来保存函数的信息，未来可能会保存类信息。</p><h1 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h1><ul><li>采用 <code>typedef</code></li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义函数类型</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">int</span> Compare(<span class="built_in">Object</span> a, <span class="built_in">Object</span> b);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义排序类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SortedCollection</span> </span>&#123;</span><br><span class="line">  Compare compare;</span><br><span class="line">  <span class="comment">// 构造时传入函数</span></span><br><span class="line">  SortedCollection(<span class="keyword">this</span>.compare);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义排序函数</span></span><br><span class="line"><span class="built_in">int</span> sort(<span class="built_in">Object</span> a, <span class="built_in">Object</span> b) =&gt; <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 程序入口</span></span><br><span class="line">main() &#123;</span><br><span class="line">  <span class="comment">// 实例化传入</span></span><br><span class="line">  SortedCollection coll = <span class="keyword">new</span> SortedCollection(sort);</span><br><span class="line">  <span class="comment">// 类型检查</span></span><br><span class="line">  <span class="keyword">assert</span>(coll.compare <span class="keyword">is</span> <span class="built_in">Function</span>);</span><br><span class="line">  <span class="keyword">assert</span>(coll.compare <span class="keyword">is</span> Compare);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>未采用 <code>typedef</code></li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SortedCollection</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 函数对象</span></span><br><span class="line">  <span class="built_in">Function</span> compare;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 定义函数</span></span><br><span class="line">  SortedCollection(<span class="built_in">int</span> f(<span class="built_in">Object</span> a, <span class="built_in">Object</span> b)) &#123;</span><br><span class="line">    compare = f;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 生命函数</span></span><br><span class="line"><span class="built_in">int</span> sort(<span class="built_in">Object</span> a, <span class="built_in">Object</span> b) =&gt; <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">main() &#123;</span><br><span class="line">  <span class="comment">// 实例化</span></span><br><span class="line">  SortedCollection coll = <span class="keyword">new</span> SortedCollection(sort);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 我们只知道 compare 是一个 Function 类型，</span></span><br><span class="line">  <span class="comment">// 但是不知道具体是何种 Function 类型？</span></span><br><span class="line">  <span class="keyword">assert</span>(coll.compare <span class="keyword">is</span> <span class="built_in">Function</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>区别就是 <code>typedef</code> 编辑器会提示函数信息</p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><ul><li><a href="https://github.com/ducafecat/dart-learn/tree/master/33-%E7%B1%BB%E5%9E%8B%E4%BF%A1%E6%81%AF" target="_blank" rel="noopener">33-类型信息</a></li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://www.dartlang.org/guides/language/language-tour#typedefs" target="_blank" rel="noopener">typedefs</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;typedef 使用&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;h
      
    
    </summary>
    
      <category term="Dart语言学习" scheme="https://ducafecat.tech/categories/Dart%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="dart" scheme="https://ducafecat.tech/tags/dart/"/>
    
  </entry>
  
  <entry>
    <title>Dart语言学习 - 32 线程隔离 isolate</title>
    <link href="https://ducafecat.tech/2019/01/20/dart/dart-32-isolates/"/>
    <id>https://ducafecat.tech/2019/01/20/dart/dart-32-isolates/</id>
    <published>2019-01-19T16:52:55.000Z</published>
    <updated>2019-08-01T18:39:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>了解线程隔离</li></ul><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>Dart 2.1.0</li></ul><h1 id="isolate"><a href="#isolate" class="headerlink" title="isolate"></a>isolate</h1><p>在Dart中实现并发可以用Isolate，它是类似于线程(thread)但不共享内存的独立运行的worker，是一个独立的Dart程序执行环境。其实默认环境就是一个main isolate。</p><p>在Dart语言中，所有的Dart代码都运行在某个isolate中，代码只能使用所属isolate的类和值。不同的isolate可以通过port发送message进行交流。</p><h1 id="示意图"><a href="#示意图" class="headerlink" title="示意图"></a>示意图</h1><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2019-01-21-16-09-42.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li><code>ReceivePort</code> 创建入口点</li><li><code>Isolate.spawn</code> 连接进程</li><li><code>SendPort.send</code> 发送消息</li></ul><h1 id="echo-例子"><a href="#echo-例子" class="headerlink" title="echo 例子"></a>echo 例子</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'dart:async'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'dart:isolate'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 第1步：定义主线程</span></span><br><span class="line">main() <span class="keyword">async</span> &#123;</span><br><span class="line">  <span class="comment">// 第3步：编写回调Port</span></span><br><span class="line">  <span class="keyword">var</span> receivePort = <span class="keyword">new</span> ReceivePort();</span><br><span class="line">  <span class="keyword">await</span> Isolate.spawn(echo, receivePort.sendPort);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 第6步：保存隔离线程回调Port</span></span><br><span class="line">  <span class="keyword">var</span> sendPort = <span class="keyword">await</span> receivePort.first;</span><br><span class="line">  </span><br><span class="line"><span class="comment">// 第7步：发送消息</span></span><br><span class="line">  <span class="keyword">var</span> msg = <span class="keyword">await</span> sendReceive(sendPort, <span class="string">"foo"</span>);</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">'received <span class="subst">$msg</span>'</span>);</span><br><span class="line">  msg = <span class="keyword">await</span> sendReceive(sendPort, <span class="string">"bar"</span>);</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">'received <span class="subst">$msg</span>'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 第2步：定义隔离线程的入口点</span></span><br><span class="line">echo(SendPort sendPort) <span class="keyword">async</span> &#123;</span><br><span class="line">  <span class="comment">// 第4步：编写回调Port</span></span><br><span class="line">  <span class="keyword">var</span> port = <span class="keyword">new</span> ReceivePort();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 第5步：告诉主线程回调入口点</span></span><br><span class="line">  sendPort.send(port.sendPort);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 第8步：循环接收消息</span></span><br><span class="line">  <span class="keyword">await</span> <span class="keyword">for</span> (<span class="keyword">var</span> msg <span class="keyword">in</span> port) &#123;</span><br><span class="line">    <span class="comment">// 数组 msg[0] 是数据</span></span><br><span class="line">    <span class="keyword">var</span> data = msg[<span class="number">0</span>];</span><br><span class="line">    <span class="comment">// 数组 msg[1] 是发送方Port</span></span><br><span class="line">    SendPort replyTo = msg[<span class="number">1</span>];</span><br><span class="line">    <span class="comment">// 回传发送方 数据</span></span><br><span class="line">    replyTo.send(data);</span><br><span class="line">    <span class="comment">// 如果数据时 bar 关闭当前回调</span></span><br><span class="line">    <span class="keyword">if</span> (data == <span class="string">"bar"</span>) port.close();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">主线程 发送消息函数</span></span><br><span class="line"><span class="comment">数组 msg[0] 是数据</span></span><br><span class="line"><span class="comment">数组 msg[1] 是发送方Port</span></span><br><span class="line"><span class="comment">返回 隔离线程 Port</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">Future sendReceive(SendPort port, msg) &#123;</span><br><span class="line">  ReceivePort response = <span class="keyword">new</span> ReceivePort();</span><br><span class="line">  port.send([msg, response.sendPort]);</span><br><span class="line">  <span class="keyword">return</span> response.first;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><ul><li><a href="https://github.com/ducafecat/dart-learn/tree/master/32-%E9%9A%94%E7%A6%BB" target="_blank" rel="noopener">32-隔离</a></li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://www.dartlang.org/guides/language/language-tour#isolates" target="_blank" rel="noopener">isolates</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;了解线程隔离&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;heade
      
    
    </summary>
    
      <category term="Dart语言学习" scheme="https://ducafecat.tech/categories/Dart%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="dart" scheme="https://ducafecat.tech/tags/dart/"/>
    
  </entry>
  
  <entry>
    <title>Dart语言学习 - 31 可调用类 callable</title>
    <link href="https://ducafecat.tech/2019/01/16/dart/dart-31-callable/"/>
    <id>https://ducafecat.tech/2019/01/16/dart/dart-31-callable/</id>
    <published>2019-01-16T03:37:26.000Z</published>
    <updated>2019-08-01T18:39:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>定义并执行可定义类</li></ul><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>Dart 2.1.0</li></ul><h1 id="callable"><a href="#callable" class="headerlink" title="callable"></a>callable</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">main(<span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; args) &#123;</span><br><span class="line">  <span class="keyword">var</span> phone = IOSPhone();</span><br><span class="line">  phone(<span class="string">'911'</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// IOSPhone()('911');</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IOSPhone</span> </span>&#123;</span><br><span class="line">  call(<span class="built_in">String</span> <span class="built_in">num</span>) &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'phone number is <span class="subst">$num</span>'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><ul><li><a href="https://github.com/ducafecat/dart-learn/blob/master/31-%E5%8F%AF%E8%B0%83%E7%94%A8%E7%B1%BB/callable.dart" target="_blank" rel="noopener">可调用类</a></li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://www.dartlang.org/guides/language/language-tour#callable-classes" target="_blank" rel="noopener">callable-classes</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;定义并执行可定义类&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;he
      
    
    </summary>
    
      <category term="Dart语言学习" scheme="https://ducafecat.tech/categories/Dart%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="dart" scheme="https://ducafecat.tech/tags/dart/"/>
    
  </entry>
  
  <entry>
    <title>Dart语言学习 - 30 - 生成器 Generators</title>
    <link href="https://ducafecat.tech/2019/01/15/dart/dart-30-generator/"/>
    <id>https://ducafecat.tech/2019/01/15/dart/dart-30-generator/</id>
    <published>2019-01-15T09:25:58.000Z</published>
    <updated>2019-08-01T18:39:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>同步、异步代码生成器</li></ul><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>Dart 2.1.0</li></ul><h1 id="同步生成器"><a href="#同步生成器" class="headerlink" title="同步生成器"></a>同步生成器</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">main(<span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; args) &#123;</span><br><span class="line">  <span class="keyword">var</span> it = naturalsTo(<span class="number">5</span>).iterator;</span><br><span class="line">  <span class="keyword">while</span>(it.moveNext()) &#123;</span><br><span class="line">    <span class="built_in">print</span>(it.current);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Iterable</span>&lt;<span class="built_in">int</span>&gt; naturalsTo(<span class="built_in">int</span> n) <span class="keyword">sync</span>* &#123;</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">'start'</span>);</span><br><span class="line">  <span class="built_in">int</span> k = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> (k &lt; n) &#123;</span><br><span class="line">    <span class="keyword">yield</span> k++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">'end'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>yield 会等待 <code>moveNext</code> 指令</p></blockquote><h1 id="异步生成器"><a href="#异步生成器" class="headerlink" title="异步生成器"></a>异步生成器</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'dart:async'</span>;</span><br><span class="line"></span><br><span class="line">main(<span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; args) &#123;</span><br><span class="line">  <span class="comment">// 流监听</span></span><br><span class="line">  <span class="comment">// asynchronousNaturalsTo(5).listen((onData) &#123;</span></span><br><span class="line">  <span class="comment">//   print(onData);</span></span><br><span class="line">  <span class="comment">// &#125;);</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 流监听 StreamSubscription 对象</span></span><br><span class="line">  StreamSubscription subscription = asynchronousNaturalsTo(<span class="number">5</span>).listen(<span class="keyword">null</span>);</span><br><span class="line">  subscription.onData((value) &#123;</span><br><span class="line">    <span class="built_in">print</span>(value);</span><br><span class="line">    <span class="comment">// subscription.pause();</span></span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Stream&lt;<span class="built_in">int</span>&gt; asynchronousNaturalsTo(<span class="built_in">int</span> n) <span class="keyword">async</span>* &#123;</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">'start'</span>);</span><br><span class="line">  <span class="built_in">int</span> k = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> (k &lt; n) &#123;</span><br><span class="line">    <span class="keyword">yield</span> k++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">'end'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>以流的方式一次性推送</p><p><code>StreamSubscription</code> 对象进行流监听控制</p></blockquote><h1 id="递归生成器"><a href="#递归生成器" class="headerlink" title="递归生成器"></a>递归生成器</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">main(<span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; args) &#123;</span><br><span class="line">  <span class="keyword">var</span> it = naturalsDownFrom(<span class="number">5</span>).iterator;</span><br><span class="line">  <span class="keyword">while</span>(it.moveNext()) &#123;</span><br><span class="line">    <span class="built_in">print</span>(it.current);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Iterable</span>&lt;<span class="built_in">int</span>&gt; naturalsDownFrom(<span class="built_in">int</span> n) <span class="keyword">sync</span>* &#123;</span><br><span class="line">  <span class="keyword">if</span> ( n &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">yield</span> n;</span><br><span class="line">    <span class="keyword">yield</span>* naturalsDownFrom(n<span class="number">-1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><code>yield*</code> 以指针的方式传递递归对象，而不是整个同步对象</p></blockquote><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><ul><li><a href="https://github.com/ducafecat/dart-learn/tree/master/30-%E7%94%9F%E6%88%90%E5%99%A8" target="_blank" rel="noopener">生成器 generators</a></li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://www.dartlang.org/guides/language/language-tour#generators" target="_blank" rel="noopener">generators</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;同步、异步代码生成器&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;h
      
    
    </summary>
    
      <category term="Dart语言学习" scheme="https://ducafecat.tech/categories/Dart%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="dart" scheme="https://ducafecat.tech/tags/dart/"/>
    
  </entry>
  
  <entry>
    <title>Dart语言学习 - 29 异步 async</title>
    <link href="https://ducafecat.tech/2018/12/05/dart/dart-29-async/"/>
    <id>https://ducafecat.tech/2018/12/05/dart/dart-29-async/</id>
    <published>2018-12-05T07:51:09.000Z</published>
    <updated>2019-08-01T18:39:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>调用异步 等待、递归</li><li>异步返回值</li></ul><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>Dart 2.1.0</li></ul><h1 id="调用异步-回调"><a href="#调用异步-回调" class="headerlink" title="调用异步 回调"></a>调用异步 回调</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:dio/dio.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main() &#123;</span><br><span class="line">  Dio dio = <span class="keyword">new</span> Dio();</span><br><span class="line">  dio.<span class="keyword">get</span>(<span class="string">"https://www.baidu.com"</span>).then((response) &#123;</span><br><span class="line">    <span class="built_in">print</span>(response.data);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><code>then</code> 的方式异步回调</p></blockquote><h1 id="调用异步-等待"><a href="#调用异步-等待" class="headerlink" title="调用异步 等待"></a>调用异步 等待</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:dio/dio.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main() <span class="keyword">async</span> &#123;</span><br><span class="line">  Dio dio = <span class="keyword">new</span> Dio();</span><br><span class="line">  Response&lt;<span class="built_in">String</span>&gt; response = <span class="keyword">await</span> dio.<span class="keyword">get</span>(<span class="string">"https://www.baidu.com"</span>);</span><br><span class="line">  <span class="built_in">print</span>(response.data);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><code>async</code> 写在函数定义<br><code>await</code> 写在异步请求头</p></blockquote><h1 id="异步返回值"><a href="#异步返回值" class="headerlink" title="异步返回值"></a>异步返回值</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:dio/dio.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main() <span class="keyword">async</span> &#123;</span><br><span class="line">  <span class="keyword">var</span> content = <span class="keyword">await</span> getUrl(<span class="string">'https://www.baidu.com'</span>);</span><br><span class="line">  <span class="built_in">print</span>(content);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Future&lt;<span class="built_in">String</span>&gt; getUrl(<span class="built_in">String</span> url) <span class="keyword">async</span> &#123;</span><br><span class="line">  Dio dio = <span class="keyword">new</span> Dio();</span><br><span class="line">  Response&lt;<span class="built_in">String</span>&gt; response = <span class="keyword">await</span> dio.<span class="keyword">get</span>(url);</span><br><span class="line">  <span class="keyword">return</span> response.data;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>定义 <code>Future&lt;T&gt;</code> 返回对象</p></blockquote><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><ul><li><a href="https://github.com/ducafecat/dart-learn/tree/master/29-%E5%BC%82%E6%AD%A5" target="_blank" rel="noopener">异步</a></li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://www.dartlang.org/guides/language/language-tour" target="_blank" rel="noopener">language-tour</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;调用异步 等待、递归&lt;/li&gt;
&lt;li&gt;异步返回值&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;环境&quot;&gt;&lt;a href
      
    
    </summary>
    
      <category term="Dart语言学习" scheme="https://ducafecat.tech/categories/Dart%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="dart" scheme="https://ducafecat.tech/tags/dart/"/>
    
  </entry>
  
  <entry>
    <title>Dart语言学习 - 28 泛型</title>
    <link href="https://ducafecat.tech/2018/12/05/dart/dart-28-generic/"/>
    <id>https://ducafecat.tech/2018/12/05/dart/dart-28-generic/</id>
    <published>2018-12-05T03:30:26.000Z</published>
    <updated>2019-08-01T18:39:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>使用泛型</li><li>定义泛型</li><li>限制泛型</li></ul><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>Dart 2.1.0</li></ul><h1 id="泛型使用"><a href="#泛型使用" class="headerlink" title="泛型使用"></a>泛型使用</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">main(<span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; args) &#123;</span><br><span class="line">  <span class="keyword">var</span> l = <span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt;();</span><br><span class="line">  l.add(<span class="string">'aaa'</span>);</span><br><span class="line">  l.add(<span class="string">'bbb'</span>);</span><br><span class="line">  l.add(<span class="string">'ccc'</span>);</span><br><span class="line">  <span class="built_in">print</span>(l);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> m = <span class="built_in">Map</span>&lt;<span class="built_in">int</span>, <span class="built_in">String</span>&gt;();</span><br><span class="line">  m[<span class="number">1</span>] = <span class="string">'aaaa'</span>;</span><br><span class="line">  m[<span class="number">2</span>] = <span class="string">'bbbb'</span>;</span><br><span class="line">  m[<span class="number">3</span>] = <span class="string">'cccc'</span>;</span><br><span class="line">  <span class="built_in">print</span>(m);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>很多的容器对象，在创建对象时都可以定义泛型类型。</p></blockquote><h1 id="泛型函数"><a href="#泛型函数" class="headerlink" title="泛型函数"></a>泛型函数</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">main(<span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; args) &#123;</span><br><span class="line">  <span class="keyword">var</span> key = addCache(<span class="string">'a00001'</span>, <span class="string">'val.....'</span>);</span><br><span class="line">  <span class="built_in">print</span>(key);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">K addCache&lt;K, V&gt;(K key, V val) &#123;</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">'<span class="subst">$&#123;key&#125;</span> <span class="subst">$&#123;val&#125;</span>'</span>);</span><br><span class="line">  <span class="keyword">return</span> key;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>泛型可以用在一个函数的定义</p></blockquote><h1 id="构造函数泛型"><a href="#构造函数泛型" class="headerlink" title="构造函数泛型"></a>构造函数泛型</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">main(<span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; args) &#123;</span><br><span class="line">  <span class="keyword">var</span> p = Phone&lt;<span class="built_in">String</span>&gt;(<span class="string">'abc00000011111'</span>);</span><br><span class="line">  <span class="built_in">print</span>(p.mobileNumber);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Phone</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line">  <span class="keyword">final</span> T mobileNumber;</span><br><span class="line">  Phone(<span class="keyword">this</span>.mobileNumber);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>这是大多数情况下使用泛型的场景，在一个类的构造函数中</p></blockquote><h1 id="泛型限制"><a href="#泛型限制" class="headerlink" title="泛型限制"></a>泛型限制</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">main(<span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; args) &#123;</span><br><span class="line">  <span class="keyword">var</span> ad = AndroidPhone();</span><br><span class="line">  <span class="keyword">var</span> p = Phone&lt;AndroidPhone&gt;(ad);</span><br><span class="line">  p.mobile.startup();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Phone</span>&lt;<span class="title">T</span> <span class="keyword">extends</span> <span class="title">AndroidPhone</span> &gt; </span>&#123;</span><br><span class="line">  <span class="keyword">final</span> T mobile;</span><br><span class="line">  Phone(<span class="keyword">this</span>.mobile);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AndroidPhone</span> </span>&#123;</span><br><span class="line">  <span class="keyword">void</span> startup() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'Android Phone 开机'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>通过 extends 关键字 可以限定你可以泛型使用的类型</p></blockquote><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><ul><li><a href="https://github.com/ducafecat/dart-learn/tree/master/28-%E6%B3%9B%E5%9E%8B" target="_blank" rel="noopener">泛型</a></li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://www.dartlang.org/guides/language/language-tour" target="_blank" rel="noopener">language-tour</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;使用泛型&lt;/li&gt;
&lt;li&gt;定义泛型&lt;/li&gt;
&lt;li&gt;限制泛型&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;环境&quot;&gt;
      
    
    </summary>
    
      <category term="Dart语言学习" scheme="https://ducafecat.tech/categories/Dart%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="dart" scheme="https://ducafecat.tech/tags/dart/"/>
    
  </entry>
  
  <entry>
    <title>Dart语言学习 - 27 库</title>
    <link href="https://ducafecat.tech/2018/12/05/dart/dart-27-library/"/>
    <id>https://ducafecat.tech/2018/12/05/dart/dart-27-library/</id>
    <published>2018-12-05T02:00:54.000Z</published>
    <updated>2019-09-16T09:29:30.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>核心库</li><li>外部库</li><li>导入模块</li></ul><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>Dart 2.1.0</li></ul><h1 id="导入核心库"><a href="#导入核心库" class="headerlink" title="导入核心库"></a>导入核心库</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'dart:io'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main() &#123;</span><br><span class="line">  <span class="keyword">var</span> f = <span class="keyword">new</span> File(<span class="string">'README.md'</span>);</span><br><span class="line">  <span class="keyword">var</span> content = f.readAsStringSync();</span><br><span class="line">  <span class="built_in">print</span>(content);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="导入第三方库"><a href="#导入第三方库" class="headerlink" title="导入第三方库"></a>导入第三方库</h1><ul><li>编写 <code>pubspec.yaml</code></li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">ducafecat</span></span><br><span class="line"><span class="attr">dependencies:</span></span><br><span class="line">  <span class="attr">dio:</span> <span class="number">1.0</span><span class="number">.9</span></span><br></pre></td></tr></table></figure><ul><li>程序调用</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:dio/dio.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main() <span class="keyword">async</span> &#123;</span><br><span class="line">  Dio dio = <span class="keyword">new</span> Dio();</span><br><span class="line">  Response&lt;<span class="built_in">String</span>&gt; response = <span class="keyword">await</span> dio.<span class="keyword">get</span>(<span class="string">"https://www.baidu.com"</span>);</span><br><span class="line">  <span class="built_in">print</span>(response.data);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="导入文件"><a href="#导入文件" class="headerlink" title="导入文件"></a>导入文件</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'./phone.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main() &#123;</span><br><span class="line">  <span class="keyword">var</span> xm = Phone(<span class="string">'android'</span>);</span><br><span class="line">  xm.startup();</span><br><span class="line">  xm.shutdown();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="前缀"><a href="#前缀" class="headerlink" title="前缀"></a>前缀</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'./phone.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'./phone1.dart'</span> <span class="keyword">as</span> pp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main() &#123;</span><br><span class="line">  <span class="keyword">var</span> xm = Phone(<span class="string">'android'</span>);</span><br><span class="line">  xm.startup();</span><br><span class="line">  xm.shutdown();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> xm1 = pp.Phone(<span class="string">'android'</span>);</span><br><span class="line">  xm1.startup();</span><br><span class="line">  xm1.shutdown();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="筛选包内容"><a href="#筛选包内容" class="headerlink" title="筛选包内容"></a>筛选包内容</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// import './phone.dart' hide AndroidPhone;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'./phone.dart'</span> <span class="keyword">show</span> IOSPhone;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main() &#123;</span><br><span class="line">  <span class="keyword">var</span> xm = IOSPhone();</span><br><span class="line">  xm.startup();</span><br><span class="line">  xm.shutdown();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><code>hide</code> 筛掉某几个包<br><code>show</code> 只使用某几个包</p></blockquote><h1 id="延迟载入"><a href="#延迟载入" class="headerlink" title="延迟载入"></a>延迟载入</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'./phone.dart'</span> <span class="keyword">deferred</span> <span class="keyword">as</span> pp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main() <span class="keyword">async</span> &#123;</span><br><span class="line">  <span class="keyword">var</span> run = <span class="keyword">true</span>;</span><br><span class="line">  <span class="keyword">if</span> (run) &#123;</span><br><span class="line">    <span class="keyword">await</span> pp.loadLibrary();</span><br><span class="line">    <span class="keyword">var</span> xm = pp.Phone(<span class="string">'android'</span>);</span><br><span class="line">    xm.startup();</span><br><span class="line">    xm.shutdown();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><code>loadLibrary()</code> 方式在需要的时候载入包<br>可提高程序启动速度<br>用在不常使用的功能<br>用在载入时间过长的包</p></blockquote><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><ul><li><a href="https://github.com/ducafecat/dart-learn/tree/master/27-%E5%BA%93" target="_blank" rel="noopener">库</a></li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://www.dartlang.org/guides/language/language-tour" target="_blank" rel="noopener">language-tour</a></li><li><a href="https://pub.dartlang.org/" target="_blank" rel="noopener">包管理平台</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;核心库&lt;/li&gt;
&lt;li&gt;外部库&lt;/li&gt;
&lt;li&gt;导入模块&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;环境&quot;&gt;&lt;a
      
    
    </summary>
    
      <category term="Dart语言学习" scheme="https://ducafecat.tech/categories/Dart%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="dart" scheme="https://ducafecat.tech/tags/dart/"/>
    
  </entry>
  
  <entry>
    <title>Dart语言学习 - 26 工厂函数</title>
    <link href="https://ducafecat.tech/2018/12/04/dart/dart-26-factory/"/>
    <id>https://ducafecat.tech/2018/12/04/dart/dart-26-factory/</id>
    <published>2018-12-04T06:33:01.000Z</published>
    <updated>2019-08-01T18:39:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>工厂函数</li><li>工厂构造函数</li></ul><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>Dart 2.1.0</li></ul><h1 id="工厂函数"><a href="#工厂函数" class="headerlink" title="工厂函数"></a>工厂函数</h1><p>简化类型实例化</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> main() &#123;</span><br><span class="line">  <span class="keyword">var</span> xm = phoneFactory(<span class="string">'ios'</span>);</span><br><span class="line">  xm.startup();</span><br><span class="line">  xm.shutdown();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Phone</span> </span>&#123;</span><br><span class="line">  <span class="keyword">void</span> startup() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'开机'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">void</span> shutdown() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'关机'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Phone phoneFactory(<span class="built_in">String</span> name) &#123;</span><br><span class="line">  <span class="keyword">switch</span> (name) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'android'</span>:</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> AndroidPhone();</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> IOSPhone();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AndroidPhone</span> <span class="keyword">extends</span> <span class="title">Phone</span> </span>&#123;</span><br><span class="line">  <span class="keyword">void</span> startup() &#123;</span><br><span class="line">    <span class="keyword">super</span>.startup();</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'Android Phone 开机'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IOSPhone</span> <span class="keyword">extends</span> <span class="title">Phone</span> </span>&#123;</span><br><span class="line">  <span class="keyword">void</span> startup() &#123;</span><br><span class="line">    <span class="keyword">super</span>.startup();</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'IOS Phone 开机'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="工厂构造函数"><a href="#工厂构造函数" class="headerlink" title="工厂构造函数"></a>工厂构造函数</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> main() &#123;</span><br><span class="line">  <span class="keyword">var</span> xm = Phone(<span class="string">'android'</span>);</span><br><span class="line">  xm.startup();</span><br><span class="line">  xm.shutdown();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Phone</span> </span>&#123;</span><br><span class="line">  <span class="keyword">factory</span> Phone(<span class="built_in">String</span> name) &#123;</span><br><span class="line">    <span class="keyword">switch</span> (name) &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">'android'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> AndroidPhone();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> IOSPhone();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">void</span> startup();</span><br><span class="line">  <span class="keyword">void</span> shutdown();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AndroidPhone</span> <span class="keyword">implements</span> <span class="title">Phone</span> </span>&#123;</span><br><span class="line">  <span class="keyword">void</span> startup() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'Android Phone 开机'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">void</span> shutdown() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'Android 关机'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IOSPhone</span> <span class="keyword">implements</span> <span class="title">Phone</span> </span>&#123;</span><br><span class="line">  <span class="keyword">void</span> startup() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'IOS Phone 开机'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">void</span> shutdown() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'IOS 关机'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><ul><li><a href="https://github.com/ducafecat/dart-learn/tree/master/26-%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F" target="_blank" rel="noopener">factory</a></li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://www.dartlang.org/guides/language/language-tour" target="_blank" rel="noopener">language-tour</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;工厂函数&lt;/li&gt;
&lt;li&gt;工厂构造函数&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境
      
    
    </summary>
    
      <category term="Dart语言学习" scheme="https://ducafecat.tech/categories/Dart%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="dart" scheme="https://ducafecat.tech/tags/dart/"/>
    
  </entry>
  
  <entry>
    <title>Dart语言学习 - 25 多继承类 mixin</title>
    <link href="https://ducafecat.tech/2018/12/04/dart/dart-25-mixin/"/>
    <id>https://ducafecat.tech/2018/12/04/dart/dart-25-mixin/</id>
    <published>2018-12-04T03:26:18.000Z</published>
    <updated>2019-08-01T18:39:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>多继承类的实现方式</li><li>函数重名冲突</li></ul><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>Dart 2.1.0</li></ul><h1 id="类多继承"><a href="#类多继承" class="headerlink" title="类多继承"></a>类多继承</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> main() &#123;</span><br><span class="line">  <span class="keyword">var</span> xm = Xiaomi();</span><br><span class="line">  xm.startup();</span><br><span class="line">  xm.shutdown();</span><br><span class="line">  xm.call();</span><br><span class="line">  xm.sms();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Phone</span> </span>&#123;</span><br><span class="line">  <span class="keyword">void</span> startup() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'开机'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">void</span> shutdown() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'关机'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AndroidPhone</span> <span class="keyword">extends</span> <span class="title">Phone</span> </span>&#123;</span><br><span class="line">  <span class="keyword">void</span> startup() &#123;</span><br><span class="line">    <span class="keyword">super</span>.startup();</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'AndroidPhone 开机'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AndroidSystem</span> </span>&#123;</span><br><span class="line">  <span class="keyword">void</span> call() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'android call'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Weixin</span> </span>&#123;</span><br><span class="line">  <span class="keyword">void</span> sms() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'weixin sms'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Xiaomi</span> <span class="keyword">extends</span> <span class="title">AndroidPhone</span> <span class="title">with</span> <span class="title">AndroidSystem</span>, <span class="title">Weixin</span> </span>&#123;</span><br><span class="line">  <span class="keyword">void</span> startup() &#123;</span><br><span class="line">    <span class="keyword">super</span>.startup();</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'AndroidPhone 开机'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>采用 <code>with ... , .... , ...</code> 方式 mixin 入多个类功能</p></blockquote><h1 id="函数重名冲突"><a href="#函数重名冲突" class="headerlink" title="函数重名冲突"></a>函数重名冲突</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> main() &#123;</span><br><span class="line">  <span class="keyword">var</span> xm = Xiaomi();</span><br><span class="line">  xm.startup();</span><br><span class="line">  xm.shutdown();</span><br><span class="line">  xm.sms();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Phone</span> </span>&#123;</span><br><span class="line">  <span class="keyword">void</span> startup() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'开机'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">void</span> shutdown() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'关机'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AndroidPhone</span> <span class="keyword">extends</span> <span class="title">Phone</span> </span>&#123;</span><br><span class="line">  <span class="keyword">void</span> startup() &#123;</span><br><span class="line">    <span class="keyword">super</span>.startup();</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'AndroidPhone 开机'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AndroidSystem</span> </span>&#123;</span><br><span class="line">  <span class="keyword">void</span> call() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'android call'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Weixin</span> </span>&#123;</span><br><span class="line">  <span class="keyword">void</span> sms() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'weixin sms'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">QQ</span> </span>&#123;</span><br><span class="line">  <span class="keyword">void</span> sms() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'qq sms'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Xiaomi</span> <span class="keyword">extends</span> <span class="title">AndroidPhone</span> <span class="title">with</span> <span class="title">AndroidSystem</span>, <span class="title">Weixin</span>, <span class="title">QQ</span> </span>&#123;</span><br><span class="line">  <span class="keyword">void</span> startup() &#123;</span><br><span class="line">    <span class="keyword">super</span>.startup();</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'AndroidPhone 开机'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>遇到相同功能的函数，最后载入的会覆盖之前的函数定义</p></blockquote><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><ul><li><a href="https://github.com/ducafecat/dart-learn/tree/master/25-%E5%A4%9A%E7%B1%BB%E7%BB%A7%E6%89%BF" target="_blank" rel="noopener">mixin</a></li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://www.dartlang.org/guides/language/language-tour" target="_blank" rel="noopener">language-tour</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;多继承类的实现方式&lt;/li&gt;
&lt;li&gt;函数重名冲突&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;环境&quot;&gt;&lt;a href
      
    
    </summary>
    
      <category term="Dart语言学习" scheme="https://ducafecat.tech/categories/Dart%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="dart" scheme="https://ducafecat.tech/tags/dart/"/>
    
  </entry>
  
  <entry>
    <title>Dart语言学习 - 24 extends 继承</title>
    <link href="https://ducafecat.tech/2018/11/28/dart/dart-24-extends/"/>
    <id>https://ducafecat.tech/2018/11/28/dart/dart-24-extends/</id>
    <published>2018-11-28T09:45:11.000Z</published>
    <updated>2019-08-01T18:39:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>实现继承</li><li>继承抽象类的问题</li><li>不可多继承</li><li>父类调用</li><li>调用父类构造</li><li>重写超类函数</li></ul><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>Dart 2.0.0</li></ul><h1 id="实现继承"><a href="#实现继承" class="headerlink" title="实现继承"></a>实现继承</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> main() &#123;</span><br><span class="line">  <span class="keyword">var</span> p = AndroidPhone();</span><br><span class="line">  p.startup();</span><br><span class="line">  p.shutdown();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Phone</span> </span>&#123;</span><br><span class="line">  <span class="keyword">void</span> startup() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'开机'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">void</span> shutdown() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'关机'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AndroidPhone</span> <span class="keyword">extends</span> <span class="title">Phone</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="继承抽象类的问题"><a href="#继承抽象类的问题" class="headerlink" title="继承抽象类的问题"></a>继承抽象类的问题</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> main() &#123;</span><br><span class="line">  <span class="keyword">var</span> p = AndroidPhone();</span><br><span class="line">  p.startup();</span><br><span class="line">  p.shutdown();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Phone</span> </span>&#123;</span><br><span class="line">  <span class="keyword">void</span> startup();</span><br><span class="line">  <span class="keyword">void</span> shutdown();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AndroidPhone</span> <span class="keyword">extends</span> <span class="title">Phone</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>抽象类中只定义抽象函数，实例化访问会报错</p></blockquote><h1 id="父类调用"><a href="#父类调用" class="headerlink" title="父类调用"></a>父类调用</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> main() &#123;</span><br><span class="line">  <span class="keyword">var</span> p = AndroidPhone();</span><br><span class="line">  p.startup();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Phone</span> </span>&#123;</span><br><span class="line">  <span class="keyword">void</span> startup() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'开机'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">void</span> shutdown() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'关机'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AndroidPhone</span> <span class="keyword">extends</span> <span class="title">Phone</span> </span>&#123;</span><br><span class="line">  <span class="keyword">void</span> startup() &#123;</span><br><span class="line">    <span class="keyword">super</span>.startup();</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'AndroidPhone 开机'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>super 对象可以访问父类</p></blockquote><h1 id="调用父类构造"><a href="#调用父类构造" class="headerlink" title="调用父类构造"></a>调用父类构造</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> main() &#123;</span><br><span class="line">  <span class="keyword">var</span> p = AndroidPhone(<span class="number">12345678</span>);</span><br><span class="line">  p.showNumber();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Mobile</span> </span>&#123;</span><br><span class="line">  <span class="built_in">int</span> number;</span><br><span class="line">  <span class="built_in">int</span> signal;</span><br><span class="line">  Mobile(<span class="keyword">this</span>.number);</span><br><span class="line">  <span class="keyword">void</span> showNumber() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'010-<span class="subst">$&#123;number&#125;</span>'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AndroidPhone</span> <span class="keyword">extends</span> <span class="title">Mobile</span> </span>&#123;</span><br><span class="line">  AndroidPhone(<span class="built_in">int</span> number) : <span class="keyword">super</span>(number);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>可调用父类的 构造函数</p></blockquote><h1 id="重写超类函数"><a href="#重写超类函数" class="headerlink" title="重写超类函数"></a>重写超类函数</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> main() &#123;</span><br><span class="line">  <span class="built_in">dynamic</span> p = AndroidPhone(<span class="number">12345678</span>);</span><br><span class="line">  p.showNumber111();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Mobile</span> </span>&#123;</span><br><span class="line">  <span class="built_in">int</span> number;</span><br><span class="line">  <span class="built_in">int</span> signal;</span><br><span class="line">  Mobile(<span class="keyword">this</span>.number);</span><br><span class="line">  <span class="keyword">void</span> showNumber() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'010-<span class="subst">$&#123;number&#125;</span>'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AndroidPhone</span> <span class="keyword">extends</span> <span class="title">Mobile</span> </span>&#123;</span><br><span class="line">  AndroidPhone(<span class="built_in">int</span> number) : <span class="keyword">super</span>(number);</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="keyword">void</span> noSuchMethod(Invocation mirror) &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'被重写 noSuchMethod'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>在重写的函数上加修饰符 <code>@override</code></p></blockquote><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><ul><li><a href="https://github.com/ducafecat/dart-learn/tree/master/24-%E7%BB%A7%E6%89%BF" target="_blank" rel="noopener">extends</a></li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://www.dartlang.org/guides/language/language-tour" target="_blank" rel="noopener">language-tour</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;实现继承&lt;/li&gt;
&lt;li&gt;继承抽象类的问题&lt;/li&gt;
&lt;li&gt;不可多继承&lt;/li&gt;
&lt;li&gt;父类调用&lt;/li&gt;
      
    
    </summary>
    
      <category term="Dart语言学习" scheme="https://ducafecat.tech/categories/Dart%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="dart" scheme="https://ducafecat.tech/tags/dart/"/>
    
  </entry>
  
  <entry>
    <title>Dart语言学习 - 23 interface 接口</title>
    <link href="https://ducafecat.tech/2018/11/28/dart/dart-23-interface/"/>
    <id>https://ducafecat.tech/2018/11/28/dart/dart-23-interface/</id>
    <published>2018-11-28T09:23:46.000Z</published>
    <updated>2019-08-01T18:39:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>实现接口</li><li>implements 多接口</li></ul><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>Dart 2.0.0</li></ul><h1 id="Dart-中没有-interface-关键字"><a href="#Dart-中没有-interface-关键字" class="headerlink" title="Dart 中没有 interface 关键字"></a><em>Dart 中没有 interface 关键字</em></h1><h1 id="实现接口"><a href="#实现接口" class="headerlink" title="实现接口"></a>实现接口</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> main() &#123;</span><br><span class="line">  <span class="keyword">var</span> p = AndroidPhone();</span><br><span class="line">  p.startup();</span><br><span class="line">  p.shutdown();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">IPhone</span> </span>&#123;</span><br><span class="line">  <span class="keyword">void</span> startup();</span><br><span class="line">  <span class="keyword">void</span> shutdown();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AndroidPhone</span> <span class="keyword">implements</span> <span class="title">IPhone</span> </span>&#123;</span><br><span class="line">  <span class="keyword">void</span> startup() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'AndroidPhone 开机'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">void</span> shutdown() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'AndroidPhone 关机'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>接口用途的抽象类 请用字母 <code>I</code> 开头 , 如 <code>IPhone</code></p></blockquote><h1 id="从一个普通类履行接口"><a href="#从一个普通类履行接口" class="headerlink" title="从一个普通类履行接口"></a>从一个普通类履行接口</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> main() &#123;</span><br><span class="line">  <span class="keyword">var</span> p = AndroidPhone();</span><br><span class="line">  p.startup();</span><br><span class="line">  p.shutdown();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Phone</span> </span>&#123;</span><br><span class="line">  <span class="keyword">void</span> startup() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'开机'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">void</span> shutdown() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'关机'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AndroidPhone</span> <span class="keyword">implements</span> <span class="title">Phone</span> </span>&#123;</span><br><span class="line">  <span class="keyword">void</span> startup() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'AndroidPhone 开机'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">void</span> shutdown() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'AndroidPhone 关机'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Dart 可以从一个普通的类履行接口</p></blockquote><h1 id="履行多接口"><a href="#履行多接口" class="headerlink" title="履行多接口"></a>履行多接口</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> main() &#123;</span><br><span class="line">  <span class="keyword">var</span> p = AndroidPhone();</span><br><span class="line">  p.startup();</span><br><span class="line">  p.shutdown();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Phone</span> </span>&#123;</span><br><span class="line">  <span class="keyword">void</span> startup() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'开机'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">void</span> shutdown() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'关机'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Mobile</span> </span>&#123;</span><br><span class="line">  <span class="built_in">int</span> signal;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AndroidPhone</span> <span class="keyword">implements</span> <span class="title">Phone</span>, <span class="title">Mobile</span> </span>&#123;</span><br><span class="line">  <span class="built_in">int</span> signal;</span><br><span class="line">  <span class="keyword">void</span> startup() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'AndroidPhone 开机'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">void</span> shutdown() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'AndroidPhone 关机'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Dart 可以履行多个接口</p></blockquote><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><ul><li><a href="https://github.com/ducafecat/dart-learn/blob/master/19-%E7%B1%BB/interface.dart" target="_blank" rel="noopener">interface</a></li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://www.dartlang.org/guides/language/language-tour" target="_blank" rel="noopener">language-tour</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;实现接口&lt;/li&gt;
&lt;li&gt;implements 多接口&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;环境&quot;&gt;&lt;a h
      
    
    </summary>
    
      <category term="Dart语言学习" scheme="https://ducafecat.tech/categories/Dart%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="dart" scheme="https://ducafecat.tech/tags/dart/"/>
    
  </entry>
  
  <entry>
    <title>Dart语言学习 - 22 abstract 抽象</title>
    <link href="https://ducafecat.tech/2018/11/28/dart/dart-22-abstract/"/>
    <id>https://ducafecat.tech/2018/11/28/dart/dart-22-abstract/</id>
    <published>2018-11-28T08:17:42.000Z</published>
    <updated>2019-08-01T18:39:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>抽象 类、函数</li><li>接口方式使用</li><li>继承方式使用</li></ul><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>Dart 2.0.0</li></ul><h1 id="abstract-类、函数、成员"><a href="#abstract-类、函数、成员" class="headerlink" title="abstract 类、函数、成员"></a>abstract 类、函数、成员</h1><ul><li>普通类前加 abstract</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">const</span> <span class="built_in">String</span> name = <span class="string">'ducafecat'</span>;</span><br><span class="line">  <span class="keyword">void</span> printName()&#123;</span><br><span class="line">    <span class="built_in">print</span>(name);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="不能直接-new-实例化"><a href="#不能直接-new-实例化" class="headerlink" title="不能直接 new 实例化"></a>不能直接 new 实例化</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> p = Person();</span><br><span class="line">p.printName();</span><br></pre></td></tr></table></figure><blockquote><p><code>Dart 2</code> 开始 <code>new</code> 可以不写，提高阅读体验</p></blockquote><h1 id="继承方式使用"><a href="#继承方式使用" class="headerlink" title="继承方式使用"></a>继承方式使用</h1><p>定义</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Teacher</span> <span class="keyword">extends</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实例</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> user = Teacher();</span><br><span class="line">user.printName();</span><br></pre></td></tr></table></figure><h1 id="接口方式使用"><a href="#接口方式使用" class="headerlink" title="接口方式使用"></a>接口方式使用</h1><p>定义</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">const</span> <span class="built_in">String</span> name = <span class="string">''</span>;</span><br><span class="line">  <span class="keyword">void</span> printName();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">implements</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">  <span class="built_in">String</span> name = <span class="string">'this is student'</span>;</span><br><span class="line">  <span class="keyword">void</span> printName() &#123;</span><br><span class="line">    <span class="built_in">print</span>(name);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实例</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> user = Student();</span><br><span class="line">user.printName();</span><br></pre></td></tr></table></figure><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><ul><li><a href="https://github.com/ducafecat/dart-learn/blob/master/19-%E7%B1%BB/abstract.dart" target="_blank" rel="noopener">abstract</a></li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://www.dartlang.org/guides/language/language-tour" target="_blank" rel="noopener">language-tour</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;抽象 类、函数&lt;/li&gt;
&lt;li&gt;接口方式使用&lt;/li&gt;
&lt;li&gt;继承方式使用&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 i
      
    
    </summary>
    
      <category term="Dart语言学习" scheme="https://ducafecat.tech/categories/Dart%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="dart" scheme="https://ducafecat.tech/tags/dart/"/>
    
  </entry>
  
  <entry>
    <title>Dart语言学习 - 21 静态成员</title>
    <link href="https://ducafecat.tech/2018/11/17/dart/dart-21-static/"/>
    <id>https://ducafecat.tech/2018/11/17/dart/dart-21-static/</id>
    <published>2018-11-17T08:02:07.000Z</published>
    <updated>2019-08-01T18:39:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>静态变量</li><li>静态方法</li></ul><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>Dart 2.0.0</li></ul><h1 id="静态变量"><a href="#静态变量" class="headerlink" title="静态变量"></a>静态变量</h1><h2 id="static-定义"><a href="#static-定义" class="headerlink" title="static 定义"></a>static 定义</h2><p>声明</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">People</span> </span>&#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="built_in">String</span> name = <span class="string">'ducafecat'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用</p><p>静态变量可以通过外部直接访问,不需要将类实例化</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(People.name);</span><br></pre></td></tr></table></figure><h2 id="函数内部访问"><a href="#函数内部访问" class="headerlink" title="函数内部访问"></a>函数内部访问</h2><p>实例化后的类也可以访问该静态变量</p><p>声明</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">People</span> </span>&#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="built_in">String</span> name = <span class="string">'ducafecat'</span>;</span><br><span class="line">  <span class="keyword">void</span> <span class="keyword">show</span>() &#123;</span><br><span class="line">    <span class="built_in">print</span>(name);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> p = <span class="keyword">new</span> People();</span><br><span class="line">p.<span class="keyword">show</span>();</span><br></pre></td></tr></table></figure><h2 id="不能用-this"><a href="#不能用-this" class="headerlink" title="不能用 this"></a>不能用 this</h2><p>因为静态变量实际上存在于类中,而不是实例本身</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">People</span> </span>&#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="built_in">String</span> name = <span class="string">'ducafecat'</span>;</span><br><span class="line">  <span class="keyword">void</span> <span class="keyword">show</span>() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="keyword">this</span>.name);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="静态方法"><a href="#静态方法" class="headerlink" title="静态方法"></a>静态方法</h1><p>静态方法可以通过外部直接访问</p><p>声明</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">People</span> </span>&#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="built_in">String</span> name = <span class="string">'ducafecat'</span>;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">void</span> printName() &#123;</span><br><span class="line">    <span class="built_in">print</span>(name);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">People.printName();</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul><li>实例化后将无法通过外部直接调用 static 成员</li><li>静态成员与实例成员是分开的, 静态成员处于类的定义体中, 实例成员处于类的实例中</li></ul><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><ul><li><a href="https://github.com/ducafecat/dart-learn/blob/master/19-类/static.dart" target="_blank" rel="noopener">static.dart</a></li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://www.dartlang.org/guides/language/language-tour" target="_blank" rel="noopener">language-tour</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;静态变量&lt;/li&gt;
&lt;li&gt;静态方法&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; 
      
    
    </summary>
    
      <category term="Dart语言学习" scheme="https://ducafecat.tech/categories/Dart%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="dart" scheme="https://ducafecat.tech/tags/dart/"/>
    
  </entry>
  
  <entry>
    <title>Dart语言学习 - 20 get set</title>
    <link href="https://ducafecat.tech/2018/11/17/dart/dart-20-getter-setter/"/>
    <id>https://ducafecat.tech/2018/11/17/dart/dart-20-getter-setter/</id>
    <published>2018-11-17T07:30:21.000Z</published>
    <updated>2019-08-01T18:39:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>定义、使用、简化 get set</li></ul><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>Dart 2.0.0</li></ul><h1 id="定义、使用-get-set"><a href="#定义、使用-get-set" class="headerlink" title="定义、使用 get set"></a>定义、使用 get set</h1><p>getter 和 setter 的好处是，你可以开始使用实例变量，后来 你可以把实例变量用函数包裹起来，而调用你代码的地方不需要修改。</p><p>定义</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">People</span> </span>&#123;</span><br><span class="line">  <span class="built_in">String</span> _name;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">set</span> pName(<span class="built_in">String</span> value) &#123;</span><br><span class="line">    _name = value;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">String</span> <span class="keyword">get</span> pName &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'people is <span class="subst">$&#123;_name&#125;</span>'</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> p = <span class="keyword">new</span> People();</span><br><span class="line">p.pName = <span class="string">'ducafecat'</span>;</span><br><span class="line"><span class="built_in">print</span>(p.pName);</span><br></pre></td></tr></table></figure><h1 id="简化-get-set"><a href="#简化-get-set" class="headerlink" title="简化 get set"></a>简化 get set</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">People</span> </span>&#123;</span><br><span class="line">  <span class="built_in">String</span> _name;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">set</span> pName(<span class="built_in">String</span> value) =&gt; _name = value;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">String</span> <span class="keyword">get</span> pName =&gt; <span class="string">'people is <span class="subst">$&#123;_name&#125;</span>'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><ul><li><a href="https://github.com/ducafecat/dart-learn/blob/master/19-类/getset.dart" target="_blank" rel="noopener">getset.dart</a></li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://www.dartlang.org/guides/language/language-tour" target="_blank" rel="noopener">language-tour</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;定义、使用、简化 get set&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; cl
      
    
    </summary>
    
      <category term="Dart语言学习" scheme="https://ducafecat.tech/categories/Dart%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="dart" scheme="https://ducafecat.tech/tags/dart/"/>
    
  </entry>
  
  <entry>
    <title>Dart语言学习 - 19 类</title>
    <link href="https://ducafecat.tech/2018/11/17/dart/dart-19-class/"/>
    <id>https://ducafecat.tech/2018/11/17/dart/dart-19-class/</id>
    <published>2018-11-17T05:52:30.000Z</published>
    <updated>2019-08-01T18:39:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>定义、使用类</li><li>构造函数</li><li>简化构造</li><li>初始化列表</li><li>命名构造函数</li><li>重定向构造函数</li></ul><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>Dart 2.0.0</li></ul><h1 id="定义、使用类"><a href="#定义、使用类" class="headerlink" title="定义、使用类"></a>定义、使用类</h1><p>定义</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Point</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> p = <span class="keyword">new</span> Point();</span><br></pre></td></tr></table></figure><h1 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h1><p>定义</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Point</span> </span>&#123;</span><br><span class="line">  <span class="built_in">num</span> x;</span><br><span class="line">  <span class="built_in">num</span> y;</span><br><span class="line">  Point(<span class="built_in">num</span> x, <span class="built_in">num</span> y)&#123;</span><br><span class="line">    <span class="keyword">this</span>.x = x;</span><br><span class="line">    <span class="keyword">this</span>.y = y;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> p = <span class="keyword">new</span> Point(<span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line"><span class="built_in">print</span>([p.x, p.y]);</span><br></pre></td></tr></table></figure><h1 id="简化构造"><a href="#简化构造" class="headerlink" title="简化构造"></a>简化构造</h1><p>定义</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Point</span> </span>&#123;</span><br><span class="line">  <span class="built_in">num</span> x;</span><br><span class="line">  <span class="built_in">num</span> y;</span><br><span class="line">  Point(<span class="keyword">this</span>.x, <span class="keyword">this</span>.y);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> p = <span class="keyword">new</span> Point(<span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line"><span class="built_in">print</span>([p.x, p.y]);</span><br></pre></td></tr></table></figure><h1 id="初始化列表"><a href="#初始化列表" class="headerlink" title="初始化列表"></a>初始化列表</h1><p>定义</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Point</span> </span>&#123;</span><br><span class="line">  <span class="built_in">num</span> x;</span><br><span class="line">  <span class="built_in">num</span> y;</span><br><span class="line">  <span class="keyword">var</span> origin;</span><br><span class="line">  Point(<span class="keyword">this</span>.x, <span class="keyword">this</span>.y): origin = &#123;x:x, y:y&#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> p = <span class="keyword">new</span> Point(<span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line"><span class="built_in">print</span>([p.x, p.y, p.origin]);</span><br></pre></td></tr></table></figure><h1 id="命名构造函数"><a href="#命名构造函数" class="headerlink" title="命名构造函数"></a>命名构造函数</h1><p>定义</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Point</span> </span>&#123;</span><br><span class="line">  <span class="built_in">num</span> x;</span><br><span class="line">  <span class="built_in">num</span> y;</span><br><span class="line">  Point.fromJson(<span class="built_in">Map</span> json) &#123;</span><br><span class="line">    x = json[<span class="string">'x'</span>];</span><br><span class="line">    y = json[<span class="string">'y'</span>];</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> p = <span class="keyword">new</span> Point.fromJson(&#123;<span class="string">"x"</span>: <span class="number">1</span>, <span class="string">"y"</span>: <span class="number">2</span>&#125;);</span><br><span class="line"><span class="built_in">print</span>([p.x, p.y]);</span><br></pre></td></tr></table></figure><h1 id="重定向构造函数"><a href="#重定向构造函数" class="headerlink" title="重定向构造函数"></a>重定向构造函数</h1><p>定义</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Point</span> </span>&#123;</span><br><span class="line">  <span class="built_in">num</span> x;</span><br><span class="line">  <span class="built_in">num</span> y;</span><br><span class="line">  Point(<span class="keyword">this</span>.x, <span class="keyword">this</span>.y);</span><br><span class="line">  Point.fromJson(<span class="built_in">Map</span> json) : <span class="keyword">this</span>(json[<span class="string">'x'</span>], json[<span class="string">'y'</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> p = <span class="keyword">new</span> Point.fromJson(&#123;<span class="string">"x"</span>: <span class="number">1</span>, <span class="string">"y"</span>: <span class="number">2</span>&#125;);</span><br><span class="line"><span class="built_in">print</span>([p.x, p.y]);</span><br></pre></td></tr></table></figure><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><ul><li><a href="https://github.com/ducafecat/dart-learn/blob/master/19-类/class.dart" target="_blank" rel="noopener">class.dart</a></li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://www.dartlang.org/guides/language/language-tour" target="_blank" rel="noopener">language-tour</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;定义、使用类&lt;/li&gt;
&lt;li&gt;构造函数&lt;/li&gt;
&lt;li&gt;简化构造&lt;/li&gt;
&lt;li&gt;初始化列表&lt;/li&gt;
&lt;
      
    
    </summary>
    
      <category term="Dart语言学习" scheme="https://ducafecat.tech/categories/Dart%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="dart" scheme="https://ducafecat.tech/tags/dart/"/>
    
  </entry>
  
  <entry>
    <title>Dart语言学习 - 18 异常</title>
    <link href="https://ducafecat.tech/2018/11/17/dart/dart-18-exceptions/"/>
    <id>https://ducafecat.tech/2018/11/17/dart/dart-18-exceptions/</id>
    <published>2018-11-17T02:53:26.000Z</published>
    <updated>2019-08-01T18:39:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>错误类型</li><li>抛出、捕获</li></ul><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>Dart 2.0.0</li></ul><h1 id="错误的两种类型"><a href="#错误的两种类型" class="headerlink" title="错误的两种类型"></a>错误的两种类型</h1><h2 id="Exception-类"><a href="#Exception-类" class="headerlink" title="Exception 类"></a>Exception 类</h2><p><a href="https://api.dartlang.org/stable/2.1.0/dart-core/Exception-class.html" target="_blank" rel="noopener">Exception class</a></p><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>DeferredLoadException</td><td>延迟加载错误</td></tr><tr><td>FormatException</td><td>格式错误</td></tr><tr><td>IntegerDivisionByZeroException</td><td>整数除零错误</td></tr><tr><td>IOException</td><td>IO 错误</td></tr><tr><td>IsolateSpawnException</td><td>隔离产生错误</td></tr><tr><td>TimeoutException</td><td>超时错误</td></tr></tbody></table><h2 id="Error-类"><a href="#Error-类" class="headerlink" title="Error 类"></a>Error 类</h2><p><a href="https://api.dartlang.org/stable/2.1.0/dart-core/Error-class.html" target="_blank" rel="noopener">Error class</a></p><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>AbstractClassInstantiationError</td><td>抽象类实例化错误</td></tr><tr><td>ArgumentError</td><td>参数错误</td></tr><tr><td>AssertionError</td><td>断言错误</td></tr><tr><td>AsyncError</td><td>异步错误</td></tr><tr><td>CastError</td><td>Cast 错误</td></tr><tr><td>ConcurrentModificationError</td><td>并发修改错误</td></tr><tr><td>CyclicInitializationError</td><td>周期初始错误</td></tr><tr><td>FallThroughError</td><td>Fall Through 错误</td></tr><tr><td>JsonUnsupportedObjectError</td><td>json 不支持错误</td></tr><tr><td>NoSuchMethodError</td><td>没有这个方法错误</td></tr><tr><td>NullThrownError</td><td>Null 错误错误</td></tr><tr><td>OutOfMemoryError</td><td>内存溢出错误</td></tr><tr><td>RemoteError</td><td>远程错误</td></tr><tr><td>StackOverflowError</td><td>堆栈溢出错误</td></tr><tr><td>StateError</td><td>状态错误</td></tr><tr><td>UnimplementedError</td><td>未实现的错误</td></tr><tr><td>UnsupportedError</td><td>不支持错误</td></tr></tbody></table><h1 id="抛出错误"><a href="#抛出错误" class="headerlink" title="抛出错误"></a>抛出错误</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Exception 对象</span></span><br><span class="line"><span class="comment">// throw new FormatException('这是一个格式错误提示');</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Error 对象</span></span><br><span class="line"><span class="comment">// throw new OutOfMemoryError();</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 任意对象</span></span><br><span class="line"><span class="comment">// throw '这是一个异常';</span></span><br></pre></td></tr></table></figure><h1 id="捕获错误"><a href="#捕获错误" class="headerlink" title="捕获错误"></a>捕获错误</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// try &#123;</span></span><br><span class="line"><span class="comment">//   // throw new FormatException('这是一个格式错误提示');</span></span><br><span class="line"><span class="comment">//   throw new OutOfMemoryError();</span></span><br><span class="line"><span class="comment">// &#125; on OutOfMemoryError &#123;</span></span><br><span class="line"><span class="comment">//   print('没有内存了');</span></span><br><span class="line"><span class="comment">// &#125; catch (e) &#123;</span></span><br><span class="line"><span class="comment">//   print(e);</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br></pre></td></tr></table></figure><h1 id="重新抛出错误"><a href="#重新抛出错误" class="headerlink" title="重新抛出错误"></a>重新抛出错误</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// try &#123;</span></span><br><span class="line"><span class="comment">//   throw new OutOfMemoryError();</span></span><br><span class="line"><span class="comment">// &#125; on OutOfMemoryError &#123;</span></span><br><span class="line"><span class="comment">//   print('没有内存了');</span></span><br><span class="line"><span class="comment">//   rethrow;</span></span><br><span class="line"><span class="comment">// &#125; catch (e) &#123;</span></span><br><span class="line"><span class="comment">//   print(e);</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br></pre></td></tr></table></figure><h1 id="Finally-执行"><a href="#Finally-执行" class="headerlink" title="Finally 执行"></a>Finally 执行</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// try &#123;</span></span><br><span class="line"><span class="comment">//   throw new OutOfMemoryError();</span></span><br><span class="line"><span class="comment">// &#125; on OutOfMemoryError &#123;</span></span><br><span class="line"><span class="comment">//   print('没有内存了');</span></span><br><span class="line"><span class="comment">//   rethrow;</span></span><br><span class="line"><span class="comment">// &#125; catch (e) &#123;</span></span><br><span class="line"><span class="comment">//   print(e);</span></span><br><span class="line"><span class="comment">// &#125; finally &#123;</span></span><br><span class="line"><span class="comment">//   print('end');</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br></pre></td></tr></table></figure><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><ul><li><a href="https://github.com/ducafecat/dart-learn/blob/master/18-异常/exception.dart" target="_blank" rel="noopener">exception.dart</a></li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://www.dartlang.org/guides/language/language-tour" target="_blank" rel="noopener">language-tour</a></li><li><a href="https://api.dartlang.org/stable/2.1.0/dart-core/Exception-class.html" target="_blank" rel="noopener">Exception class</a></li><li><a href="https://api.dartlang.org/stable/2.1.0/dart-core/Error-class.html" target="_blank" rel="noopener">Error class</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;错误类型&lt;/li&gt;
&lt;li&gt;抛出、捕获&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot;
      
    
    </summary>
    
      <category term="Dart语言学习" scheme="https://ducafecat.tech/categories/Dart%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="dart" scheme="https://ducafecat.tech/tags/dart/"/>
    
  </entry>
  
  <entry>
    <title>Dart语言学习 - 17 流程控制语句</title>
    <link href="https://ducafecat.tech/2018/11/12/dart/dart-17-controlFlow/"/>
    <id>https://ducafecat.tech/2018/11/12/dart/dart-17-controlFlow/</id>
    <published>2018-11-12T07:56:51.000Z</published>
    <updated>2019-08-01T18:39:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>条件判断</li><li>循环控制</li></ul><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>Dart 2.0.0</li></ul><h1 id="if-else"><a href="#if-else" class="headerlink" title="if else"></a>if else</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bool</span> isPrint = <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">if</span> (isPrint) &#123;</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">'hello'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="for"><a href="#for" class="headerlink" title="for"></a>for</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">  <span class="built_in">print</span>(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="while"><a href="#while" class="headerlink" title="while"></a>while</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bool</span> isDone = <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">while</span>(!isDone) &#123;</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">'is not done'</span>);</span><br><span class="line">  isDone = <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="do-while"><a href="#do-while" class="headerlink" title="do while"></a>do while</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bool</span> isRunning = <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">'is running'</span>);</span><br><span class="line">  isRunning = <span class="keyword">false</span>;</span><br><span class="line">&#125; <span class="keyword">while</span> (isRunning);</span><br></pre></td></tr></table></figure><h1 id="switch-case"><a href="#switch-case" class="headerlink" title="switch case"></a>switch case</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">String</span> name = <span class="string">'cat'</span>;</span><br><span class="line"><span class="keyword">switch</span> (name) &#123;</span><br><span class="line">  <span class="keyword">case</span> <span class="string">'cat'</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'cat'</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">default</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'not find'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="break"><a href="#break" class="headerlink" title="break"></a>break</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">num</span> i = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="keyword">true</span>) &#123;</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">'<span class="subst">$&#123;i&#125;</span> - run'</span>);</span><br><span class="line">  i++;</span><br><span class="line">  <span class="keyword">if</span>(i == <span class="number">5</span>) &#123;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="continue"><a href="#continue" class="headerlink" title="continue"></a>continue</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">  <span class="keyword">if</span> (i &lt; <span class="number">3</span>) &#123;</span><br><span class="line">    <span class="keyword">continue</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">print</span>(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="continue-指定位置"><a href="#continue-指定位置" class="headerlink" title="continue 指定位置"></a>continue 指定位置</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">String</span> command = <span class="string">"close"</span>;</span><br><span class="line"><span class="keyword">switch</span>(command) &#123;</span><br><span class="line">  <span class="keyword">case</span> <span class="string">"open"</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"open"</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">case</span> <span class="string">"close"</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"close"</span>);</span><br><span class="line">    <span class="keyword">continue</span> doClose;</span><br><span class="line"></span><br><span class="line">  doClose:</span><br><span class="line">  <span class="keyword">case</span> <span class="string">"doClose"</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"DO_CLOSE"</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">default</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"-----"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><ul><li><a href="https://github.com/ducafecat/dart-learn/blob/master/17-%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E8%AF%AD%E5%8F%A5/controlFlow.dart" target="_blank" rel="noopener">controlFlow.dart</a></li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://www.dartlang.org/guides/language/language-tour" target="_blank" rel="noopener">language-tour</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;条件判断&lt;/li&gt;
&lt;li&gt;循环控制&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; 
      
    
    </summary>
    
      <category term="Dart语言学习" scheme="https://ducafecat.tech/categories/Dart%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="dart" scheme="https://ducafecat.tech/tags/dart/"/>
    
  </entry>
  
  <entry>
    <title>Dart语言学习 - 16 操作符</title>
    <link href="https://ducafecat.tech/2018/11/12/dart/dart-16-operators/"/>
    <id>https://ducafecat.tech/2018/11/12/dart/dart-16-operators/</id>
    <published>2018-11-12T02:41:28.000Z</published>
    <updated>2019-08-01T18:39:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>优先级</li><li>算术操作符</li><li>相等相关的操作符</li><li>类型判定操作符</li><li>赋值操作符</li><li>逻辑操作符</li><li>位和移位操作符</li><li>条件表达式</li><li>级联操作符</li></ul><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>Dart 2.0.0</li></ul><h1 id="操作符表"><a href="#操作符表" class="headerlink" title="操作符表"></a>操作符表</h1><table><thead><tr><th>描述</th><th>操作符</th></tr></thead><tbody><tr><td> 后缀操作</td><td>expr++ expr– () [] . ?.</td></tr><tr><td>前缀操作</td><td>-expr !expr ~expr ++expr –expr</td></tr><tr><td>乘除</td><td>* / % ~/</td></tr><tr><td>加减</td><td>+ -</td></tr><tr><td>位移</td><td>&lt;&lt; &gt;&gt;</td></tr><tr><td>按位与</td><td>&amp;</td></tr><tr><td>按位异或</td><td>^</td></tr><tr><td>按位或</td><td>\</td><td></td></tr><tr><td>类型操作</td><td>&gt;= &gt; &lt;= &lt; as is is!</td></tr><tr><td>相等</td><td>== !=</td></tr><tr><td>逻辑与</td><td>&amp;&amp;</td></tr><tr><td>逻辑或</td><td>\</td><td>\</td><td></td></tr><tr><td>是为为空</td><td>??</td></tr><tr><td>三目运算</td><td>expr1 ? expr2 : expr3</td></tr><tr><td>级联</td><td>..</td></tr><tr><td>赋值</td><td>= *= /= ~/= %= += -= &lt;&lt;= &gt;&gt;= &amp;= ^= \</td><td>= ??=</td></tr></tbody></table><blockquote><p>优先级顺序 <code>上面左边</code> 优先级高于 <code>右边下面</code></p></blockquote><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(x == <span class="number">1</span> &amp;&amp; y == <span class="number">2</span>)&#123;</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="算术操作符"><a href="#算术操作符" class="headerlink" title="算术操作符"></a>算术操作符</h1><table><thead><tr><th>操作符</th><th>解释</th></tr></thead><tbody><tr><td>+</td><td>加号</td></tr><tr><td>–</td><td>减号</td></tr><tr><td>-expr</td><td>负号</td></tr><tr><td>*</td><td>乘号</td></tr><tr><td>/</td><td>除号</td></tr><tr><td>~/</td><td>除号，但是返回值为整数</td></tr><tr><td>%</td><td>取模</td></tr></tbody></table><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="number">5</span>/<span class="number">2</span>);</span><br><span class="line"><span class="built_in">print</span>(<span class="number">5</span>~/<span class="number">2</span>);</span><br><span class="line"><span class="built_in">print</span>(<span class="number">5</span> % <span class="number">2</span>);</span><br></pre></td></tr></table></figure><h1 id="相等相关的操作符"><a href="#相等相关的操作符" class="headerlink" title="相等相关的操作符"></a>相等相关的操作符</h1><table><thead><tr><th>操作符</th><th>解释</th></tr></thead><tbody><tr><td>==</td><td>相等</td></tr><tr><td>!=</td><td>不等</td></tr><tr><td>&gt;</td><td>大于</td></tr><tr><td>&lt;</td><td>小于</td></tr><tr><td>&gt;=</td><td>大于等于</td></tr><tr><td>&lt;=</td><td>小于等于</td></tr></tbody></table><h1 id="类型判定操作符"><a href="#类型判定操作符" class="headerlink" title="类型判定操作符"></a>类型判定操作符</h1><table><thead><tr><th>操作符</th><th>解释</th></tr></thead><tbody><tr><td>as</td><td>类型转换</td></tr><tr><td>is</td><td>如果对象是指定的类型返回 True</td></tr><tr><td>is!</td><td>如果对象是指定的类型返回 False</td></tr></tbody></table><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> a = <span class="number">123</span>;</span><br><span class="line"><span class="built_in">String</span> b = <span class="string">'ducafecat'</span>;</span><br><span class="line"><span class="built_in">String</span> c = <span class="string">'abc'</span>;</span><br><span class="line"><span class="built_in">print</span>(a <span class="keyword">as</span> <span class="built_in">Object</span>);</span><br><span class="line"><span class="built_in">print</span>(b <span class="keyword">is</span> <span class="built_in">String</span>);</span><br><span class="line"><span class="built_in">print</span>(c <span class="keyword">is</span>! <span class="built_in">String</span>);</span><br></pre></td></tr></table></figure><h1 id="条件表达式"><a href="#条件表达式" class="headerlink" title="条件表达式"></a>条件表达式</h1><table><thead><tr><th>操作符</th><th>解释</th></tr></thead><tbody><tr><td>condition ? expr1 : expr2</td><td>如果 condition 是 true，执行 expr1 (并返回执行的结果)； 否则执行 expr2 并返回其结果。</td></tr><tr><td>expr1 ?? expr2</td><td>如果 expr1 是 non-null，返回其值； 否则执行 expr2 并返回其结果。</td></tr></tbody></table><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bool</span> isFinish = <span class="keyword">true</span>;</span><br><span class="line"><span class="built_in">String</span> txtVal = isFinish ? <span class="string">'yes'</span> : <span class="string">'no'</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">bool</span> isFinish;</span><br><span class="line">isFinish = isFinish ?? <span class="keyword">false</span>;</span><br><span class="line">or</span><br><span class="line">isFinish ??= <span class="keyword">false</span>;</span><br></pre></td></tr></table></figure><h1 id="位和移位操作符"><a href="#位和移位操作符" class="headerlink" title="位和移位操作符"></a>位和移位操作符</h1><table><thead><tr><th>操作符</th><th>解释</th></tr></thead><tbody><tr><td>&amp;</td><td>逻辑与</td></tr><tr><td></td><td>逻辑或</td></tr><tr><td>^</td><td>逻辑异或</td></tr><tr><td>~expr</td><td>取反</td></tr><tr><td>&lt;&lt;</td><td>左移</td></tr><tr><td>&gt;&gt;</td><td>右移</td></tr></tbody></table><h1 id="级联操作符"><a href="#级联操作符" class="headerlink" title="级联操作符"></a>级联操作符</h1><table><thead><tr><th>操作符</th><th>解释</th></tr></thead><tbody><tr><td>..</td><td>可以在同一个对象上 连续调用多个函数以及访问成员变量。</td></tr></tbody></table><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">StringBuffer</span> sb = <span class="keyword">new</span> <span class="built_in">StringBuffer</span>();</span><br><span class="line">sb</span><br><span class="line">..write(<span class="string">'hello'</span>)</span><br><span class="line">..write(<span class="string">'word'</span>)</span><br><span class="line">..write(<span class="string">'\n'</span>)</span><br><span class="line">..writeln(<span class="string">'doucafecat'</span>);</span><br></pre></td></tr></table></figure><h1 id="其他操作符"><a href="#其他操作符" class="headerlink" title="其他操作符"></a>其他操作符</h1><table><thead><tr><th>操作符</th><th>解释</th></tr></thead><tbody><tr><td>()</td><td>使用方法 代表调用一个方法</td></tr><tr><td>[]</td><td>访问 List 访问 list 中特定位置的元素</td></tr><tr><td>.</td><td>访问 Member 访问元素，例如 foo.bar 代表访问 foo 的 bar 成员</td></tr><tr><td>?.</td><td>条件成员访问 和 . 类似，但是左边的操作对象不能为 null，例如 foo?.bar 如果 foo 为 null 则返回 null，否则返回 bar 成员</td></tr></tbody></table><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">String</span> a;</span><br><span class="line"><span class="built_in">print</span>(a?.length);</span><br></pre></td></tr></table></figure><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><ul><li><a href="https://github.com/ducafecat/dart-learn/blob/master/16-%E6%93%8D%E4%BD%9C%E7%AC%A6/operator.dart" target="_blank" rel="noopener">operator.dart</a></li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://www.dartlang.org/guides/language/language-tour#operators" target="_blank" rel="noopener">operators</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;优先级&lt;/li&gt;
&lt;li&gt;算术操作符&lt;/li&gt;
&lt;li&gt;相等相关的操作符&lt;/li&gt;
&lt;li&gt;类型判定操作符&lt;/l
      
    
    </summary>
    
      <category term="Dart语言学习" scheme="https://ducafecat.tech/categories/Dart%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="dart" scheme="https://ducafecat.tech/tags/dart/"/>
    
  </entry>
  
  <entry>
    <title>Dart语言学习 - 15 函数 Function</title>
    <link href="https://ducafecat.tech/2018/11/12/dart/dart-15-function/"/>
    <id>https://ducafecat.tech/2018/11/12/dart/dart-15-function/</id>
    <published>2018-11-12T01:36:04.000Z</published>
    <updated>2019-08-01T18:39:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>函数定义</li><li>可选参数</li><li>默认值</li><li>命名参数</li><li>内部定义</li></ul><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>Dart 2.0.0</li></ul><h1 id="函数定义"><a href="#函数定义" class="headerlink" title="函数定义"></a>函数定义</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> add(<span class="built_in">int</span> x) &#123;</span><br><span class="line">  <span class="keyword">return</span> x + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">调用</span><br><span class="line">add(<span class="number">1</span>);</span><br></pre></td></tr></table></figure><h1 id="可选参数"><a href="#可选参数" class="headerlink" title="可选参数"></a>可选参数</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> add(<span class="built_in">int</span> x, [<span class="built_in">int</span> y, <span class="built_in">int</span> z]) &#123;</span><br><span class="line">  <span class="keyword">if</span> (y == <span class="keyword">null</span>) &#123;</span><br><span class="line">    y = <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (z == <span class="keyword">null</span>) &#123;</span><br><span class="line">    z = <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> x + y + z;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">调用</span><br><span class="line"><span class="built_in">int</span>(<span class="number">1</span>, <span class="number">2</span>);</span><br></pre></td></tr></table></figure><h1 id="可选参数-默认值"><a href="#可选参数-默认值" class="headerlink" title="可选参数 默认值"></a>可选参数 默认值</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> add(<span class="built_in">int</span> x, [<span class="built_in">int</span> y = <span class="number">1</span>, <span class="built_in">int</span> z = <span class="number">2</span>]) &#123;</span><br><span class="line">  <span class="keyword">return</span> x + y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">调用</span><br><span class="line"><span class="built_in">int</span>(<span class="number">1</span>, <span class="number">2</span>);</span><br></pre></td></tr></table></figure><h1 id="命名参数-默认值"><a href="#命名参数-默认值" class="headerlink" title="命名参数 默认值"></a>命名参数 默认值</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> add(&#123;<span class="built_in">int</span> x = <span class="number">1</span>, <span class="built_in">int</span> y = <span class="number">1</span>, <span class="built_in">int</span> z = <span class="number">1</span>&#125;) &#123;</span><br><span class="line">  <span class="keyword">return</span> x + y + z;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">调用</span><br><span class="line"><span class="built_in">int</span>(x: <span class="number">1</span>, y: <span class="number">2</span>);</span><br></pre></td></tr></table></figure><h1 id="函数内定义"><a href="#函数内定义" class="headerlink" title="函数内定义"></a>函数内定义</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> main()&#123;</span><br><span class="line">  <span class="built_in">int</span> add(<span class="built_in">int</span> x)&#123;</span><br><span class="line">    <span class="keyword">return</span> x + x;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">print</span>(add(<span class="number">1</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Funcation-返回函数对象"><a href="#Funcation-返回函数对象" class="headerlink" title="Funcation 返回函数对象"></a>Funcation 返回函数对象</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Function</span> makeAdd(<span class="built_in">int</span> x) &#123;</span><br><span class="line">  <span class="keyword">return</span> (<span class="built_in">int</span> y) =&gt; x + y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">调用</span><br><span class="line"><span class="keyword">var</span> add = makeAdd(<span class="number">1</span>);</span><br><span class="line"><span class="built_in">print</span>(add(<span class="number">5</span>));</span><br></pre></td></tr></table></figure><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><ul><li><a href="https://github.com/ducafecat/dart-learn/blob/master/15-%E5%87%BD%E6%95%B0-function/function.dart" target="_blank" rel="noopener">function.dart</a></li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://www.dartlang.org/guides/language/language-tour#functions" target="_blank" rel="noopener">Functions</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;函数定义&lt;/li&gt;
&lt;li&gt;可选参数&lt;/li&gt;
&lt;li&gt;默认值&lt;/li&gt;
&lt;li&gt;命名参数&lt;/li&gt;
&lt;li&gt;内
      
    
    </summary>
    
      <category term="Dart语言学习" scheme="https://ducafecat.tech/categories/Dart%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="dart" scheme="https://ducafecat.tech/tags/dart/"/>
    
  </entry>
  
  <entry>
    <title>Dart语言学习 - 14 symbol、enum、comments</title>
    <link href="https://ducafecat.tech/2018/10/27/dart/dart-14-symbol-enum-comments/"/>
    <id>https://ducafecat.tech/2018/10/27/dart/dart-14-symbol-enum-comments/</id>
    <published>2018-10-27T03:05:15.000Z</published>
    <updated>2019-08-01T18:39:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>symbol</li><li>enum</li><li>comments</li></ul><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>Dart 2.0.0</li></ul><h1 id="符号-Symbol"><a href="#符号-Symbol" class="headerlink" title="符号 Symbol"></a>符号 Symbol</h1><p>Dart语言的标识符，在反射中用的很普及，特别是很多发布包都是混淆后的。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'dart:mirrors'</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Symbol</span> libraryName = <span class="keyword">new</span> <span class="built_in">Symbol</span>(<span class="string">'dart.core'</span>);</span><br><span class="line">MirrorSystem mirrorSystem = currentMirrorSystem();</span><br><span class="line">LibraryMirror libMirror = mirrorSystem.findLibrary(libraryName);</span><br><span class="line">libMirror.declarations.forEach((s, d) =&gt; <span class="built_in">print</span>(<span class="string">'<span class="subst">$s</span> - <span class="subst">$d</span>'</span>));</span><br></pre></td></tr></table></figure><h1 id="枚举-Enum"><a href="#枚举-Enum" class="headerlink" title="枚举 Enum"></a>枚举 Enum</h1><p>适合用在常量定义，类型比较很方便。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> Status &#123; none, running, stopped, paused &#125;</span><br><span class="line"></span><br><span class="line">Status.values.forEach((it) =&gt; <span class="built_in">print</span>(<span class="string">'<span class="subst">$it</span> - index: <span class="subst">$&#123;it.index&#125;</span>'</span>));</span><br></pre></td></tr></table></figure><h1 id="注释-Comments"><a href="#注释-Comments" class="headerlink" title="注释 Comments"></a>注释 Comments</h1><h2 id="单行注释"><a href="#单行注释" class="headerlink" title="单行注释"></a>单行注释</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Symbol libraryName = new Symbol('dart.core');</span></span><br></pre></td></tr></table></figure><h2 id="多行注释"><a href="#多行注释" class="headerlink" title="多行注释"></a>多行注释</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Symbol</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment">Symbol libraryName = new Symbol('dart.core');</span></span><br><span class="line"><span class="comment">MirrorSystem mirrorSystem = currentMirrorSystem();</span></span><br><span class="line"><span class="comment">LibraryMirror libMirror = mirrorSystem.findLibrary(libraryName);</span></span><br><span class="line"><span class="comment">libMirror.declarations.forEach((s, d) =&gt; print('$s - $d')); </span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="文档注释"><a href="#文档注释" class="headerlink" title="文档注释"></a>文档注释</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// <span class="markdown"><span class="code">`main`</span> 函数</span></span></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"><span class="comment">/// <span class="markdown">符号</span></span></span><br><span class="line"><span class="comment">/// <span class="markdown">枚举</span></span></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"><span class="keyword">void</span> main() &#123;</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可参考 <code>String</code> 类中的注释使用</p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><ul><li><a href="https://github.com/ducafecat/dart-learn/tree/master/14-symbol-enum-comments" target="_blank" rel="noopener">symbol-enum-comments.dart</a></li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://www.dartlang.org/guides/language/language-tour" target="_blank" rel="noopener">language-tour</a></li><li><a href="https://api.dartlang.org/stable/2.0.0/dart-core/Symbol-class.html" target="_blank" rel="noopener">Symbol</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;symbol&lt;/li&gt;
&lt;li&gt;enum&lt;/li&gt;
&lt;li&gt;comments&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id
      
    
    </summary>
    
      <category term="Dart语言学习" scheme="https://ducafecat.tech/categories/Dart%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="dart" scheme="https://ducafecat.tech/tags/dart/"/>
    
  </entry>
  
  <entry>
    <title>Dart语言学习 - 13 Runes</title>
    <link href="https://ducafecat.tech/2018/10/27/dart/dart-13-runes/"/>
    <id>https://ducafecat.tech/2018/10/27/dart/dart-13-runes/</id>
    <published>2018-10-27T00:51:21.000Z</published>
    <updated>2019-08-01T18:39:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>Runes</li><li>基础知识 字符编码 ASCII、Unicode、UTF-8、UTF-16、UTF-32</li></ul><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>Dart 2.0.0</li></ul><h1 id="Runes"><a href="#Runes" class="headerlink" title="Runes"></a>Runes</h1><p>Runes 对象是一个 32位 字符对象，用来表示一个字。<br>这样设计也是考虑兼容 UTF-16 四个字节的情况。</p><h2 id="length-和-runes-length-比较"><a href="#length-和-runes-length-比较" class="headerlink" title="length 和 runes.length 比较"></a><code>length</code> 和 <code>runes.length</code> 比较</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">String</span> a = <span class="string">'👺'</span>;</span><br><span class="line"><span class="built_in">print</span>(a.length);</span><br><span class="line"><span class="built_in">print</span>(a.runes.length);</span><br><span class="line"></span><br><span class="line">&gt;&gt; 输出</span><br><span class="line"><span class="number">2</span> <span class="comment">// 标识占 2 个 16 位字符</span></span><br><span class="line"><span class="number">1</span> <span class="comment">// 表示占 1 个 32 位字符</span></span><br></pre></td></tr></table></figure><blockquote><p>runes 是一个 32 位字符对象</p></blockquote><h2 id="操作-32-bit-Unicode-字符"><a href="#操作-32-bit-Unicode-字符" class="headerlink" title="操作 32-bit Unicode 字符"></a>操作 32-bit Unicode 字符</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Runes b = <span class="keyword">new</span> Runes(<span class="string">'\u&#123;1f596&#125; \u6211'</span>);</span><br><span class="line"><span class="keyword">var</span> c = <span class="built_in">String</span>.fromCharCodes(b);</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"></span><br><span class="line"><span class="built_in">String</span> c = <span class="string">'\u&#123;1f596&#125; \u6211'</span></span><br></pre></td></tr></table></figure><blockquote><p>如果非4个数值，需要用 {…}</p></blockquote><h2 id="返回-16-bit-code-units-的-codeUnitAt-codeUnits"><a href="#返回-16-bit-code-units-的-codeUnitAt-codeUnits" class="headerlink" title="返回 16-bit code units 的 codeUnitAt codeUnits"></a>返回 16-bit code units 的 <code>codeUnitAt</code> <code>codeUnits</code></h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="string">'👺'</span>;</span><br><span class="line"><span class="built_in">print</span>(a.codeUnitAt(<span class="number">0</span>));</span><br><span class="line"><span class="built_in">print</span>(a.codeUnits);</span><br><span class="line"></span><br><span class="line">&gt;&gt; 输出</span><br><span class="line"><span class="number">55357</span>           <span class="comment">// 第 1 位的 10 进制数值</span></span><br><span class="line">[<span class="number">55357</span>, <span class="number">56442</span>]  <span class="comment">// 显示 2 位的 10 进制数值</span></span><br></pre></td></tr></table></figure><h2 id="返回-32-bit-Unicode-的-runes"><a href="#返回-32-bit-Unicode-的-runes" class="headerlink" title="返回 32-bit Unicode 的 runes"></a>返回 32-bit Unicode 的 <code>runes</code></h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="string">'👺'</span>;</span><br><span class="line"><span class="built_in">print</span>(a.runes);</span><br><span class="line"></span><br><span class="line">&gt;&gt; 输出</span><br><span class="line"></span><br><span class="line">(<span class="number">128122</span>) <span class="comment">// 显示 32 位的 10 进制数值</span></span><br></pre></td></tr></table></figure><h2 id="String-操作整理"><a href="#String-操作整理" class="headerlink" title="String 操作整理"></a>String 操作整理</h2><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>codeUnitAt</td><td>某个字符的码 10进制</td></tr><tr><td>fromCharCodes</td><td>Runes 转 String 工厂函数</td></tr><tr><td>runes</td><td>返回字对象</td></tr></tbody></table><h1 id="基础知识字符集"><a href="#基础知识字符集" class="headerlink" title="基础知识字符集"></a>基础知识字符集</h1><h2 id="ASCII"><a href="#ASCII" class="headerlink" title="ASCII"></a>ASCII</h2><ul><li><a href="https://zh.wikipedia.org/wiki/ASCII" target="_blank" rel="noopener">ASCII</a></li></ul><h2 id="非-ASCII-中的-GB2312、GBK"><a href="#非-ASCII-中的-GB2312、GBK" class="headerlink" title="非 ASCII 中的 GB2312、GBK"></a>非 ASCII 中的 GB2312、GBK</h2><ul><li><a href="https://zh.wikipedia.org/wiki/%E6%B1%89%E5%AD%97%E5%86%85%E7%A0%81%E6%89%A9%E5%B1%95%E8%A7%84%E8%8C%83" target="_blank" rel="noopener">汉字内码扩展规范</a></li></ul><h2 id="Unicode、UTF-8、UTF-16、UTF-32"><a href="#Unicode、UTF-8、UTF-16、UTF-32" class="headerlink" title="Unicode、UTF-8、UTF-16、UTF-32"></a>Unicode、UTF-8、UTF-16、UTF-32</h2><ul><li><a href="https://zh.wikipedia.org/wiki/UTF-8" target="_blank" rel="noopener">UTF-8</a></li><li><a href="https://zh.wikipedia.org/wiki/UTF-16" target="_blank" rel="noopener">UTF-16</a></li><li><a href="https://zh.wikipedia.org/wiki/UTF-32" target="_blank" rel="noopener">UTF-32</a></li></ul><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><ul><li><a href="https://github.com/ducafecat/dart-learn/blob/master/13-Runes/runes.dart" target="_blank" rel="noopener">runes.dart</a></li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://www.dartlang.org/guides/language/language-tour" target="_blank" rel="noopener">language-tour</a></li><li><a href="https://api.dartlang.org/stable/2.0.0/dart-core/Runes-class.html" target="_blank" rel="noopener">Runes</a></li><li><a href="https://zh.wikipedia.org/wiki/ASCII" target="_blank" rel="noopener">ASCII</a></li><li><a href="https://zh.wikipedia.org/wiki/Unicode" target="_blank" rel="noopener">Unicode</a></li><li><a href="https://zh.wikipedia.org/wiki/UTF-8" target="_blank" rel="noopener">UTF-8</a></li><li><a href="https://zh.wikipedia.org/wiki/UTF-16" target="_blank" rel="noopener">UTF-16</a></li><li><a href="https://zh.wikipedia.org/wiki/UTF-32" target="_blank" rel="noopener">UTF-32</a></li><li><a href="http://copychar.cc/popular/" target="_blank" rel="noopener">在线字符</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;Runes&lt;/li&gt;
&lt;li&gt;基础知识 字符编码 ASCII、Unicode、UTF-8、UTF-16、UTF-
      
    
    </summary>
    
      <category term="Dart语言学习" scheme="https://ducafecat.tech/categories/Dart%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="dart" scheme="https://ducafecat.tech/tags/dart/"/>
    
  </entry>
  
  <entry>
    <title>Dart语言学习 - 12 Set</title>
    <link href="https://ducafecat.tech/2018/10/25/dart/dart-12-set/"/>
    <id>https://ducafecat.tech/2018/10/25/dart/dart-12-set/</id>
    <published>2018-10-25T06:47:10.000Z</published>
    <updated>2019-08-01T18:39:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>初始、声明</li><li>常用属性</li><li>常用方法</li></ul><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>Dart 2.0.0</li></ul><h1 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h1><p><code>Set</code> 是一个元素唯一的有序队列</p><h2 id="松散"><a href="#松散" class="headerlink" title="松散"></a>松散</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// var a = new Set();</span></span><br><span class="line"><span class="comment">// a.add('java');</span></span><br><span class="line"><span class="comment">// a.add('php');</span></span><br><span class="line"><span class="comment">// a.add('python');</span></span><br><span class="line"><span class="comment">// a.add('java');</span></span><br><span class="line"><span class="comment">// a.add('sql');</span></span><br><span class="line"><span class="comment">// a.add('swift');</span></span><br><span class="line"><span class="comment">// a.add('dart');</span></span><br></pre></td></tr></table></figure><h2 id="强类型"><a href="#强类型" class="headerlink" title="强类型"></a>强类型</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// var b = new Set&lt;String&gt;();</span></span><br><span class="line"><span class="comment">// b.addAll(['dart', 'c#', 'j#', 'e#']);</span></span><br></pre></td></tr></table></figure><h1 id="基本属性"><a href="#基本属性" class="headerlink" title="基本属性"></a>基本属性</h1><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>isEmpty</td><td>是否为空</td></tr><tr><td>isNotEmpty</td><td>是否不为空</td></tr><tr><td>first</td><td>第一个</td></tr><tr><td>last</td><td>最后一个</td></tr><tr><td>length</td><td>个数</td></tr></tbody></table><h1 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h1><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>addAll</td><td>添加</td></tr><tr><td>contains</td><td>查询单个</td></tr><tr><td>containsAll</td><td>查询多个</td></tr><tr><td>difference</td><td>集合不同</td></tr><tr><td>intersection</td><td>交集</td></tr><tr><td>union</td><td>联合</td></tr><tr><td>lookup</td><td>按对象查询到返回对象</td></tr><tr><td>remove</td><td>删除单个</td></tr><tr><td>removeAll</td><td>删除多个</td></tr><tr><td>clear</td><td>清空</td></tr><tr><td>firstWhere</td><td>按条件正向查询</td></tr><tr><td>lastWhere</td><td>按条件反向查询</td></tr><tr><td>removeWhere</td><td>按条件删除</td></tr><tr><td>retainAll</td><td>只保留几个</td></tr><tr><td>retainWhere</td><td>按条件只保留几个</td></tr></tbody></table><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// b.addAll(['dart', 'c#', 'j#', 'e#']);</span></span><br><span class="line"><span class="comment">// print(b.contains('dart'));</span></span><br><span class="line"><span class="comment">// print(b.containsAll(['dart', 'swift']));</span></span><br><span class="line"><span class="comment">// print('b =&gt; $b');</span></span><br><span class="line"><span class="comment">// print(a.difference(b));</span></span><br><span class="line"><span class="comment">// print(a.intersection(b));</span></span><br><span class="line"><span class="comment">// print(b.lookup('dart'));</span></span><br><span class="line"><span class="comment">// print(b.union(a));</span></span><br><span class="line"><span class="comment">// b.remove('dart');</span></span><br><span class="line"><span class="comment">// b.removeAll(['dart','c#']);</span></span><br><span class="line"><span class="comment">// b.clear();</span></span><br><span class="line"><span class="comment">// print(b.firstWhere((it) =&gt; it == 'c#'));</span></span><br><span class="line"><span class="comment">// print(b.lastWhere((it) =&gt; it == 'c#'));</span></span><br><span class="line"><span class="comment">// b.removeWhere((it) =&gt; it == 'c#');</span></span><br><span class="line"><span class="comment">// b.retainAll(['e#']);</span></span><br><span class="line"><span class="comment">// b.retainWhere((it) =&gt; it == 'e#');</span></span><br><span class="line"><span class="comment">// b.retainWhere((it) &#123;</span></span><br><span class="line"><span class="comment">//   bool ret = it == 'e#';</span></span><br><span class="line"><span class="comment">//   return ret;</span></span><br><span class="line"><span class="comment">// &#125;);</span></span><br></pre></td></tr></table></figure><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><ul><li><a href="https://github.com/ducafecat/dart-learn/blob/master/12-Set/set.dart" target="_blank" rel="noopener">set.dart</a></li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://www.dartlang.org/guides/language/language-tour" target="_blank" rel="noopener">language-tour</a></li><li><a href="https://api.dartlang.org/stable/2.0.0/dart-core/Set-class.html" target="_blank" rel="noopener">Set</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;初始、声明&lt;/li&gt;
&lt;li&gt;常用属性&lt;/li&gt;
&lt;li&gt;常用方法&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;环境&quot;
      
    
    </summary>
    
      <category term="Dart语言学习" scheme="https://ducafecat.tech/categories/Dart%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="dart" scheme="https://ducafecat.tech/tags/dart/"/>
    
  </entry>
  
  <entry>
    <title>Dart语言学习 - 11 Map</title>
    <link href="https://ducafecat.tech/2018/10/23/dart/dart-11-map/"/>
    <id>https://ducafecat.tech/2018/10/23/dart/dart-11-map/</id>
    <published>2018-10-23T07:36:12.000Z</published>
    <updated>2019-08-01T18:39:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>初始、声明</li><li>常用属性</li><li>常用方法</li></ul><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>Dart 2.0.0</li></ul><h1 id="初始"><a href="#初始" class="headerlink" title="初始"></a>初始</h1><p>key value 形式的集合</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = &#123;<span class="string">'name'</span>: <span class="string">'ducafecat'</span>, <span class="string">'web'</span>: <span class="string">'www.ducafecat.tech'</span>&#125;;</span><br></pre></td></tr></table></figure><h1 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h1><h2 id="松散"><a href="#松散" class="headerlink" title="松散"></a>松散</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="keyword">new</span> <span class="built_in">Map</span>();</span><br><span class="line">a[<span class="string">'name'</span>] = <span class="string">'ducafecat'</span>;</span><br><span class="line">a[<span class="string">'web'</span>] = <span class="string">'www.ducafecat.tech'</span>;</span><br><span class="line">a[<span class="number">0</span>] = <span class="string">'abc'</span>;</span><br></pre></td></tr></table></figure><h2 id="强类型"><a href="#强类型" class="headerlink" title="强类型"></a>强类型</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> b = <span class="keyword">new</span> <span class="built_in">Map</span>&lt;<span class="built_in">int</span>, <span class="built_in">String</span>&gt;();</span><br><span class="line">b[<span class="number">0</span>] = <span class="string">'java'</span>;</span><br><span class="line">b[<span class="number">1</span>] = <span class="string">'python'</span>;</span><br></pre></td></tr></table></figure><h1 id="基本属性"><a href="#基本属性" class="headerlink" title="基本属性"></a>基本属性</h1><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>isEmpty</td><td>是否为空</td></tr><tr><td>isNotEmpty</td><td>是否不为空</td></tr><tr><td>keys</td><td>key 集合</td></tr><tr><td>values</td><td>values 集合</td></tr><tr><td>length</td><td>个数</td></tr><tr><td>entries</td><td>加工数据入口</td></tr></tbody></table><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(a.isEmpty);</span><br><span class="line"><span class="built_in">print</span>(a.isNotEmpty);</span><br><span class="line"><span class="built_in">print</span>(a.keys);</span><br><span class="line"><span class="built_in">print</span>(a.values);</span><br><span class="line"><span class="built_in">print</span>(a.length);</span><br><span class="line"><span class="built_in">print</span>(a.entries);</span><br></pre></td></tr></table></figure><h1 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h1><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>addAll</td><td>添加</td></tr><tr><td>addEntries</td><td>从入口添加</td></tr><tr><td>containsKey</td><td>按 key 查询</td></tr><tr><td>containsValue</td><td>按 value 查询</td></tr><tr><td>clear</td><td>清空</td></tr><tr><td>remove</td><td>删除某个</td></tr><tr><td>removeWhere</td><td>按条件删除</td></tr><tr><td>update</td><td>更新某个</td></tr><tr><td>updateAll</td><td>按条件更新</td></tr></tbody></table><h2 id="addAll"><a href="#addAll" class="headerlink" title="addAll"></a>addAll</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b.addAll(&#123;<span class="string">'first'</span>: <span class="string">'java'</span>, <span class="string">'second'</span>: <span class="string">'python'</span>&#125;);</span><br></pre></td></tr></table></figure><h2 id="addEntries"><a href="#addEntries" class="headerlink" title="addEntries"></a>addEntries</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b.addEntries(a.entries);</span><br></pre></td></tr></table></figure><h2 id="containsKey"><a href="#containsKey" class="headerlink" title="containsKey"></a>containsKey</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(a.containsKey(<span class="string">'name'</span>));</span><br></pre></td></tr></table></figure><h2 id="containsValue"><a href="#containsValue" class="headerlink" title="containsValue"></a>containsValue</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(a.containsValue(<span class="string">'www.ducafecat.tech'</span>));</span><br></pre></td></tr></table></figure><h2 id="clear"><a href="#clear" class="headerlink" title="clear"></a>clear</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b.clear();</span><br></pre></td></tr></table></figure><h2 id="remove"><a href="#remove" class="headerlink" title="remove"></a>remove</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a.remove(<span class="string">'name'</span>);</span><br></pre></td></tr></table></figure><h2 id="removeWhere"><a href="#removeWhere" class="headerlink" title="removeWhere"></a>removeWhere</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a.removeWhere((key,val) =&gt; key == <span class="string">'name'</span>);</span><br></pre></td></tr></table></figure><h2 id="update"><a href="#update" class="headerlink" title="update"></a>update</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a.update(<span class="string">'name'</span>, (val) =&gt; <span class="string">'abc'</span>);</span><br></pre></td></tr></table></figure><h2 id="updateAll"><a href="#updateAll" class="headerlink" title="updateAll"></a>updateAll</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a.updateAll((key, val) =&gt; <span class="string">"---<span class="subst">$val</span>---"</span>);</span><br></pre></td></tr></table></figure><h1 id="操作符"><a href="#操作符" class="headerlink" title="操作符"></a>操作符</h1><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>[]</td><td>取值</td></tr><tr><td>[]=</td><td>赋值</td></tr></tbody></table><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(a[<span class="string">'name'</span>]);</span><br><span class="line">a[<span class="string">'name'</span>] = <span class="string">'abc'</span>;</span><br></pre></td></tr></table></figure><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><ul><li><a href="https://github.com/ducafecat/dart-learn/blob/master/11-Map/map.dart" target="_blank" rel="noopener">map.dart</a></li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://www.dartlang.org/guides/language/language-tour" target="_blank" rel="noopener">language-tour</a></li><li><a href="https://api.dartlang.org/stable/2.0.0/dart-core/Map-class.html" target="_blank" rel="noopener">Map</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;初始、声明&lt;/li&gt;
&lt;li&gt;常用属性&lt;/li&gt;
&lt;li&gt;常用方法&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;环境&quot;
      
    
    </summary>
    
      <category term="Dart语言学习" scheme="https://ducafecat.tech/categories/Dart%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="dart" scheme="https://ducafecat.tech/tags/dart/"/>
    
  </entry>
  
  <entry>
    <title>Dart语言学习 - 10 列表</title>
    <link href="https://ducafecat.tech/2018/10/19/dart/dart-10-list/"/>
    <id>https://ducafecat.tech/2018/10/19/dart/dart-10-list/</id>
    <published>2018-10-19T02:49:35.000Z</published>
    <updated>2019-08-01T18:39:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>初始、声明</li><li>常用属性</li><li>常用方法</li></ul><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>Dart 2.0.0</li></ul><h1 id="初始"><a href="#初始" class="headerlink" title="初始"></a>初始</h1><p>List 是一个有序列表</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> l = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="built_in">print</span>(l);</span><br></pre></td></tr></table></figure><h1 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h1><h2 id="自动"><a href="#自动" class="headerlink" title="自动"></a>自动</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">List</span>&lt;<span class="built_in">int</span>&gt; l = <span class="keyword">new</span> <span class="built_in">List</span>();</span><br><span class="line">l</span><br><span class="line">..add(<span class="number">1</span>)</span><br><span class="line">..add(<span class="number">2</span>)</span><br><span class="line">..add(<span class="number">3</span>);</span><br><span class="line"><span class="built_in">print</span>(l);</span><br></pre></td></tr></table></figure><h2 id="定长"><a href="#定长" class="headerlink" title="定长"></a>定长</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">List</span>&lt;<span class="built_in">int</span>&gt; l = <span class="keyword">new</span> <span class="built_in">List</span>(<span class="number">3</span>);</span><br><span class="line"><span class="comment">// print(l[0]);</span></span><br><span class="line">l[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">l[<span class="number">1</span>] = <span class="number">2</span>;</span><br><span class="line">l[<span class="number">2</span>] = <span class="number">3</span>;</span><br><span class="line"><span class="built_in">print</span>(l);</span><br></pre></td></tr></table></figure><h1 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h1><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>isEmpty</td><td>是否为空</td></tr><tr><td>isNotEmpty</td><td>是否不为空</td></tr><tr><td>first</td><td>第一个对象</td></tr><tr><td>last</td><td>最后一个对象</td></tr><tr><td>length</td><td>个数</td></tr><tr><td>reversed</td><td>反转</td></tr></tbody></table><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> l = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="built_in">print</span>(l.first);</span><br><span class="line"><span class="built_in">print</span>(l.last);</span><br><span class="line"><span class="built_in">print</span>(l.length);</span><br><span class="line"><span class="built_in">print</span>(l.isEmpty);</span><br><span class="line"><span class="built_in">print</span>(l.isNotEmpty);</span><br><span class="line"><span class="built_in">print</span>(l.reversed);</span><br></pre></td></tr></table></figure><h1 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h1><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>add</td><td>添加</td></tr><tr><td>addAll</td><td>添加多个</td></tr><tr><td>insert</td><td>插入</td></tr><tr><td>insertAll</td><td>插入多个</td></tr><tr><td>indexOf</td><td>查询</td></tr><tr><td>indexWhere</td><td>按条件查询</td></tr><tr><td>remove</td><td>删除</td></tr><tr><td>removeAt</td><td>按位置删除</td></tr><tr><td>fillRange</td><td>按区间填充</td></tr><tr><td>getRange</td><td>按区间获取</td></tr><tr><td>shuffle</td><td>随机变换顺序</td></tr><tr><td>sort</td><td>排序</td></tr><tr><td>sublist</td><td>创建子</td></tr></tbody></table><h2 id="添加"><a href="#添加" class="headerlink" title="添加"></a>添加</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">List</span>&lt;<span class="built_in">int</span>&gt; l = <span class="keyword">new</span> <span class="built_in">List</span>();</span><br><span class="line"></span><br><span class="line">l</span><br><span class="line">  ..add(<span class="number">1</span>)</span><br><span class="line">  ..addAll([<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>])</span><br><span class="line">  ..insert(<span class="number">0</span>, <span class="number">6</span>)</span><br><span class="line">  ..insertAll(<span class="number">6</span>, [<span class="number">6</span>, <span class="number">6</span>])</span><br><span class="line">  ;</span><br></pre></td></tr></table></figure><h2 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(l.indexOf(<span class="number">5</span>));</span><br><span class="line"><span class="built_in">print</span>(l.indexWhere((it) =&gt; it == <span class="number">4</span>));</span><br></pre></td></tr></table></figure><h2 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">l.remove(<span class="number">6</span>);</span><br><span class="line"><span class="built_in">print</span>(l);</span><br><span class="line">l.removeAt(<span class="number">5</span>);</span><br><span class="line"><span class="built_in">print</span>(l);</span><br></pre></td></tr></table></figure><h2 id="Range"><a href="#Range" class="headerlink" title="Range"></a>Range</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">l.fillRange(<span class="number">0</span>, <span class="number">3</span>, <span class="number">9</span>);</span><br><span class="line"><span class="built_in">print</span>(l.getRange(<span class="number">0</span>, <span class="number">5</span>));</span><br></pre></td></tr></table></figure><h2 id="洗牌"><a href="#洗牌" class="headerlink" title="洗牌"></a>洗牌</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">l.shuffle();</span><br><span class="line"><span class="built_in">print</span>(l);</span><br><span class="line">l.shuffle();</span><br><span class="line"><span class="built_in">print</span>(l);</span><br></pre></td></tr></table></figure><h2 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">数字</span><br><span class="line">l.sort();</span><br><span class="line"><span class="built_in">print</span>(l);</span><br><span class="line">日期</span><br><span class="line"><span class="built_in">List</span>&lt;<span class="built_in">DateTime</span>&gt; dtList = <span class="keyword">new</span> <span class="built_in">List</span>();</span><br><span class="line">dtList.addAll([</span><br><span class="line">  <span class="built_in">DateTime</span>.now(),</span><br><span class="line">  <span class="built_in">DateTime</span>.now().add(<span class="keyword">new</span> <span class="built_in">Duration</span>(days: <span class="number">-12</span>)),</span><br><span class="line">  <span class="built_in">DateTime</span>.now().add(<span class="keyword">new</span> <span class="built_in">Duration</span>(days: <span class="number">-2</span>))</span><br><span class="line">  ]);</span><br><span class="line"><span class="built_in">print</span>(dtList);</span><br><span class="line">dtList.sort((a, b) =&gt; a.compareTo(b));</span><br><span class="line"><span class="built_in">print</span>(dtList);</span><br></pre></td></tr></table></figure><h2 id="复制子列表"><a href="#复制子列表" class="headerlink" title="复制子列表"></a>复制子列表</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(l);</span><br><span class="line"><span class="keyword">var</span> l2 = l.sublist(<span class="number">1</span>,<span class="number">4</span>);</span><br><span class="line"><span class="built_in">print</span>(l2);</span><br></pre></td></tr></table></figure><h2 id="操作符"><a href="#操作符" class="headerlink" title="操作符"></a>操作符</h2><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>+</td><td>连接</td></tr><tr><td>[]</td><td>取值</td></tr><tr><td>[]=</td><td>赋值</td></tr></tbody></table><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> l1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="keyword">var</span> l2 = [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>];</span><br><span class="line"><span class="built_in">print</span>(l1 + l2);</span><br><span class="line">l1[<span class="number">2</span>] = <span class="number">9</span>;</span><br><span class="line"><span class="built_in">print</span>(l1[<span class="number">2</span>]);</span><br></pre></td></tr></table></figure><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><ul><li><a href="https://github.com/ducafecat/dart-learn/blob/master/10-%E5%88%97%E8%A1%A8/list.dart" target="_blank" rel="noopener">list.dart</a></li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://www.dartlang.org/guides/language/language-tour" target="_blank" rel="noopener">language-tour</a></li><li><a href="https://api.dartlang.org/stable/2.0.0/dart-core/List-class.html" target="_blank" rel="noopener">List</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;初始、声明&lt;/li&gt;
&lt;li&gt;常用属性&lt;/li&gt;
&lt;li&gt;常用方法&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;环境&quot;
      
    
    </summary>
    
      <category term="Dart语言学习" scheme="https://ducafecat.tech/categories/Dart%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="dart" scheme="https://ducafecat.tech/tags/dart/"/>
    
  </entry>
  
  <entry>
    <title>Dart语言学习 - 09 日期时间</title>
    <link href="https://ducafecat.tech/2018/10/18/dart/dart-09-datetime/"/>
    <id>https://ducafecat.tech/2018/10/18/dart/dart-09-datetime/</id>
    <published>2018-10-18T07:02:05.000Z</published>
    <updated>2019-08-01T18:39:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>声明</li><li>UTC 时间</li><li>公元时间</li><li>时间戳</li><li>解析标准时间</li><li>时间运算</li></ul><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>Dart 2.0.0</li></ul><h1 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> now = <span class="keyword">new</span> <span class="built_in">DateTime</span>.now();</span><br><span class="line"><span class="built_in">print</span>(now);</span><br><span class="line"><span class="keyword">var</span> d = <span class="keyword">new</span> <span class="built_in">DateTime</span>(<span class="number">2018</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">30</span>);</span><br><span class="line"><span class="built_in">print</span>(d);</span><br></pre></td></tr></table></figure><h1 id="创建时间-UTC"><a href="#创建时间-UTC" class="headerlink" title="创建时间 UTC"></a>创建时间 UTC</h1><ul><li><a href="https://zh.wikipedia.org/wiki/%E5%8D%8F%E8%B0%83%E4%B8%96%E7%95%8C%E6%97%B6" target="_blank" rel="noopener">UTC 协调世界时</a></li><li><a href="https://zh.wikipedia.org/wiki/%E5%8E%9F%E5%AD%90%E6%97%B6" target="_blank" rel="noopener">原子时</a></li><li><a href="https://zh.wikipedia.org/wiki/%E5%8E%9F%E5%AD%90%E9%90%98" target="_blank" rel="noopener">原子钟</a></li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> d = <span class="keyword">new</span> <span class="built_in">DateTime</span>.utc(<span class="number">2018</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">30</span>);</span><br><span class="line"><span class="built_in">print</span>(d);</span><br></pre></td></tr></table></figure><h1 id="解析时间-IOS-8601"><a href="#解析时间-IOS-8601" class="headerlink" title="解析时间 IOS 8601"></a>解析时间 IOS 8601</h1><ul><li><a href="https://zh.wikipedia.org/wiki/ISO_8601" target="_blank" rel="noopener">ISO 8601</a></li><li><a href="https://zh.wikipedia.org/wiki/%E6%97%B6%E5%8C%BA" target="_blank" rel="noopener">时区</a></li><li><a href="https://zh.wikipedia.org/wiki/%E6%97%B6%E5%8C%BA%E5%88%97%E8%A1%A8" target="_blank" rel="noopener">时区列表</a></li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> d1 = <span class="built_in">DateTime</span>.parse(<span class="string">'2018-10-10 09:30:30Z'</span>);</span><br><span class="line"><span class="built_in">print</span>(d1);</span><br><span class="line"><span class="keyword">var</span> d2 = <span class="built_in">DateTime</span>.parse(<span class="string">'2018-10-10 09:30:30+0800'</span>);</span><br><span class="line"><span class="built_in">print</span>(d2);</span><br></pre></td></tr></table></figure><h1 id="时间增减量"><a href="#时间增减量" class="headerlink" title="时间增减量"></a>时间增减量</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> d1 = <span class="built_in">DateTime</span>.now();</span><br><span class="line"><span class="built_in">print</span>(d1);</span><br><span class="line"><span class="built_in">print</span>(d1.add(<span class="keyword">new</span> <span class="built_in">Duration</span>(minutes: <span class="number">5</span>)));</span><br><span class="line"><span class="built_in">print</span>(d1.add(<span class="keyword">new</span> <span class="built_in">Duration</span>(minutes: <span class="number">-5</span>)));</span><br></pre></td></tr></table></figure><h1 id="比较时间"><a href="#比较时间" class="headerlink" title="比较时间"></a>比较时间</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> d1 = <span class="keyword">new</span> <span class="built_in">DateTime</span>(<span class="number">2018</span>, <span class="number">10</span>, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">var</span> d2 = <span class="keyword">new</span> <span class="built_in">DateTime</span>(<span class="number">2018</span>, <span class="number">10</span>, <span class="number">10</span>);</span><br><span class="line"><span class="built_in">print</span>(d1.isAfter(d2));</span><br><span class="line"><span class="built_in">print</span>(d1.isBefore(d2));</span><br><span class="line"><span class="keyword">var</span> d1 = <span class="built_in">DateTime</span>.now();</span><br><span class="line"><span class="keyword">var</span> d2 = d1.add(<span class="keyword">new</span> <span class="built_in">Duration</span>(milliseconds: <span class="number">30</span>));</span><br><span class="line"><span class="built_in">print</span>(d1.isAtSameMomentAs(d2));</span><br></pre></td></tr></table></figure><h1 id="时间差"><a href="#时间差" class="headerlink" title="时间差"></a>时间差</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> d1 = <span class="keyword">new</span> <span class="built_in">DateTime</span>(<span class="number">2018</span>, <span class="number">10</span>, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">var</span> d2 = <span class="keyword">new</span> <span class="built_in">DateTime</span>(<span class="number">2018</span>, <span class="number">10</span>, <span class="number">10</span>);</span><br><span class="line"><span class="keyword">var</span> difference = d1.difference(d2);</span><br><span class="line"><span class="built_in">print</span>([difference.inDays, difference.inHours]);</span><br></pre></td></tr></table></figure><h1 id="时间戳"><a href="#时间戳" class="headerlink" title="时间戳"></a>时间戳</h1><ul><li><a href="https://zh.wikipedia.org/wiki/%E5%85%AC%E5%85%83" target="_blank" rel="noopener">公元</a></li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> now = <span class="keyword">new</span> <span class="built_in">DateTime</span>.now();</span><br><span class="line"><span class="built_in">print</span>(now.millisecondsSinceEpoch);</span><br><span class="line"><span class="built_in">print</span>(now.microsecondsSinceEpoch);</span><br></pre></td></tr></table></figure><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><ul><li><a href="https://github.com/ducafecat/dart-learn/blob/master/09-%E6%97%A5%E6%9C%9F%E6%97%B6%E9%97%B4/datetime.dart" target="_blank" rel="noopener">datetime.dart</a></li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://www.dartlang.org/guides/language/language-tour" target="_blank" rel="noopener">language-tour</a></li><li><a href="https://api.dartlang.org/stable/2.0.0/dart-core/DateTime-class.html" target="_blank" rel="noopener">DateTime</a></li><li><a href="https://zh.wikipedia.org/wiki/%E5%8D%8F%E8%B0%83%E4%B8%96%E7%95%8C%E6%97%B6" target="_blank" rel="noopener">UTC 协调世界时</a></li><li><a href="https://zh.wikipedia.org/wiki/%E5%8E%9F%E5%AD%90%E6%97%B6" target="_blank" rel="noopener">原子时</a></li><li><a href="https://zh.wikipedia.org/wiki/%E5%8E%9F%E5%AD%90%E9%90%98" target="_blank" rel="noopener">原子钟</a></li><li><a href="https://zh.wikipedia.org/wiki/ISO_8601" target="_blank" rel="noopener">ISO 8601</a></li><li><a href="https://zh.wikipedia.org/wiki/%E6%97%B6%E5%8C%BA" target="_blank" rel="noopener">时区</a></li><li><a href="https://zh.wikipedia.org/wiki/%E6%97%B6%E5%8C%BA%E5%88%97%E8%A1%A8" target="_blank" rel="noopener">时区列表</a></li><li><a href="https://zh.wikipedia.org/wiki/%E5%85%AC%E5%85%83" target="_blank" rel="noopener">公元</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;声明&lt;/li&gt;
&lt;li&gt;UTC 时间&lt;/li&gt;
&lt;li&gt;公元时间&lt;/li&gt;
&lt;li&gt;时间戳&lt;/li&gt;
&lt;li&gt;解
      
    
    </summary>
    
      <category term="Dart语言学习" scheme="https://ducafecat.tech/categories/Dart%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="dart" scheme="https://ducafecat.tech/tags/dart/"/>
    
  </entry>
  
  <entry>
    <title>Dart语言学习 - 08 字符串</title>
    <link href="https://ducafecat.tech/2018/10/18/dart/dart-08-string/"/>
    <id>https://ducafecat.tech/2018/10/18/dart/dart-08-string/</id>
    <published>2018-10-18T05:48:22.000Z</published>
    <updated>2019-08-01T18:39:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>声明方式</li><li>字符串模板</li><li>字符串连接</li><li>转义操作</li><li>其它常用运算</li></ul><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>Dart 2.0.0</li></ul><h1 id="单引号或者双引号"><a href="#单引号或者双引号" class="headerlink" title="单引号或者双引号"></a>单引号或者双引号</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">String</span> a = <span class="string">'ducafecat'</span>;</span><br><span class="line"><span class="built_in">String</span> b = <span class="string">"ducafecat"</span>;</span><br></pre></td></tr></table></figure><h1 id="字符串模板"><a href="#字符串模板" class="headerlink" title="字符串模板"></a>字符串模板</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">123</span>;</span><br><span class="line"><span class="built_in">String</span> b = <span class="string">'ducafecat : <span class="subst">$&#123;a&#125;</span>'</span>;</span><br><span class="line"><span class="built_in">print</span>(b);</span><br></pre></td></tr></table></figure><h1 id="字符串连接"><a href="#字符串连接" class="headerlink" title="字符串连接"></a>字符串连接</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="string">'hello'</span> + <span class="string">' '</span> + <span class="string">'ducafecat'</span>;</span><br><span class="line"><span class="keyword">var</span> a = <span class="string">'hello'</span><span class="string">' '</span><span class="string">'ducafecat'</span>;</span><br><span class="line"><span class="keyword">var</span> a = <span class="string">'hello'</span>   <span class="string">' '</span>     <span class="string">'ducafecat'</span>;</span><br><span class="line"><span class="keyword">var</span> a = <span class="string">'hello'</span></span><br><span class="line"><span class="string">' '</span></span><br><span class="line"><span class="string">'ducafecat'</span>;</span><br><span class="line"><span class="keyword">var</span> a = <span class="string">'''</span></span><br><span class="line"><span class="string">hello word</span></span><br><span class="line"><span class="string">this is multi line</span></span><br><span class="line"><span class="string">'''</span>;</span><br><span class="line"><span class="keyword">var</span> a = <span class="string">"""</span></span><br><span class="line"><span class="string">hello word</span></span><br><span class="line"><span class="string">this is multi line</span></span><br><span class="line"><span class="string">"""</span>;</span><br><span class="line"><span class="built_in">print</span>(a);</span><br></pre></td></tr></table></figure><h1 id="转义符号"><a href="#转义符号" class="headerlink" title="转义符号"></a>转义符号</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="string">'hello word \n this is multi line'</span>;</span><br><span class="line"><span class="built_in">print</span>(a);</span><br></pre></td></tr></table></figure><h1 id="取消转义"><a href="#取消转义" class="headerlink" title="取消转义"></a>取消转义</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="string">r'hello word \n this is multi line'</span>;</span><br><span class="line"><span class="built_in">print</span>(a);</span><br></pre></td></tr></table></figure><h1 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="string">'web site ducafecat.tech'</span>;</span><br><span class="line"><span class="built_in">print</span>(a.contains(<span class="string">'ducafecat'</span>));</span><br><span class="line"><span class="built_in">print</span>(a.startsWith(<span class="string">'web'</span>));</span><br><span class="line"><span class="built_in">print</span>(a.endsWith(<span class="string">'tech'</span>));</span><br><span class="line"><span class="built_in">print</span>(a.indexOf(<span class="string">'site'</span>));</span><br></pre></td></tr></table></figure><h1 id="提取数据"><a href="#提取数据" class="headerlink" title="提取数据"></a>提取数据</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(a.substring(<span class="number">0</span>,<span class="number">5</span>));</span><br><span class="line"><span class="keyword">var</span> b = a.split(<span class="string">' '</span>);</span><br><span class="line"><span class="built_in">print</span>(b.length);</span><br><span class="line"><span class="built_in">print</span>(b[<span class="number">0</span>]);</span><br></pre></td></tr></table></figure><h1 id="大小写转换"><a href="#大小写转换" class="headerlink" title="大小写转换"></a>大小写转换</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(a.toLowerCase());</span><br><span class="line"><span class="built_in">print</span>(a.toUpperCase());</span><br></pre></td></tr></table></figure><h1 id="裁剪-判断空字符串"><a href="#裁剪-判断空字符串" class="headerlink" title="裁剪 判断空字符串"></a>裁剪 判断空字符串</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">'    hello word     '</span>.trim());</span><br><span class="line"><span class="built_in">print</span>(<span class="string">''</span>.isEmpty);</span><br></pre></td></tr></table></figure><h1 id="替换部分字符"><a href="#替换部分字符" class="headerlink" title="替换部分字符"></a>替换部分字符</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">'hello word word!'</span>.replaceAll(<span class="string">'word'</span>, <span class="string">'ducafecat'</span>));</span><br></pre></td></tr></table></figure><h1 id="字符串创建"><a href="#字符串创建" class="headerlink" title="字符串创建"></a>字符串创建</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> sb = <span class="built_in">StringBuffer</span>();</span><br><span class="line">sb..write(<span class="string">'hello word!'</span>)</span><br><span class="line">..write(<span class="string">'my'</span>)</span><br><span class="line">..write(<span class="string">' '</span>)</span><br><span class="line">..writeAll([<span class="string">'web'</span>, <span class="string">'site'</span>, <span class="string">'https://ducafecat.tech'</span>]);</span><br><span class="line"><span class="built_in">print</span>(sb.toString());</span><br></pre></td></tr></table></figure><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><ul><li><a href="https://github.com/ducafecat/dart-learn/blob/master/08-%E5%AD%97%E7%AC%A6%E4%B8%B2/string.dart" target="_blank" rel="noopener">string.dart</a></li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://www.dartlang.org/guides/language/language-tour" target="_blank" rel="noopener">language-tour</a></li><li><a href="https://api.dartlang.org/stable/2.0.0/dart-core/String-class.html" target="_blank" rel="noopener">String</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;声明方式&lt;/li&gt;
&lt;li&gt;字符串模板&lt;/li&gt;
&lt;li&gt;字符串连接&lt;/li&gt;
&lt;li&gt;转义操作&lt;/li&gt;
&lt;l
      
    
    </summary>
    
      <category term="Dart语言学习" scheme="https://ducafecat.tech/categories/Dart%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="dart" scheme="https://ducafecat.tech/tags/dart/"/>
    
  </entry>
  
  <entry>
    <title>Dart语言学习 - 07 布尔</title>
    <link href="https://ducafecat.tech/2018/10/17/dart/dart-07-bool/"/>
    <id>https://ducafecat.tech/2018/10/17/dart/dart-07-bool/</id>
    <published>2018-10-17T09:37:31.000Z</published>
    <updated>2019-08-01T18:39:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>布尔 声明、比较、默认值</li><li>断言、asset、isEmpty、isNaN</li><li>逻辑操作符 &amp;&amp;、||、!</li><li>关系运算符 == != &gt; &gt;= &lt; &lt;=</li></ul><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>Dart 2.0.0</li></ul><h1 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h1><p>为了代表布尔值，Dart 有一个名字为 bool 的类型。 只有两个对象是布尔类型的：true 和 false 所创建的对象， 这两个对象也都是编译时常量。</p><p><a href="https://api.dartlang.org/stable/2.0.0/dart-core/bool-class.html" target="_blank" rel="noopener">bool</a></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bool</span> a;</span><br><span class="line"><span class="built_in">print</span>(a);</span><br></pre></td></tr></table></figure><p>只有 true 对象才被认为是 true。 所有其他的值都是 flase。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">String</span> name = <span class="string">'ducafecat'</span>;</span><br><span class="line"><span class="keyword">if</span>(name) &#123;</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">'this is name'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="assert-断言"><a href="#assert-断言" class="headerlink" title="assert 断言"></a>assert 断言</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">assert</span>(a);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> name = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">assert</span>(name.isEmpty);</span><br><span class="line"><span class="keyword">assert</span>(name.isNotEmpty);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> <span class="built_in">num</span> = <span class="number">0</span> / <span class="number">0</span>;</span><br><span class="line"><span class="keyword">assert</span>(<span class="built_in">num</span>.isNaN);</span><br></pre></td></tr></table></figure><blockquote><p>注意： 断言只在检查模式下运行有效，如果在生产模式 运行，则断言不会执行。</p></blockquote><h1 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h1><h2 id="amp-amp-逻辑与"><a href="#amp-amp-逻辑与" class="headerlink" title="&amp;&amp; 逻辑与"></a><code>&amp;&amp;</code> 逻辑与</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bool</span> a = <span class="keyword">true</span>;</span><br><span class="line"><span class="built_in">bool</span> b = <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">assert</span>(a &amp;&amp; b);</span><br></pre></td></tr></table></figure><h2 id="逻辑或"><a href="#逻辑或" class="headerlink" title="|| 逻辑或"></a><code>||</code> 逻辑或</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bool</span> a = <span class="keyword">true</span>;</span><br><span class="line"><span class="built_in">bool</span> b = <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">assert</span>(a || b);</span><br></pre></td></tr></table></figure><h2 id="逻辑非"><a href="#逻辑非" class="headerlink" title="! 逻辑非"></a><code>!</code> 逻辑非</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bool</span> a = <span class="keyword">true</span>;</span><br><span class="line"><span class="built_in">bool</span> b = !a;</span><br><span class="line"><span class="built_in">print</span>(b);</span><br></pre></td></tr></table></figure><h1 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h1><h2 id="等于"><a href="#等于" class="headerlink" title="== 等于"></a><code>==</code> 等于</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(a == b) &#123;&#125;</span><br></pre></td></tr></table></figure><h2 id="不等于"><a href="#不等于" class="headerlink" title="!= 不等于"></a><code>!=</code> 不等于</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(a != b) &#123;&#125;</span><br></pre></td></tr></table></figure><h2 id="gt-大于"><a href="#gt-大于" class="headerlink" title="&gt; 大于"></a><code>&gt;</code> 大于</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(a &gt; b) &#123;&#125;</span><br></pre></td></tr></table></figure><h2 id="gt-大于或等于"><a href="#gt-大于或等于" class="headerlink" title="&gt;= 大于或等于"></a><code>&gt;=</code> 大于或等于</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(a &gt;= b) &#123;&#125;</span><br></pre></td></tr></table></figure><h2 id="lt-小于"><a href="#lt-小于" class="headerlink" title="&lt; 小于"></a><code>&lt;</code> 小于</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(a &lt; b) &#123;&#125;</span><br></pre></td></tr></table></figure><h2 id="lt-小于或等于"><a href="#lt-小于或等于" class="headerlink" title="&lt;= 小于或等于"></a><code>&lt;=</code> 小于或等于</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(a &lt;= b) &#123;&#125;</span><br></pre></td></tr></table></figure><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><ul><li><a href="https://github.com/ducafecat/dart-learn/blob/master/07-%E5%B8%83%E5%B0%94/bool.dart" target="_blank" rel="noopener">bool.dart</a></li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://www.dartlang.org/guides/language/language-tour" target="_blank" rel="noopener">language-tour</a></li><li><a href="https://api.dartlang.org/stable/2.0.0/dart-core/bool-class.html" target="_blank" rel="noopener">bool</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;布尔 声明、比较、默认值&lt;/li&gt;
&lt;li&gt;断言、asset、isEmpty、isNaN&lt;/li&gt;
&lt;li&gt;逻辑
      
    
    </summary>
    
      <category term="Dart语言学习" scheme="https://ducafecat.tech/categories/Dart%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="dart" scheme="https://ducafecat.tech/tags/dart/"/>
    
  </entry>
  
  <entry>
    <title>Dart语言学习 - 06 数值</title>
    <link href="https://ducafecat.tech/2018/10/16/dart/dart-06-number/"/>
    <id>https://ducafecat.tech/2018/10/16/dart/dart-06-number/</id>
    <published>2018-10-16T09:08:33.000Z</published>
    <updated>2019-08-01T18:39:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>数值类型 int、double、num</li><li>数值表示法 十进制、十六进制</li><li>科学计数法</li><li>数值转换</li><li>位运算</li></ul><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>Dart 2.0.0</li></ul><h1 id="数值"><a href="#数值" class="headerlink" title="数值"></a>数值</h1><h2 id="数值类型"><a href="#数值类型" class="headerlink" title="数值类型"></a>数值类型</h2><h3 id="int"><a href="#int" class="headerlink" title="int"></a>int</h3><p>整数值，其取值通常位于 -253 和 253 之间。</p><p><a href="https://api.dartlang.org/stable/2.0.0/dart-core/int-class.html" target="_blank" rel="noopener">int class</a></p><h3 id="double"><a href="#double" class="headerlink" title="double"></a>double</h3><p>64-bit (双精度) 浮点数，符合 IEEE 754 标准。</p><p><a href="https://api.dartlang.org/stable/2.0.0/dart-core/double-class.html" target="_blank" rel="noopener">double class</a></p><h3 id="num"><a href="#num" class="headerlink" title="num"></a>num</h3><p>int 和 double 都是 num 的子类。</p><p><a href="https://api.dartlang.org/stable/2.0.0/dart-core/num-class.html" target="_blank" rel="noopener">num class</a></p><h2 id="数值表示法-十进制、十六进制"><a href="#数值表示法-十进制、十六进制" class="headerlink" title="数值表示法 十进制、十六进制"></a>数值表示法 十进制、十六进制</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> a = <span class="number">1001</span>;</span><br><span class="line"><span class="built_in">int</span> b = <span class="number">0xABC</span>;</span><br><span class="line"><span class="built_in">print</span>([a, b]);</span><br></pre></td></tr></table></figure><h2 id="科学计数法"><a href="#科学计数法" class="headerlink" title="科学计数法"></a>科学计数法</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">num</span> a = <span class="number">21.2e3</span>;</span><br><span class="line"><span class="built_in">print</span>([a]);</span><br></pre></td></tr></table></figure><h2 id="数值转换"><a href="#数值转换" class="headerlink" title="数值转换"></a>数值转换</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// string -&gt; int</span></span><br><span class="line"><span class="comment">// string -&gt; double</span></span><br><span class="line"><span class="built_in">int</span> a = <span class="built_in">int</span>.parse(<span class="string">'123'</span>);</span><br><span class="line"><span class="built_in">double</span> b = <span class="built_in">double</span>.parse(<span class="string">'1.223'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// int -&gt; string</span></span><br><span class="line"><span class="comment">// double -&gt; string</span></span><br><span class="line"><span class="built_in">String</span> a = <span class="number">123.</span>toString();</span><br><span class="line"><span class="built_in">String</span> b = <span class="number">1.223</span>.toString();</span><br><span class="line"><span class="built_in">print</span>([a, b]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// double -&gt; int</span></span><br><span class="line"><span class="built_in">double</span> a = <span class="number">1.8</span>;</span><br><span class="line"><span class="built_in">int</span> b = a.toInt();</span><br><span class="line"><span class="built_in">print</span>(b);</span><br></pre></td></tr></table></figure><h2 id="位运算"><a href="#位运算" class="headerlink" title="位运算"></a>位运算</h2><h3 id="amp-与运算"><a href="#amp-与运算" class="headerlink" title="&amp; 与运算"></a><code>&amp;</code> 与运算</h3><p>同时 <code>1</code> 才行</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1 0 1 0          10</span><br><span class="line">0 0 1 0          2</span><br><span class="line">--------</span><br><span class="line">0 0 1 0          2</span><br></pre></td></tr></table></figure><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">var</span> b = <span class="number">2</span>;</span><br><span class="line"><span class="built_in">print</span>(a &amp; b);</span><br></pre></td></tr></table></figure><h3 id="或运算"><a href="#或运算" class="headerlink" title="| 或运算"></a><code>|</code> 或运算</h3><p>有一个 <code>1</code> 就行</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1 0 1 0          10</span><br><span class="line">0 0 1 0          2</span><br><span class="line">--------</span><br><span class="line">1 0 1 0          10</span><br></pre></td></tr></table></figure><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">var</span> b = <span class="number">2</span>;</span><br><span class="line"><span class="built_in">print</span>(a | b);</span><br></pre></td></tr></table></figure><p>可以用在常量组合</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> USE_LEFT = <span class="number">0x1</span>;</span><br><span class="line"><span class="keyword">const</span> USE_TOP = <span class="number">0x2</span>;</span><br><span class="line"><span class="keyword">const</span> USE_LEFT_TOP = USE_LEFT | USE_TOP;</span><br><span class="line"><span class="keyword">var</span> result = USE_LEFT | USE_TOP;</span><br><span class="line"><span class="built_in">print</span>(result);</span><br><span class="line"><span class="keyword">assert</span>(USE_LEFT_TOP == result);</span><br></pre></td></tr></table></figure><h3 id="非运算"><a href="#非运算" class="headerlink" title="~ 非运算"></a><code>~</code> 非运算</h3><p>二进制数逐位进行逻辑非运算</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">0 1 0 0 1          +9 二进制 最高位 0 整数 1 负数</span><br><span class="line">0 0 1 1 0          补码</span><br><span class="line">1 1 0 0 1          取反</span><br><span class="line">1 1 0 1 0          加1</span><br><span class="line">--------</span><br><span class="line">1 1 0 1 0          -10</span><br></pre></td></tr></table></figure><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">9</span>;</span><br><span class="line"><span class="built_in">print</span>(~a);</span><br></pre></td></tr></table></figure><h3 id="异或"><a href="#异或" class="headerlink" title="^ 异或"></a><code>^</code> 异或</h3><p>不相同的才出 <code>1</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1 0 1 0          10</span><br><span class="line">0 0 1 0          2</span><br><span class="line">--------</span><br><span class="line">1 0 0 0          8</span><br></pre></td></tr></table></figure><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">var</span> b = <span class="number">2</span>;</span><br><span class="line"><span class="built_in">print</span>(a ^ b);</span><br></pre></td></tr></table></figure><p>计算机中可以用来取反色</p><h2 id="移位运算符"><a href="#移位运算符" class="headerlink" title="移位运算符"></a>移位运算符</h2><h3 id="lt-lt-左移"><a href="#lt-lt-左移" class="headerlink" title="&lt;&lt; 左移"></a><code>&lt;&lt;</code> 左移</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">0 0 0 1          1 二进制</span><br><span class="line">0 0 1 0          左移一位 2</span><br><span class="line">0 1 0 0          左移一位 4</span><br><span class="line">1 0 0 0          左移一位 8</span><br></pre></td></tr></table></figure><p>向左移动一位</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">1</span> &lt;&lt; <span class="number">1</span>;</span><br><span class="line"><span class="built_in">print</span>(a);</span><br></pre></td></tr></table></figure><h3 id="gt-gt-右移"><a href="#gt-gt-右移" class="headerlink" title="&gt;&gt; 右移"></a><code>&gt;&gt;</code> 右移</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1 0 0 0          8 二进制</span><br><span class="line">0 1 0 0          右移一位 4</span><br><span class="line">0 0 1 0          右移一位 2</span><br><span class="line">0 0 0 1          右移一位 1</span><br></pre></td></tr></table></figure><p>向右移动一位</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">8</span> &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="built_in">print</span>(a);</span><br></pre></td></tr></table></figure><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><ul><li><a href="https://github.com/ducafecat/dart-learn/blob/master/06-%E6%95%B0%E5%80%BC/number.dart" target="_blank" rel="noopener">number.dart</a></li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://www.dartlang.org/guides/language/language-tour" target="_blank" rel="noopener">language-tour</a></li><li><a href="https://api.dartlang.org/stable/2.0.0/dart-core/int-class.html" target="_blank" rel="noopener">int class</a></li><li><a href="https://api.dartlang.org/stable/2.0.0/dart-core/double-class.html" target="_blank" rel="noopener">double class</a></li><li><a href="https://api.dartlang.org/stable/2.0.0/dart-core/num-class.html" target="_blank" rel="noopener">num class</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;数值类型 int、double、num&lt;/li&gt;
&lt;li&gt;数值表示法 十进制、十六进制&lt;/li&gt;
&lt;li&gt;科学计
      
    
    </summary>
    
      <category term="Dart语言学习" scheme="https://ducafecat.tech/categories/Dart%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="dart" scheme="https://ducafecat.tech/tags/dart/"/>
    
  </entry>
  
  <entry>
    <title>Dart语言学习 - 05 常量</title>
    <link href="https://ducafecat.tech/2018/10/10/dart/dart-05-constant/"/>
    <id>https://ducafecat.tech/2018/10/10/dart/dart-05-constant/</id>
    <published>2018-10-10T06:49:26.000Z</published>
    <updated>2019-08-01T18:39:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>常量的定义方式</li><li><code>final</code> <code>const</code> 的区别</li></ul><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>Dart 2.0.0</li></ul><h1 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h1><h2 id="类型声明可以省略"><a href="#类型声明可以省略" class="headerlink" title="类型声明可以省略"></a>类型声明可以省略</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> <span class="built_in">String</span> a = <span class="string">'ducafecat'</span>;</span><br><span class="line"><span class="keyword">final</span> a = <span class="string">'ducafecat'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="built_in">String</span> a = <span class="string">'ducafecat'</span>;</span><br><span class="line"><span class="keyword">const</span> a = <span class="string">'ducafecat'</span>;</span><br></pre></td></tr></table></figure><h2 id="初始后不能再赋值"><a href="#初始后不能再赋值" class="headerlink" title="初始后不能再赋值"></a>初始后不能再赋值</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> a = <span class="string">'ducafecat'</span>;</span><br><span class="line">a = <span class="string">'abc'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> a = <span class="string">'ducafecat'</span>;</span><br><span class="line">a = <span class="string">'abc'</span>;</span><br></pre></td></tr></table></figure><h2 id="不能和-var-同时使用"><a href="#不能和-var-同时使用" class="headerlink" title="不能和 var 同时使用"></a>不能和 var 同时使用</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> <span class="keyword">var</span> a = <span class="string">'ducafecat'</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">var</span> a = <span class="string">'ducafecat'</span>;</span><br></pre></td></tr></table></figure><h2 id="const-赋值-申明可省略"><a href="#const-赋值-申明可省略" class="headerlink" title="const 赋值 申明可省略"></a>const 赋值 申明可省略</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="built_in">List</span> ls = <span class="keyword">const</span> [<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>];</span><br><span class="line"><span class="keyword">const</span> <span class="built_in">List</span> ls = [<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>];</span><br></pre></td></tr></table></figure><h1 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h1><h2 id="需要确定的值"><a href="#需要确定的值" class="headerlink" title="需要确定的值"></a>需要确定的值</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> dt = <span class="built_in">DateTime</span>.now();</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> dt = <span class="keyword">const</span> <span class="built_in">DateTime</span>.now();</span><br></pre></td></tr></table></figure><h2 id="不可变性可传递"><a href="#不可变性可传递" class="headerlink" title="不可变性可传递"></a>不可变性可传递</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> <span class="built_in">List</span> ls = [<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>];</span><br><span class="line">ls[<span class="number">1</span>] = <span class="number">44</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="built_in">List</span> ls = [<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>];</span><br><span class="line">ls[<span class="number">1</span>] = <span class="number">44</span>;</span><br></pre></td></tr></table></figure><h2 id="内存中重复创建"><a href="#内存中重复创建" class="headerlink" title="内存中重复创建"></a>内存中重复创建</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> a1 = [<span class="number">11</span> , <span class="number">22</span>];</span><br><span class="line"><span class="keyword">final</span> a2 = [<span class="number">11</span> , <span class="number">22</span>];</span><br><span class="line"><span class="built_in">print</span>(identical(a1, a2));</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> a1 = [<span class="number">11</span> , <span class="number">22</span>];</span><br><span class="line"><span class="keyword">const</span> a2 = [<span class="number">11</span> , <span class="number">22</span>];</span><br><span class="line"><span class="built_in">print</span>(identical(a1, a2));</span><br></pre></td></tr></table></figure><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><ul><li><a href="https://github.com/ducafecat/dart-learn/blob/master/05-%E5%B8%B8%E9%87%8F/constant.dart" target="_blank" rel="noopener">constant.dart</a></li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://www.dartlang.org/guides/language/language-tour" target="_blank" rel="noopener">language-tour</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;常量的定义方式&lt;/li&gt;
&lt;li&gt;&lt;code&gt;final&lt;/code&gt; &lt;code&gt;const&lt;/code&gt; 的
      
    
    </summary>
    
      <category term="Dart语言学习" scheme="https://ducafecat.tech/categories/Dart%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="dart" scheme="https://ducafecat.tech/tags/dart/"/>
    
  </entry>
  
  <entry>
    <title>Dart语言学习 - 04 变量的两种类型</title>
    <link href="https://ducafecat.tech/2018/10/10/dart/dart-04-variables/"/>
    <id>https://ducafecat.tech/2018/10/10/dart/dart-04-variables/</id>
    <published>2018-10-10T02:18:25.000Z</published>
    <updated>2019-08-01T18:39:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>了解 <code>弱类型</code> <code>强类型</code></li><li>常见 <code>强类型</code> 有哪些</li><li>如何选着何时用那种类型</li></ul><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>Dart 2.0.0</li></ul><h1 id="弱类型"><a href="#弱类型" class="headerlink" title="弱类型"></a>弱类型</h1><h2 id="var"><a href="#var" class="headerlink" title="var"></a>var</h2><p>如果没有初始值，可以变成任何类型</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a;</span><br><span class="line">a = <span class="string">'ducafecat'</span>;</span><br><span class="line">a = <span class="number">123</span>;</span><br><span class="line">a = <span class="keyword">true</span>;</span><br><span class="line">a = &#123;<span class="string">'key'</span>: <span class="string">'val123'</span>&#125;;</span><br><span class="line">a = [<span class="string">'abc'</span>];</span><br></pre></td></tr></table></figure><h2 id="Object"><a href="#Object" class="headerlink" title="Object"></a>Object</h2><p>动态任意类型，编译阶段检查类型</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Object</span> a = <span class="string">'doucafecat'</span>;</span><br><span class="line">a = <span class="number">123</span>;</span><br><span class="line">a = [<span class="number">2222</span>];</span><br><span class="line">a.p();</span><br></pre></td></tr></table></figure><h2 id="dynamic"><a href="#dynamic" class="headerlink" title="dynamic"></a>dynamic</h2><p>动态任意类型，编译阶段不检查检查类型</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">dynamic</span> a = <span class="string">'doucafecat'</span>;</span><br><span class="line">a = <span class="number">123</span>;</span><br><span class="line">a = [<span class="number">1111</span>];</span><br><span class="line">a.p();</span><br></pre></td></tr></table></figure><h2 id="比较-var-与-dynamic、Object"><a href="#比较-var-与-dynamic、Object" class="headerlink" title="比较 var 与 dynamic、Object"></a>比较 var 与 dynamic、Object</h2><p>唯一区别 var 如果有初始值，类型被锁定</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="string">'ducafecat'</span>;</span><br><span class="line"><span class="built_in">dynamic</span> a = <span class="string">'doucafecat'</span>;</span><br><span class="line"><span class="built_in">Object</span> a = <span class="string">'doucafecat'</span>;</span><br><span class="line">a = <span class="number">123</span>;</span><br></pre></td></tr></table></figure><h1 id="强类型"><a href="#强类型" class="headerlink" title="强类型"></a>强类型</h1><h2 id="申明类型"><a href="#申明类型" class="headerlink" title="申明类型"></a>申明类型</h2><p>声明后，类型被锁定</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">String</span> a;</span><br><span class="line">a = <span class="string">'ducafecat'</span>;</span><br><span class="line">a = <span class="number">123</span>;</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2018-10-10-11-24-04.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="常见类型"><a href="#常见类型" class="headerlink" title="常见类型"></a>常见类型</h2><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>num</td><td>数字</td></tr><tr><td>int</td><td>整型</td></tr><tr><td>double</td><td>浮点</td></tr><tr><td>bool</td><td>布尔</td></tr><tr><td>String</td><td>字符串</td></tr><tr><td>StringBuffer</td><td>字符串 buffer</td></tr><tr><td>DateTime</td><td>时间日期</td></tr><tr><td>Duration</td><td>时间区间</td></tr><tr><td>List</td><td>列表</td></tr><tr><td>Sets</td><td>无重复队列</td></tr><tr><td>Maps</td><td>kv 容器</td></tr><tr><td>enum</td><td>枚举</td></tr></tbody></table><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">String</span> a = <span class="string">'doucafecat'</span>;</span><br><span class="line"><span class="built_in">int</span> i = <span class="number">123</span>;</span><br><span class="line"><span class="built_in">double</span> d = <span class="number">0.12</span>;</span><br><span class="line"><span class="built_in">bool</span> b = <span class="keyword">true</span>;</span><br><span class="line"><span class="built_in">DateTime</span> dt = <span class="keyword">new</span> <span class="built_in">DateTime</span>.now();</span><br><span class="line"><span class="built_in">List</span> l = [ a, i, d, b, dt];</span><br></pre></td></tr></table></figure><h1 id="默认值"><a href="#默认值" class="headerlink" title="默认值"></a>默认值</h1><p>一切都是 <code>Object</code> , 变量声明后默认都是 <code>null</code></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a;</span><br><span class="line"><span class="built_in">String</span> a;</span><br><span class="line"><span class="built_in">print</span>(a);</span><br><span class="line"><span class="keyword">assert</span>(a == <span class="keyword">null</span>);</span><br></pre></td></tr></table></figure><blockquote><p><code>assert</code> 检查点函数，如果不符合条件直接抛出错误并终止程序进程</p></blockquote><h1 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h1><ul><li>在写 API 接口的时候，请用 <code>强类型</code>，一旦不符合约定，接收数据时能方便排查故障</li><li>你在写个小工具时，可以用 <code>弱类型</code>，这样代码写起来很快，类型自动适应</li></ul><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><ul><li><a href="https://github.com/ducafecat/dart-learn/tree/master/04-%E5%8F%98%E9%87%8F%E7%9A%84%E4%B8%A4%E7%A7%8D%E7%B1%BB%E5%9E%8B" target="_blank" rel="noopener">variables.dart</a></li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://www.dartlang.org/guides/language/language-tour" target="_blank" rel="noopener">language-tour</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;了解 &lt;code&gt;弱类型&lt;/code&gt; &lt;code&gt;强类型&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;常见 &lt;code&gt;强
      
    
    </summary>
    
      <category term="Dart语言学习" scheme="https://ducafecat.tech/categories/Dart%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="dart" scheme="https://ducafecat.tech/tags/dart/"/>
    
  </entry>
  
  <entry>
    <title>Dart语言学习 - 03 MacOS 下安装 SDK</title>
    <link href="https://ducafecat.tech/2018/09/30/dart/dart-03-install-macos/"/>
    <id>https://ducafecat.tech/2018/09/30/dart/dart-03-install-macos/</id>
    <published>2018-09-30T07:41:49.000Z</published>
    <updated>2019-08-01T18:39:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>配置 Dart 开发环境</li><li>解决墙内问题</li></ul><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>MacOS</li><li>Dart SDK 2.0.0</li></ul><h1 id="下载-SDK"><a href="#下载-SDK" class="headerlink" title="下载 SDK"></a>下载 SDK</h1><h2 id="SDK-列表"><a href="#SDK-列表" class="headerlink" title="SDK 列表"></a><a href="https://webdev.dartlang.org/tools/sdk/archive" target="_blank" rel="noopener">SDK 列表</a></h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2018-09-30-16-07-22.png" alt="archive" title>                </div>                <div class="image-caption">archive</div>            </figure><h2 id="下载-URL"><a href="#下载-URL" class="headerlink" title="下载 URL"></a>下载 URL</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://storage.googleapis.com/dart-archive/channels/stable/release/2.0.0/sdk/dartsdk-macos-x64-release.zip</span><br></pre></td></tr></table></figure><p><strong> 墙内请替换域名 <code>storage.flutter-io.cn</code> </strong></p><h2 id="替换后-URL"><a href="#替换后-URL" class="headerlink" title="替换后 URL"></a>替换后 URL</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://storage.flutter-io.cn/dart-archive/channels/stable/release/2.0.0/sdk/dartsdk-macos-x64-release.zip</span><br></pre></td></tr></table></figure><h1 id="解压到磁盘"><a href="#解压到磁盘" class="headerlink" title="解压到磁盘"></a>解压到磁盘</h1><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2018-09-30-16-09-28.png" alt title>                </div>                <div class="image-caption"></div>            </figure><p>磁盘位置 <code>~/Documents/sdk/dart-sdk</code></p><h1 id="配置-VSCode-IDE"><a href="#配置-VSCode-IDE" class="headerlink" title="配置 VSCode IDE"></a>配置 VSCode IDE</h1><h2 id="下载链接"><a href="#下载链接" class="headerlink" title="下载链接"></a><a href="https://code.visualstudio.com/" target="_blank" rel="noopener">下载链接</a></h2><h2 id="安装-Dart-插件"><a href="#安装-Dart-插件" class="headerlink" title="安装 Dart 插件"></a>安装 Dart 插件</h2><h1 id="编写-HelloWord"><a href="#编写-HelloWord" class="headerlink" title="编写 HelloWord"></a>编写 HelloWord</h1><ul><li><p>新建目录 <code>dart-learn</code></p></li><li><p>编写文件 <code>hello.dart</code></p></li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> main() &#123;</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">'hello word!'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="调试运行"><a href="#调试运行" class="headerlink" title="调试运行"></a>调试运行</h2><p>配置文件 <code>launch.json</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="comment">// Use IntelliSense to learn about possible attributes.</span></span><br><span class="line">  <span class="comment">// Hover to view descriptions of existing attributes.</span></span><br><span class="line">  <span class="comment">// For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387</span></span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"0.2.0"</span>,</span><br><span class="line">  <span class="attr">"configurations"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"name"</span>: <span class="string">"Dart"</span>,</span><br><span class="line">      <span class="attr">"program"</span>: <span class="string">"$&#123;file&#125;"</span>,</span><br><span class="line">      <span class="attr">"request"</span>: <span class="string">"launch"</span>,</span><br><span class="line">      <span class="attr">"type"</span>: <span class="string">"dart"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="配置命令行模式"><a href="#配置命令行模式" class="headerlink" title="配置命令行模式"></a>配置命令行模式</h1><h2 id="设置环境变量"><a href="#设置环境变量" class="headerlink" title="设置环境变量"></a>设置环境变量</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打开配置文件</span></span><br><span class="line">vim ~/.bash_profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 尾部加入配置</span></span><br><span class="line"><span class="built_in">export</span> PATH=~/Documents/sdk/dart-sdk/bin:<span class="variable">$PATH</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重载配置文件</span></span><br><span class="line"><span class="built_in">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2018-09-30-16-23-57.png" alt title>                </div>                <div class="image-caption"></div>            </figure><p>新开命令行窗口</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dart --version</span><br><span class="line">Dart VM version: 2.0.0 (Fri Aug 3 10:53:23 2018 +0200) on <span class="string">"macos_x64"</span></span><br></pre></td></tr></table></figure><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://webdev.dartlang.org/tools/sdk/archive" target="_blank" rel="noopener">Dart SDK Archive</a></li><li><a href="https://github.com/flutter/flutter/wiki/Using-Flutter-in-China" target="_blank" rel="noopener">Using-Flutter-in-China</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;配置 Dart 开发环境&lt;/li&gt;
&lt;li&gt;解决墙内问题&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;环境&quot;&gt;&lt;a h
      
    
    </summary>
    
      <category term="Dart语言学习" scheme="https://ducafecat.tech/categories/Dart%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="dart" scheme="https://ducafecat.tech/tags/dart/"/>
    
  </entry>
  
  <entry>
    <title>Dart语言学习 - 02 Windows 下安装 SDK</title>
    <link href="https://ducafecat.tech/2018/09/30/dart/dart-02-install-windows/"/>
    <id>https://ducafecat.tech/2018/09/30/dart/dart-02-install-windows/</id>
    <published>2018-09-30T06:41:49.000Z</published>
    <updated>2019-08-01T18:39:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>配置 Dart 开发环境</li><li>解决墙内问题</li></ul><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>Windows 10</li><li>Dart SDK 2.0.0</li></ul><h1 id="下载-SDK"><a href="#下载-SDK" class="headerlink" title="下载 SDK"></a>下载 SDK</h1><h2 id="SDK-列表"><a href="#SDK-列表" class="headerlink" title="SDK 列表"></a><a href="https://webdev.dartlang.org/tools/sdk/archive" target="_blank" rel="noopener">SDK 列表</a></h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2018-09-30-14-54-15.png" alt="archive" title>                </div>                <div class="image-caption">archive</div>            </figure><h2 id="源下载-URL"><a href="#源下载-URL" class="headerlink" title="源下载 URL"></a>源下载 URL</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://storage.googleapis.com/dart-archive/channels/stable/release/2.0.0/sdk/dartsdk-windows-x64-release.zip</span><br></pre></td></tr></table></figure><p><strong> 墙内请替换域名 <code>storage.flutter-io.cn</code> </strong></p><h2 id="替换后-URL"><a href="#替换后-URL" class="headerlink" title="替换后 URL"></a>替换后 URL</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://storage.flutter-io.cn/dart-archive/channels/stable/release/2.0.0/sdk/dartsdk-windows-x64-release.zip</span><br></pre></td></tr></table></figure><h1 id="解压到磁盘"><a href="#解压到磁盘" class="headerlink" title="解压到磁盘"></a>解压到磁盘</h1><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2018-09-30-15-24-14.png" alt title>                </div>                <div class="image-caption"></div>            </figure><p>磁盘位置 <code>C:\sdk\dart-sdk</code></p><h1 id="配置-VSCode-IDE"><a href="#配置-VSCode-IDE" class="headerlink" title="配置 VSCode IDE"></a>配置 VSCode IDE</h1><h2 id="下载链接"><a href="#下载链接" class="headerlink" title="下载链接"></a><a href="https://code.visualstudio.com/" target="_blank" rel="noopener">下载链接</a></h2><h2 id="安装-Dart-插件"><a href="#安装-Dart-插件" class="headerlink" title="安装 Dart 插件"></a>安装 Dart 插件</h2><h1 id="编写-HelloWord"><a href="#编写-HelloWord" class="headerlink" title="编写 HelloWord"></a>编写 HelloWord</h1><ul><li><p>新建目录 <code>dart-learn</code></p></li><li><p>编写文件 <code>hello.dart</code></p></li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> main() &#123;</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">'hello word!'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="调试运行"><a href="#调试运行" class="headerlink" title="调试运行"></a>调试运行</h2><p>配置文件 <code>launch.json</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="comment">// Use IntelliSense to learn about possible attributes.</span></span><br><span class="line">  <span class="comment">// Hover to view descriptions of existing attributes.</span></span><br><span class="line">  <span class="comment">// For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387</span></span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"0.2.0"</span>,</span><br><span class="line">  <span class="attr">"configurations"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"name"</span>: <span class="string">"Dart"</span>,</span><br><span class="line">      <span class="attr">"program"</span>: <span class="string">"$&#123;file&#125;"</span>,</span><br><span class="line">      <span class="attr">"request"</span>: <span class="string">"launch"</span>,</span><br><span class="line">      <span class="attr">"type"</span>: <span class="string">"dart"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="配置命令行模式"><a href="#配置命令行模式" class="headerlink" title="配置命令行模式"></a>配置命令行模式</h1><h2 id="设置环境变量"><a href="#设置环境变量" class="headerlink" title="设置环境变量"></a>设置环境变量</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2018-09-30-15-01-44.png" alt title>                </div>                <div class="image-caption"></div>            </figure><p>环境变量 <code>PATH</code> 新增 <code>C:\sdk\dart-sdk\bin</code></p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2018-09-30-15-08-44.png" alt title>                </div>                <div class="image-caption"></div>            </figure><p>新开命令行窗口</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dart --version</span><br><span class="line">Dart VM version: 2.0.0 (Fri Aug 3 10:53:23 2018 +0200) on <span class="string">"windows_x64"</span></span><br></pre></td></tr></table></figure><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://webdev.dartlang.org/tools/sdk/archive" target="_blank" rel="noopener">Dart SDK Archive</a></li><li><a href="https://github.com/flutter/flutter/wiki/Using-Flutter-in-China" target="_blank" rel="noopener">Using-Flutter-in-China</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;配置 Dart 开发环境&lt;/li&gt;
&lt;li&gt;解决墙内问题&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;环境&quot;&gt;&lt;a h
      
    
    </summary>
    
      <category term="Dart语言学习" scheme="https://ducafecat.tech/categories/Dart%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="dart" scheme="https://ducafecat.tech/tags/dart/"/>
    
  </entry>
  
  <entry>
    <title>Dart语言学习 - 01 前言</title>
    <link href="https://ducafecat.tech/2018/09/30/dart/dart-01-introduce/"/>
    <id>https://ducafecat.tech/2018/09/30/dart/dart-01-introduce/</id>
    <published>2018-09-30T02:00:48.000Z</published>
    <updated>2019-08-01T18:39:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="本节目标"><a href="#本节目标" class="headerlink" title="本节目标"></a>本节目标</h1><ul><li>为什么学习 Dart</li><li>课程计划</li><li>如果获取课程资料、代码、视频</li></ul><h1 id="2018-Google-开发者大会"><a href="#2018-Google-开发者大会" class="headerlink" title="2018 Google 开发者大会"></a>2018 Google 开发者大会</h1><h2 id="大会官网"><a href="#大会官网" class="headerlink" title="大会官网"></a><a href="http://www.google.cn/events/developerdays2018/" target="_blank" rel="noopener">大会官网</a></h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2018-10-09-09-45-04.png" alt="首页简介" title>                </div>                <div class="image-caption">首页简介</div>            </figure><h2 id="bilibili-视频"><a href="#bilibili-视频" class="headerlink" title="bilibili 视频"></a><a href="https://space.bilibili.com/64169458/#/" target="_blank" rel="noopener">bilibili 视频</a></h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2018-10-09-09-45-53.png" alt="介绍视频" title>                </div>                <div class="image-caption">介绍视频</div>            </figure><h1 id="Flutter"><a href="#Flutter" class="headerlink" title="Flutter"></a>Flutter</h1><h2 id="官网"><a href="#官网" class="headerlink" title="官网"></a><a href="https://flutter.io/" target="_blank" rel="noopener">官网</a></h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2018-09-30-11-26-41.png" alt="Flutter" title>                </div>                <div class="image-caption">Flutter</div>            </figure><h1 id="Dart"><a href="#Dart" class="headerlink" title="Dart"></a>Dart</h1><h2 id="官网-1"><a href="#官网-1" class="headerlink" title="官网"></a><a href="https://www.dartlang.org/" target="_blank" rel="noopener">官网</a></h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2018-09-30-11-24-24.png" alt="homepage" title>                </div>                <div class="image-caption">homepage</div>            </figure><h2 id="多平台开发"><a href="#多平台开发" class="headerlink" title="多平台开发"></a><a href="https://www.dartlang.org/guides/platforms" target="_blank" rel="noopener">多平台开发</a></h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2018-09-30-11-25-34.png" alt="Platforms" title>                </div>                <div class="image-caption">Platforms</div>            </figure><h1 id="课程计划"><a href="#课程计划" class="headerlink" title="课程计划"></a>课程计划</h1><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">## 前言</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 安装&amp;配置 - Windows</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 安装&amp;配置 - MacOS</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 变量 - 两种方式</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 变量 - 常量</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 类型 - 数字</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 类型 - Bool</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 类型 - 字符串</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 类型 - 日期</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 类型 - List</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 类型 - Map</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 类型 - Set</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 类型 - Runes</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 类型 - Symbol</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 类型 - Enum</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 注释 - Comments</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 函数</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 操作符</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 流程控制</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 异常</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 类 - Class</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 类 - getter、setter</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 类 - 静态变量、方法</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 类 - Abstract 抽象类、方法</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 类 - Interface 接口</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 类 - extends 继承</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 类 - mixin 混合</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 类 - 工厂构造函数</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 类库 - Libraries</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 泛型 - Generics</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 异步 - Asynchrony</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 生成器 - Generators</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 可调用 - Callable</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 隔离 - Isolate</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 类型定义 - Typedef</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 注解 - Metadata</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 代码规范 - 代码风格</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 代码规范 - 文档注释</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 代码规范 - 最佳实践</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 代码规范 - 设计指南</span></span><br></pre></td></tr></table></figure><h1 id="课程资料"><a href="#课程资料" class="headerlink" title="课程资料"></a>课程资料</h1><h2 id="主站-https-ducafecat-tech"><a href="#主站-https-ducafecat-tech" class="headerlink" title="主站 https://ducafecat.tech"></a><a href="https://ducafecat.tech/">主站 https://ducafecat.tech</a></h2><h2 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h2><ul><li>视频<ul><li><a href>youtube</a></li><li><a href>优酷</a></li></ul></li><li><a href="https://ducafecat.tech/categories/Dart%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/">文档</a></li><li><a href="https://github.com/ducafecat/dart-learn" target="_blank" rel="noopener">代码</a></li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://www.dartlang.org/" target="_blank" rel="noopener">Dart 官网</a></li><li><a href="https://flutter.io/" target="_blank" rel="noopener">Flutter 官网</a></li><li><a href="http://www.google.cn/events/developerdays2018/" target="_blank" rel="noopener">2018 Google 开发者大会</a></li><li><a href="https://space.bilibili.com/64169458/#/" target="_blank" rel="noopener">bilibili</a></li></ul><hr><p>© 猫哥</p><p><a href="https://ducafecat.tech/">https://ducafecat.tech</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;本节目标&quot;&gt;&lt;a href=&quot;#本节目标&quot; class=&quot;headerlink&quot; title=&quot;本节目标&quot;&gt;&lt;/a&gt;本节目标&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;为什么学习 Dart&lt;/li&gt;
&lt;li&gt;课程计划&lt;/li&gt;
&lt;li&gt;如果获取课程资料、代码、视频&lt;/li&gt;
&lt;/
      
    
    </summary>
    
      <category term="Dart语言学习" scheme="https://ducafecat.tech/categories/Dart%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="dart" scheme="https://ducafecat.tech/tags/dart/"/>
    
  </entry>
  
</feed>
